cset: moving following pidspec: 12353
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.815173821 seconds)
loading group "string"... done (took 0.295647405 seconds)
loading group "linalg"... done (took 3.862962229 seconds)
loading group "parallel"... done (took 0.042439426 seconds)
loading group "find"... done (took 1.158099579 seconds)
loading group "tuple"... done (took 0.878274043 seconds)
loading group "dates"... done (took 0.176214563 seconds)
loading group "micro"... done (took 0.047363088 seconds)
loading group "io"... done (took 1.281734991 seconds)
loading group "scalar"... done (took 4.082622065 seconds)
loading group "sparse"... done (took 3.840183002 seconds)
loading group "broadcast"... done (took 0.321383078 seconds)
loading group "union"... done (took 3.210692146 seconds)
loading group "simd"... done (took 0.43108672 seconds)
loading group "random"... done (took 2.148535016 seconds)
loading group "problem"... done (took 1.500157889 seconds)
loading group "array"... done (took 4.623160865 seconds)
loading group "misc"... done (took 0.977213692 seconds)
loading group "sort"... done (took 0.342599141 seconds)
loading group "collection"... done (took 6.899490133 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.614791773 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.090987247 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.089208023 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.085506807 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.125079 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.087740684 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.089995628 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.047427831 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.341151055 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.291824773 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.075248692 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.477172502 seconds)
done (took 5.417806446 seconds)
(2/20) benchmarking "string"...
  (1/7) benchmarking "join"...
  done (took 0.290573122 seconds)
  (2/7) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.035876218 seconds)
    (2/2) benchmarking "String"...
    done (took 0.028509669 seconds)
  done (took 0.707431387 seconds)
  (3/7) benchmarking "==(::SubString, ::String)"...
    (1/3) benchmarking "equal"...
    done (took 0.0383205 seconds)
    (2/3) benchmarking "different length"...
    done (took 0.03556253 seconds)
    (3/3) benchmarking "different"...
    done (took 0.033164731 seconds)
  done (took 0.723007534 seconds)
  (4/7) benchmarking "replace"...
  done (took 0.024731971 seconds)
  (5/7) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.103104603 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.02526507 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.026593205 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.026562788 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.025801995 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.025577491 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.026588119 seconds)
  done (took 0.880016059 seconds)
  (6/7) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.033373797 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.028740963 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.025474403 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.028280957 seconds)
  done (took 0.736107116 seconds)
  (7/7) benchmarking "==(::AbstractString, ::AbstractString)"...
    (1/4) benchmarking "identical"...
    done (took 0.024338096 seconds)
    (2/4) benchmarking "equal"...
    done (took 0.021588226 seconds)
    (3/4) benchmarking "different length"...
    done (took 0.021061409 seconds)
    (4/4) benchmarking "different"...
    done (took 0.021046659 seconds)
  done (took 0.695087221 seconds)
done (took 4.681802128 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 1.04832833 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.201674148 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.266172964 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.426305134 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.094551832 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.171171791 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 1.087460288 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 3.603008961 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.194671078 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.060525901 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.069959917 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.342740672 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.105353533 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 1.097783264 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.041597594 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.050254833 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.174495135 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 3.786569194 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.031075398 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.060877791 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.070987554 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.121818976 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.048011642 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.039650176 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.170927455 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.031106273 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.107011988 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.056331884 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.027470367 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.201742418 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.197341785 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 1.140501033 seconds)
  done (took 15.770398144 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.056103109 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.049560695 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.025329355 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.116248648 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.061207983 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.027485509 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.033602294 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.024627675 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.048636528 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.11569034 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.052748955 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.064942377 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.022440891 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.026864131 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.028225356 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.218593772 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.040777007 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.040371786 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.024704619 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.037245745 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.082923286 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.037970142 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.039216245 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.039356183 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.121713693 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.191898584 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.07447187 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.084783194 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.025693478 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.040191387 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.108498777 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.130290593 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.024955831 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.023417366 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.101922194 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.072969804 seconds)
  done (took 3.023791982 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.254380193 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/118) benchmarking ("cumsum!", "Int32", 1024)...
    done (took 0.084885051 seconds)
    (2/118) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.119649666 seconds)
    (3/118) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.051737396 seconds)
    (4/118) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.098800022 seconds)
    (5/118) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.021187977 seconds)
    (6/118) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.080900335 seconds)
    (7/118) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.02470044 seconds)
    (8/118) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.037329185 seconds)
    (9/118) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.217736356 seconds)
    (10/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.906905845 seconds)
    (11/118) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.650570253 seconds)
    (12/118) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.096053432 seconds)
    (13/118) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.067689688 seconds)
    (14/118) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.028643352 seconds)
    (15/118) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.029226189 seconds)
    (16/118) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.024767502 seconds)
    (17/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.774969231 seconds)
    (18/118) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.07533742 seconds)
    (19/118) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.086431989 seconds)
    (20/118) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.036479348 seconds)
    (21/118) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.032134397 seconds)
    (22/118) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.033492412 seconds)
    (23/118) benchmarking ("cumsum!", "Float64", 1024)...
    done (took 0.023863084 seconds)
    (24/118) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.030686137 seconds)
    (25/118) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.023058179 seconds)
    (26/118) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.029881283 seconds)
    (27/118) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.051188609 seconds)
    (28/118) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.638689243 seconds)
    (29/118) benchmarking ("3-arg mul!", 3)...
    done (took 0.051569995 seconds)
    (30/118) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.088530588 seconds)
    (31/118) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.028146564 seconds)
    (32/118) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.098954691 seconds)
    (33/118) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.148463706 seconds)
    (34/118) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.026381159 seconds)
    (35/118) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.084078865 seconds)
    (36/118) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.202504169 seconds)
    (37/118) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.061108509 seconds)
    (38/118) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.118085275 seconds)
    (39/118) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.027266757 seconds)
    (40/118) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.021492642 seconds)
    (41/118) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.141661504 seconds)
    (42/118) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.030223809 seconds)
    (43/118) benchmarking ("5-arg mul!", 2)...
    done (took 0.619908284 seconds)
    (44/118) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.025434372 seconds)
    (45/118) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.046498164 seconds)
    (46/118) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.098402548 seconds)
    (47/118) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.087973886 seconds)
    (48/118) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.024369159 seconds)
    (49/118) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.023333413 seconds)
    (50/118) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.159956392 seconds)
    (51/118) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.221791784 seconds)
    (52/118) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.043048925 seconds)
    (53/118) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.965534593 seconds)
    (54/118) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.180827868 seconds)
    (55/118) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.024084301 seconds)
    (56/118) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.29216015 seconds)
    (57/118) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.061047279 seconds)
    (58/118) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.029069035 seconds)
    (59/118) benchmarking ("cumsum!", "Int32", 256)...
    done (took 0.022424743 seconds)
    (60/118) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.021462357 seconds)
    (61/118) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.824049993 seconds)
    (62/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.084744149 seconds)
    (63/118) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.025958124 seconds)
    (64/118) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.024954454 seconds)
    (65/118) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.027005201 seconds)
    (66/118) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.025865304 seconds)
    (67/118) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.668951399 seconds)
    (68/118) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.024331027 seconds)
    (69/118) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.906626582 seconds)
    (70/118) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.029024265 seconds)
    (71/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.041887274 seconds)
    (72/118) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.033656502 seconds)
    (73/118) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.029473693 seconds)
    (74/118) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.039497282 seconds)
    (75/118) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.039064908 seconds)
    (76/118) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.059730847 seconds)
    (77/118) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.025338894 seconds)
    (78/118) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.032612368 seconds)
    (79/118) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.024716451 seconds)
    (80/118) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.023802986 seconds)
    (81/118) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.024556853 seconds)
    (82/118) benchmarking ("3-arg mul!", 2)...
    done (took 0.021453895 seconds)
    (83/118) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.061420078 seconds)
    (84/118) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.412686857 seconds)
    (85/118) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.02725418 seconds)
    (86/118) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.028766008 seconds)
    (87/118) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.022699693 seconds)
    (88/118) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.057457468 seconds)
    (89/118) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.075312323 seconds)
    (90/118) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.026359523 seconds)
    (91/118) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.023846045 seconds)
    (92/118) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.082948923 seconds)
    (93/118) benchmarking ("cumsum!", "Int64", 1024)...
    done (took 0.027932837 seconds)
    (94/118) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.028582371 seconds)
    (95/118) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.024371122 seconds)
    (96/118) benchmarking ("cumsum!", "Float64", 256)...
    done (took 0.021212781 seconds)
    (97/118) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.024357992 seconds)
    (98/118) benchmarking ("log", "Hermitian", 256)...
    done (took 0.094001862 seconds)
    (99/118) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.034457254 seconds)
    (100/118) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.107450929 seconds)
    (101/118) benchmarking ("cumsum!", "Float32", 256)...
    done (took 0.046646778 seconds)
    (102/118) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.024411655 seconds)
    (103/118) benchmarking ("cumsum!", "Int64", 256)...
    done (took 0.02182138 seconds)
    (104/118) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.671516119 seconds)
    (105/118) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.073387779 seconds)
    (106/118) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.029020965 seconds)
    (107/118) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.090073821 seconds)
    (108/118) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.041014553 seconds)
    (109/118) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.03073073 seconds)
    (110/118) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.497489028 seconds)
    (111/118) benchmarking ("cumsum!", "Float32", 1024)...
    done (took 0.02201543 seconds)
    (112/118) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.022445933 seconds)
    (113/118) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.02889107 seconds)
    (114/118) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.024192912 seconds)
    (115/118) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.026057606 seconds)
    (116/118) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.024174062 seconds)
    (117/118) benchmarking ("5-arg mul!", 3)...
    done (took 0.137877801 seconds)
    (118/118) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.038374477 seconds)
  done (took 22.338904921 seconds)
done (took 42.988574772 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.147698821 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.039802118 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.039812216 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.039654538 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.040322903 seconds)
  done (took 0.950021621 seconds)
done (took 1.683170889 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/41) benchmarking ("> q0.5", "Array{Int64,1}")...
    done (took 0.113394461 seconds)
    (2/41) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.073337175 seconds)
    (3/41) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.023975133 seconds)
    (4/41) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.071106875 seconds)
    (5/41) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.023923945 seconds)
    (6/41) benchmarking ("> q0.95", "Array{Float32,1}")...
    done (took 0.072836609 seconds)
    (7/41) benchmarking ("> q0.99", "Array{Int64,1}")...
    done (took 0.030429023 seconds)
    (8/41) benchmarking ("> q0.5", "Array{Float64,1}")...
    done (took 0.07380391 seconds)
    (9/41) benchmarking ("> q0.8", "Array{Float32,1}")...
    done (took 0.031710431 seconds)
    (10/41) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.069548532 seconds)
    (11/41) benchmarking ("> q0.95", "Array{Bool,1}")...
    done (took 0.076125297 seconds)
    (12/41) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.024067098 seconds)
    (13/41) benchmarking ("> q0.8", "Array{UInt64,1}")...
    done (took 0.080202503 seconds)
    (14/41) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.067954194 seconds)
    (15/41) benchmarking ("> q0.99", "Array{Bool,1}")...
    done (took 0.029949024 seconds)
    (16/41) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.069636214 seconds)
    (17/41) benchmarking ("> q0.99", "Array{UInt8,1}")...
    done (took 0.073032041 seconds)
    (18/41) benchmarking ("> q0.99", "Array{UInt64,1}")...
    done (took 0.03150411 seconds)
    (19/41) benchmarking ("> q0.8", "Array{Int64,1}")...
    done (took 0.031309638 seconds)
    (20/41) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.044197355 seconds)
    (21/41) benchmarking ("> q0.8", "Array{UInt8,1}")...
    done (took 0.030069698 seconds)
    (22/41) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.070953339 seconds)
    (23/41) benchmarking ("> q0.8", "Array{Int8,1}")...
    done (took 0.071082009 seconds)
    (24/41) benchmarking ("> q0.5", "Array{UInt8,1}")...
    done (took 0.030282323 seconds)
    (25/41) benchmarking ("> q0.95", "Array{UInt64,1}")...
    done (took 0.030073057 seconds)
    (26/41) benchmarking ("> q0.5", "Array{Int8,1}")...
    done (took 0.030081258 seconds)
    (27/41) benchmarking ("> q0.95", "Array{Int8,1}")...
    done (took 0.030514876 seconds)
    (28/41) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.027909741 seconds)
    (29/41) benchmarking ("> q0.99", "Array{Float64,1}")...
    done (took 0.032493469 seconds)
    (30/41) benchmarking ("> q0.5", "Array{UInt64,1}")...
    done (took 0.030498817 seconds)
    (31/41) benchmarking ("> q0.95", "Array{Int64,1}")...
    done (took 0.030181068 seconds)
    (32/41) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.06655733 seconds)
    (33/41) benchmarking ("> q0.99", "Array{Int8,1}")...
    done (took 0.028512937 seconds)
    (34/41) benchmarking ("> q0.5", "Array{Float32,1}")...
    done (took 0.030144409 seconds)
    (35/41) benchmarking ("> q0.95", "Array{Float64,1}")...
    done (took 0.026394965 seconds)
    (36/41) benchmarking ("> q0.95", "Array{UInt8,1}")...
    done (took 0.02589908 seconds)
    (37/41) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.020686191 seconds)
    (38/41) benchmarking ("> q0.5", "Array{Bool,1}")...
    done (took 0.026115919 seconds)
    (39/41) benchmarking ("> q0.8", "Array{Bool,1}")...
    done (took 0.0257305 seconds)
    (40/41) benchmarking ("> q0.8", "Array{Float64,1}")...
    done (took 0.026441782 seconds)
    (41/41) benchmarking ("> q0.99", "Array{Float32,1}")...
    done (took 0.026615001 seconds)
  done (took 2.558083394 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.049696226 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.047524893 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.034620333 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.047917573 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.024030678 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.04888911 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.047568831 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.053996206 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.047341169 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.035085385 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.023790973 seconds)
  done (took 1.137554598 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.048406454 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.048233087 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.031005003 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.045925933 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.02308687 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.045634341 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.046784879 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.049659369 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.04720167 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.037236129 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.02313129 seconds)
  done (took 1.154041625 seconds)
done (took 5.506666512 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/2) benchmarking "longtuple"...
    done (took 0.057491745 seconds)
    (2/2) benchmarking "11899"...
    done (took 0.023156364 seconds)
  done (took 0.771231476 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", "(8, 8)", "(8, 8)")...
    done (took 0.494840681 seconds)
    (2/8) benchmarking ("matvec", "(2, 2)", "(2,)")...
    done (took 0.12982635 seconds)
    (3/8) benchmarking ("matvec", "(4, 4)", "(4,)")...
    done (took 0.032307409 seconds)
    (4/8) benchmarking ("matvec", "(16, 16)", "(16,)")...
    done (took 0.193226449 seconds)
    (5/8) benchmarking ("matmat", "(2, 2)", "(2, 2)")...
    done (took 0.026398342 seconds)
    (6/8) benchmarking ("matvec", "(8, 8)", "(8,)")...
    done (took 0.057311223 seconds)
    (7/8) benchmarking ("matmat", "(16, 16)", "(16, 16)")...
    done (took 7.396741441 seconds)
    (8/8) benchmarking ("matmat", "(4, 4)", "(4, 4)")...
    done (took 0.050681418 seconds)
  done (took 9.085866171 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, "Float32")...
    done (took 0.076277132 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, "Float64")...
    done (took 0.024822289 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, "Float64")...
    done (took 0.026320504 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, "Float32")...
    done (took 0.024554383 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, "Float64")...
    done (took 0.024984215 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, "Float32")...
    done (took 0.026048659 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, "Float32")...
    done (took 0.024682373 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, "Float64")...
    done (took 0.026497356 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, "Float64")...
    done (took 0.025588096 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, "Float32")...
    done (took 0.026337159 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, "Float64")...
    done (took 0.025655764 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, "Float64")...
    done (took 0.026636914 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, "Float64")...
    done (took 0.025235005 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, "Float32")...
    done (took 0.025843428 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, "Float32")...
    done (took 0.024540584 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, "Float32")...
    done (took 0.026684345 seconds)
  done (took 1.294717139 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sum", "(2, 2)")...
    done (took 0.031533187 seconds)
    (2/24) benchmarking ("sumabs", "(8, 8)")...
    done (took 0.028771788 seconds)
    (3/24) benchmarking ("minimum", "(2, 2)")...
    done (took 0.029695863 seconds)
    (4/24) benchmarking ("sumabs", "(2,)")...
    done (took 0.019382647 seconds)
    (5/24) benchmarking ("sum", "(4, 4)")...
    done (took 0.031331559 seconds)
    (6/24) benchmarking ("sum", "(2,)")...
    done (took 0.029726009 seconds)
    (7/24) benchmarking ("sum", "(8, 8)")...
    done (took 0.032159095 seconds)
    (8/24) benchmarking ("minimum", "(16, 16)")...
    done (took 0.031317121 seconds)
    (9/24) benchmarking ("sum", "(8,)")...
    done (took 0.030587739 seconds)
    (10/24) benchmarking ("sumabs", "(4, 4)")...
    done (took 0.029192462 seconds)
    (11/24) benchmarking ("sumabs", "(2, 2)")...
    done (took 0.027596633 seconds)
    (12/24) benchmarking ("minimum", "(4, 4)")...
    done (took 0.030858622 seconds)
    (13/24) benchmarking ("sumabs", "(16,)")...
    done (took 0.029313126 seconds)
    (14/24) benchmarking ("sumabs", "(8,)")...
    done (took 0.028199465 seconds)
    (15/24) benchmarking ("minimum", "(16,)")...
    done (took 0.030307411 seconds)
    (16/24) benchmarking ("minimum", "(2,)")...
    done (took 0.019382735 seconds)
    (17/24) benchmarking ("minimum", "(8, 8)")...
    done (took 0.031060934 seconds)
    (18/24) benchmarking ("minimum", "(4,)")...
    done (took 0.029937365 seconds)
    (19/24) benchmarking ("minimum", "(8,)")...
    done (took 0.032464369 seconds)
    (20/24) benchmarking ("sum", "(16,)")...
    done (took 0.034270691 seconds)
    (21/24) benchmarking ("sum", "(4,)")...
    done (took 0.030628165 seconds)
    (22/24) benchmarking ("sumabs", "(4,)")...
    done (took 0.027897923 seconds)
    (23/24) benchmarking ("sum", "(16, 16)")...
    done (took 0.033786406 seconds)
    (24/24) benchmarking ("sumabs", "(16, 16)")...
    done (took 0.029307643 seconds)
  done (took 1.372047481 seconds)
done (took 13.224873804 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.077652177 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.034785842 seconds)
  done (took 0.796211298 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.027518531 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.02756902 seconds)
  done (took 0.711519274 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.032267872 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.017867772 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.037772376 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.027736293 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.018299173 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.017904812 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.036684694 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.018617306 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.018312108 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.018520447 seconds)
  done (took 0.901330654 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.021604491 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.028014737 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.023336627 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.021710524 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.024598463 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.018980182 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.023523872 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.019577876 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.028193026 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.018200918 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.022959542 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.039647315 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.023454177 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.041444 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.024172477 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.023349885 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.026802538 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.022882192 seconds)
  done (took 1.112729415 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.019600967 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.019055009 seconds)
  done (took 0.698602886 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.022416265 seconds)
    (2/7) benchmarking "second"...
    done (took 0.0184184 seconds)
    (3/7) benchmarking "month"...
    done (took 0.020788369 seconds)
    (4/7) benchmarking "year"...
    done (took 0.020653329 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.018229605 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.017709045 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.018084959 seconds)
  done (took 0.820686286 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.390358711 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.081916171 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.315676944 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.030989749 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.036681385 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.217244087 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.021193156 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.026393931 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.026264331 seconds)
  done (took 1.807408595 seconds)
done (took 7.5125246 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.040295016 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.044798355 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.049178916 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.408053607 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.038120166 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.023889959 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.111441601 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.13880655 seconds)
done (took 1.52129857 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.201811299 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.924671084 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.506622315 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.186474785 seconds)
  done (took 2.282796463 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.353363664 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.041783315 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.034166445 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.025410394 seconds)
  done (took 1.126840988 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.026319218 seconds)
    (2/2) benchmarking "read"...
    done (took 0.027713152 seconds)
  done (took 0.738206526 seconds)
done (took 5.042990955 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.022306982 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.020523412 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.020742428 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.019930655 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.020355842 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.020418933 seconds)
    (7/24) benchmarking ("2pow1023", "positive argument", "Float64")...
    done (took 0.020447982 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.020062299 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.020151226 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.020047917 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.020122995 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.020132601 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.020436401 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.021548774 seconds)
    (15/24) benchmarking ("2pow1023", "negative argument", "Float64")...
    done (took 0.020662316 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.020159662 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", "Float32")...
    done (took 0.020133945 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.020538297 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.020188046 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.020794939 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", "Float32")...
    done (took 0.020148372 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.02008031 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.020459784 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.020507552 seconds)
  done (took 1.149902953 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.039435889 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.022886039 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.023961569 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.023931294 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.024543652 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.024487592 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.024160278 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.022728824 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.024261562 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.022332356 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.024758769 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.024536703 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.022092147 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.025079183 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.022584844 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.025225041 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.024511001 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.022976777 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.022222895 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.02511331 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.024319398 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.023104169 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.02501955 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.024018348 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.02496028 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.026878504 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.024127009 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.023601531 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.024555694 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.0253163 seconds)
  done (took 1.406048727 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.02556492 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.016314823 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.016660662 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.026135686 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.016253398 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.016853403 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.016065962 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.016326486 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.020405923 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.017052699 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.017950959 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.017683301 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.018227452 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.018654068 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.017969505 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.0221938 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.037967811 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.01701296 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.016625198 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.017176133 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.021564702 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.01669217 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.016760113 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.016651953 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.016859842 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.016469381 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.01708693 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.016671751 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.01708105 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.016621846 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.021609918 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.02191299 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.016498183 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.022288723 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.021754928 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.016572552 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.022357649 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.016307795 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.017126423 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.016266936 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.016263733 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.016378663 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.016574362 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.02714824 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.016922929 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.01795675 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.016887974 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.017995157 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.017216462 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.01892048 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.016366155 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.016569092 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.018631028 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.017775341 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.022611346 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.016520622 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.017253408 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.016289077 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.017169017 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.01669678 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.016353934 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.016471512 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.020592248 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.0172412 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.037117527 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.028889864 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.017372142 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.018886941 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.01772314 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.020624434 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.018235605 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.035670621 seconds)
  done (took 2.048633044 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.040157598 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.044579016 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.022180583 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.021931596 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.017214067 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.016963548 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.027341276 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.018004432 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.022531222 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.038786941 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.017819351 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.022954711 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.022355118 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.021665884 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.017210334 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.023084306 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.025818635 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.017534706 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.016880096 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.02148237 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.017235317 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.025676787 seconds)
  done (took 1.197547099 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.108505775 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.023617757 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.067146093 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.027586937 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.025993333 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.027664289 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.023447326 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.023496118 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.023709198 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.024238077 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.024275778 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.024281777 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.026123761 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.024360964 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.024200546 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.024205115 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.023819458 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.024322134 seconds)
  done (took 1.24191829 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.035539793 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.022672343 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.044110514 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.022630877 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.022665138 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.022382046 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.026509436 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.027151951 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.022974188 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.022801315 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.030986859 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.023800078 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.023461562 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.023730479 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.023225708 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.023882196 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.023087776 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.023476384 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.027927455 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.027266638 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.027346959 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.027884286 seconds)
  done (took 1.248892815 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.036820923 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.022067567 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.039794628 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.024083939 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.017272791 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.017131635 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.023758646 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.02260583 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.023668402 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.02185481 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.022770518 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.017272282 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.025036735 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.022985648 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.025214338 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.022784329 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.022203881 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.022765387 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.022163643 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.01751647 seconds)
  done (took 1.146008883 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.030400413 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.019997629 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.019799505 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.025387413 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.019816517 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.019922909 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.025743068 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.019995976 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.019922606 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.043460803 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.020148946 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.020187657 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.026253059 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.023977807 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.02025251 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.028344392 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.027323019 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.028028628 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.020928314 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.02055389 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.044079002 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.020691652 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.027022678 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.020631656 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.020483522 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.020183436 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.020126977 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.024423502 seconds)
  done (took 1.347709263 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.022281823 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.020308322 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.020419032 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.0202987 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.0206132 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.020209508 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.020286633 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.020263967 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.019793324 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.020305218 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.020001574 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.020017869 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.020004143 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.019939774 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.020008891 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.019759363 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.020029536 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.020375369 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.020369133 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.020367973 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.020008704 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.019960951 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.019964594 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.020416895 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.020487391 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.020109366 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.020487687 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.020496315 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.020109212 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.020510044 seconds)
  done (took 1.281297281 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.033099906 seconds)
    (2/2) benchmarking "in"...
    done (took 0.029880297 seconds)
  done (took 0.740011455 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.020067583 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.035814582 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.016138603 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.029888185 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.025815937 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.020636077 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.026606766 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.026183791 seconds)
  done (took 0.87062451 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.034859626 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.02194357 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.019195811 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.030278409 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.020984624 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.032056988 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.095838646 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.019649815 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.031095117 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.02094881 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.0298053 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.022208097 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.031180872 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.025024387 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.031328742 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.035425526 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.017213605 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.023834995 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.019575836 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.017158284 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.019081828 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.034267085 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.030691091 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.017378357 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.024985306 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.050916896 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.038031999 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.018855434 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.027118719 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.033297815 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.030922305 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.016393833 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.018675083 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.019082287 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.017286302 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.020925261 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.040787434 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.027038091 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.033541575 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.019508823 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.027339022 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.017133669 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.029210259 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.031693918 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.037498394 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.019124071 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.019272655 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.017030871 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.020865981 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.026108777 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.017505584 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.024282383 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.017243577 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.033487071 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.027780411 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.036414737 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.017613706 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.026022061 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.026878455 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.027107703 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.032125602 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.026406506 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.030110959 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.018570929 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.036766274 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.030070238 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.032110277 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.017233046 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.016112598 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.017160043 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.035013208 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.051793512 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.029617911 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.019168777 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.019318827 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.017103195 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.02711657 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.019681575 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.029107089 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.033369677 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.020577322 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.024986873 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.034069587 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.024380332 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.026364046 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.025867545 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.017261332 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.022516248 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.020932971 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.042018929 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.017626756 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.017251986 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.02085077 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.036645897 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.027601589 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.018132415 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.020776977 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.032075134 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.016225997 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.019581246 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.019553103 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.025634489 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.034592852 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.022826081 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.022984069 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.034242716 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.019222487 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.024739596 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.026293926 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.016164658 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.02274777 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.022202996 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.031901059 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.016266276 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.026552835 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.024085893 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.01947454 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.032997573 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.0184044 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.019569889 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.033732708 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.033253745 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.01874932 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.016832562 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.027050984 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.018976364 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.021594476 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.035682525 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.017881411 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.017524465 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.017296775 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.028128437 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.01894517 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.027820267 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.023494048 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.027711368 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.016885493 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.017514686 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.023630581 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.033200841 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.023475894 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.025728126 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.030667509 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.026066823 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.018137469 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.03349351 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.027142368 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.022583691 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.030431093 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.024475902 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.017381568 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.021736047 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.026746163 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.017788007 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.02808661 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.02167185 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.027321462 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.019864494 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.018117823 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.026143929 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.020170781 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.022954196 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.026292249 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.019416803 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.039102577 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.028450828 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.018269319 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.017272936 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.027606814 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.021569136 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.018992316 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.022610332 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.026775788 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.020013246 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.017844036 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.018913582 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.026378752 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.028658321 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.023349674 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.020383168 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.03116017 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.040267773 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.019347219 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.027552933 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.019312335 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.020442347 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.020647415 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.036607777 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.031442033 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.024489751 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.027273142 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.016958634 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.030286391 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.033982566 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.02300245 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.018175654 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.023088068 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.02400792 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.033800421 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.024201158 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.020330351 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.017915981 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.02655108 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.023110847 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.02739216 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.019336585 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.022905597 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.026458592 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.018545265 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.02632942 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.02055814 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.036743391 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.028280656 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.017913859 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.022904132 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.017857915 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.032522477 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.017944873 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.021531711 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.023890266 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.021120997 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.018922772 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.027531734 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.017137411 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.03483131 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.03530701 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.025742656 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.023066864 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.019979735 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.033924131 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.026095451 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.029217461 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.028709992 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.031327879 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.038434196 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.023435829 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.028248143 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.037776598 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.019961124 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.017126875 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.030547875 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.01827553 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.019229719 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.02005703 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.019898357 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.029507424 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.028624618 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.0324793 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.017078326 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.027823765 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.018279033 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.023088607 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.018294412 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.029501548 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.027970669 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.024936223 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.034486709 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.020605604 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.020284708 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.028843667 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.019402629 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.020224966 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.020552636 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.027786347 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.020252015 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.026547485 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.023212177 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.027434739 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.022796795 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.01791701 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.026323374 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.020166522 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.025638573 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.029819098 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.018950343 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.026535451 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.027526367 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.020295399 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.0269636 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.024739481 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.023237946 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.027995349 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.026694158 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.025120905 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.027375088 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.017936638 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.034457384 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.019398106 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.034547576 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.02513372 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.016970858 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.026386126 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.027822879 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.025112117 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.020190234 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.020693096 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.025999774 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.019320671 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.031304937 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.034972457 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.021602024 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.038546166 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.032887021 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.02634025 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.028018409 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.025963107 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.026110995 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.023712744 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.02520212 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.020295173 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.025901095 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.019569655 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.029413369 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.0277 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.025080623 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.026733983 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.020827471 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.0267008 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.020767511 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.017514172 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.023382007 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.023235469 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.019597399 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.036268143 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.021740734 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.024759635 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.020158967 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.020972121 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.019101955 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.017191664 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.027655534 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.028383802 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.020589742 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.032415223 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.02304736 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.026691283 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.03811942 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.016982469 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.018393401 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.01813994 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.022022195 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.034461611 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.020240135 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.036278984 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.02548066 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.023156871 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.017179819 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.020655507 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.018521928 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.017155332 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.017810813 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.028960028 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.022755425 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.018564931 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.019786256 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.027406362 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.020559508 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.035440611 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.018762989 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.025104169 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.019946883 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.017262551 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.023186162 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.022875473 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.02774188 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.020824721 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.021923548 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.017434876 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.019530116 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.025526588 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.026495978 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.019105431 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.026040282 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.033814131 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.020105296 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.027843338 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.023209509 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.017894831 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.028284986 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.020393491 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.019540475 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.023546939 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.02954069 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.028078325 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.020944759 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.037083727 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.019559567 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.026186767 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.019635672 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.018119101 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.019560074 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.019563516 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.019494846 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.023236867 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.020993928 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.034844058 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.01802813 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.027497066 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.02532909 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.024351326 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.032310376 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.020518406 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.027481499 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.025791223 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.021910542 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.027159036 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.035436735 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.024726325 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.029850356 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.021822713 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.028252073 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.032620549 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.023081467 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.033394776 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.025728889 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.020352105 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.026180832 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.021835435 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.019201272 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.019728477 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.018485967 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.031569501 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.020276638 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.022957398 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.022836117 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.01791323 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.025053808 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.022813084 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.03481803 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.027474975 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.027927229 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.018218541 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.017210358 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.020835352 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.021847663 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.026170255 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.027857064 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.031500866 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.027248436 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.02439135 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.018410362 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.037299544 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.030960349 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.028554509 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.021832088 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.028966438 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.020476995 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.028987101 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.027992338 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.026051664 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.020579502 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.028520308 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.026146707 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.023152511 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.031889945 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.028796756 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.020666493 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.026352797 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.026345341 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.025460942 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.01820665 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.020474498 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.027060927 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.029854669 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.027716902 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.019880077 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.038098738 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.021399037 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.025130386 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.022713077 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.019354077 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.029920492 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.017977287 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.027083913 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.020604922 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.020723946 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.017810437 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.023056775 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.021815167 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.027866915 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.022987611 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.017872952 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.03878869 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.036840061 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.027530193 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.018571634 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.021838304 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.018210809 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.019148432 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.024503224 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.021212032 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.026648276 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.037468382 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.022982275 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.022820243 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.018136891 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.019352863 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.027821417 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.028511908 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.017255802 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.018075041 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.023060827 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.027925781 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.033701998 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.018590054 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.019308814 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.028466258 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.027211904 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.017985192 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.022947982 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.016899186 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.028642832 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.039677257 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.020250257 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.026666189 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.031324466 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.034547834 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.020514346 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.018446953 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.022698208 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.034018033 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.030091989 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.023858128 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.025254866 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.049916704 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.032658668 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.026733869 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.023679521 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.034528928 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.028617609 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.042064874 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.024047669 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.024786668 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.034434934 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.031297266 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.032605458 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.036763878 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.040644232 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.032056433 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.033903042 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.021706483 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.029300735 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.021365008 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.026759604 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.023759638 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.023490651 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.027049131 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.027123097 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.02312344 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.039046309 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.03621239 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.022935201 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.017170266 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.023339217 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.023066282 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.018105864 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.020710818 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.018147485 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.018090495 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.017991158 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.018371538 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.026344523 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.030413278 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.025219813 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.021930119 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.020318728 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.017529927 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.031205884 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.027334149 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.026389658 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.017146938 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.020083444 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.020054049 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.029009975 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.022627869 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.022583574 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.027282893 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.026494678 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.027428423 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.022134122 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.041625518 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.022743942 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.032407608 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.026479708 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.021677224 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.022414783 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.031205378 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.026984606 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.023021116 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.032257149 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.030794867 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.025404289 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.019065596 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.01881409 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.03610578 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.019699918 seconds)
  done (took 15.665654301 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.072823848 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.018817545 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.01707184 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.017094742 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.025811103 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.018153292 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.017091159 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.018189096 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.017986893 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.019822594 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.017272416 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.017413477 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.024068095 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.032889063 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.027101109 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.021340889 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.017560048 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.018348947 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.017425335 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.018171688 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.024496471 seconds)
  done (took 1.674090489 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.026033739 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.034247976 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.029843937 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.03600944 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.026957704 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.022081848 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.030019988 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.022216518 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.031007453 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.028592089 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.031166208 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.022492302 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.028713705 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.029619105 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.028743475 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.022798958 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.031174732 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.027698233 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.022797775 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.031349743 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.023060075 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.031238169 seconds)
  done (took 1.373710994 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.020278063 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.018370395 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.026393481 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.017024995 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.017985478 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.016672533 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.020851567 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.016708501 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.020882444 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.021906206 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.0218825 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.02191347 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.026493017 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.016818622 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.023265196 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.01686968 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.066906946 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.021496276 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.018444141 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.021070067 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.018635314 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.02777206 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.017357156 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.01760523 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.021829854 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.021210054 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.019095704 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.017065463 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.018102497 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.021783631 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.018055094 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.016957481 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.026383413 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.025120748 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.022025197 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.021962398 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.018163265 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.018260362 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.017197229 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.017164992 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.025687633 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.017998368 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.018585396 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.026352325 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.017501115 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.016896677 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.025913754 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.018634868 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.017077403 seconds)
  done (took 1.769478053 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.029894102 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.070331966 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.024323092 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.048328289 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.031798583 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.023590704 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.023681903 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.049419587 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.018761118 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.019410737 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.033216248 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.032856473 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.020710649 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.022082444 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.025844449 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.020537974 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.021439578 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.019763365 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.025030179 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.021813157 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.024576001 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.026325513 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.032620361 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.033233174 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.021830839 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.024205151 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.020495446 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.022113654 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.032829771 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.024487616 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.022452052 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.023012498 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.032645006 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.026474812 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.020013878 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.020317575 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.033485808 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.020851534 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.020393766 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.018651003 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.02027454 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.021812069 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.025616858 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.03395236 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.021009372 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.026391404 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.020588007 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.018289713 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.03278313 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.020883475 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.025014393 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.03382182 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.021528512 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.020756943 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.022093033 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.032700773 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.020638071 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.01914226 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.020873143 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.034916012 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.019682998 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.022698944 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.035468203 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.020676182 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.024219459 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.033598817 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.026802535 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.021954288 seconds)
  done (took 2.635755037 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.029995463 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.054961949 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.033545216 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.033876832 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.027965436 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.028073532 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.027895311 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.027464916 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.028001338 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.031807605 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.028294389 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.065684313 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.024437179 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.030256368 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.028245173 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.028432104 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.028610321 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.02855983 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.028428071 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.028713272 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.028561051 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.034551289 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.028574399 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.034602169 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.031776762 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.024541946 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.028321766 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.028552922 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.034511913 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.028558609 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.031536863 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.028291325 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.029391516 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.036798556 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.032480067 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.028715821 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.01823995 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.028237287 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.02838476 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.028913045 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.024783608 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.03461031 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.028126006 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.024486828 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.028335303 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.028160212 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.034540449 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.031663782 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.03047351 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.03204555 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.028724128 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.035251609 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.028637122 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.028483891 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.034481134 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.03829938 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.035241858 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.035258817 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.028434697 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.034348925 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.035076937 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.03742542 seconds)
  done (took 2.685736455 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.033306838 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.024433249 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.037688786 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.016718464 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.016485553 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.026960177 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.016532914 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.016509674 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.024436895 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.024424034 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.031694204 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.027495211 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.030252931 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.028160177 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.029157415 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.030614119 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.027568507 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.026991154 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.025290961 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.027747089 seconds)
  done (took 1.273568155 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.034472489 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.037584825 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.023925031 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.028658392 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.022749668 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.026907511 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.022229627 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.022865635 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.023280035 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.022870567 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.028286201 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.028497341 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.023138597 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.027469128 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.028506924 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.027461255 seconds)
  done (took 1.171754401 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.025826038 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.025114157 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.023452235 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.017921466 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.022711875 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.017357705 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.01794587 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.01642617 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.017273755 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.032238109 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.017881349 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.03116621 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.018159041 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.016910963 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.01778607 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.02448281 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.017567758 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.018340113 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.018221219 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.02253618 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.025629674 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.019368795 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.022772573 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.018634992 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.024162551 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.026107762 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.019779932 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.022660093 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.018031573 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.018790777 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.024822274 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.025892715 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.018159705 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.018993985 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.017146876 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.018280872 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.018698708 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.01884762 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.024722757 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.018468251 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.016883744 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.024080877 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.018545564 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.019413344 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.018566799 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.020565068 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.018719622 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.024851531 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.01882353 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.024719201 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.018670484 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.020173701 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.018759611 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.026545669 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.020818199 seconds)
  done (took 1.88287851 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.036235174 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.023902369 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.018064107 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.017308184 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.023116032 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.02357992 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.022813463 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.02309855 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.023558987 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.017057386 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.023575428 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.022816558 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.023502056 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.022527212 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.023475596 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.022758139 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.016708507 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.023096176 seconds)
  done (took 1.144545744 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.030462323 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.022232299 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.027380414 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.022206799 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.021874888 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.021604741 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.016857459 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.016943365 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.016886212 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.0221408 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.022884407 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.021908138 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.016989695 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.021783291 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.022588322 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.022165848 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.021815305 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.017073202 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.022345071 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.017169512 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.021895469 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.017201926 seconds)
  done (took 1.239604296 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#3", "BigInt", "+")...
    done (took 0.09169542 seconds)
    (2/6) benchmarking ("#3", "UInt64", "+")...
    done (took 0.045243159 seconds)
    (3/6) benchmarking ("#4", "UInt64", "+")...
    done (took 0.041285972 seconds)
    (4/6) benchmarking ("#3", "Int64", "+")...
    done (took 0.03721327 seconds)
    (5/6) benchmarking ("#4", "Int64", "+")...
    done (took 0.028742585 seconds)
    (6/6) benchmarking ("#4", "BigInt", "+")...
    done (took 0.053504645 seconds)
  done (took 1.032270837 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.054211372 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.057425479 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.022413546 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.022131069 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.027516165 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.025471611 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.025522014 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.025626429 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.029718724 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.030955759 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.025960199 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.03030996 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.029581358 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.032070449 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.028107983 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.028130949 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.025684596 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.026157661 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.02307127 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.035874434 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.02642261 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.032551324 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.027927543 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.027649975 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.027276896 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.032981396 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.031102344 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.031840314 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.026962921 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.031331863 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.028622634 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.026032049 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.030596235 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.031165993 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.022879775 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.030357485 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.026485673 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.035519602 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.028816704 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.03226093 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.02277539 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.028439433 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.030941698 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.029933621 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.03078629 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.026218973 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.029654519 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.025995581 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.026072152 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.037265468 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.028489349 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.032265125 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.028410156 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.031442723 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.030358635 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.03898565 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.033259933 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.033118406 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.028527187 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.031155298 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.032262808 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.028297149 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.032061376 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.034442833 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.029656957 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.032452426 seconds)
  done (took 2.725599283 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.064044351 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.023140127 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.025410768 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.029952194 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.03133722 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.025446209 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.025613334 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.025107408 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.025603367 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.023130078 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.065005421 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.026454188 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.032098436 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.031981358 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.025995092 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.025752125 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.025989578 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.032679491 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.023782839 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.037771579 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.026116657 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.032362858 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.032363989 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.032285009 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.031160402 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.028482518 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.02624065 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.026051841 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.025682442 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.027810394 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.031039126 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.026273055 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.032187617 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.023343416 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.032088208 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.026059023 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.025837874 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.030223943 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.025946492 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.028698453 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.032390183 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.035975524 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.026029742 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.025919125 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.031061663 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.025969791 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.025957474 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.023645714 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.026078143 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.02331672 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.03173136 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.031635651 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.031052449 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.032440492 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.026130751 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.02616459 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.02604404 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.025953831 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.026060598 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.028250787 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.032139445 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.026544466 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.038266773 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.025988535 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.026847093 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.034940304 seconds)
  done (took 2.717982818 seconds)
done (took 53.349502365 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.237843832 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.182671832 seconds)
  done (took 1.14781975 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose", "(600, 600)")...
    done (took 0.031387035 seconds)
    (2/16) benchmarking ("adjoint", "(600, 400)")...
    done (took 0.029670097 seconds)
    (3/16) benchmarking ("adjoint!", "(600, 600)")...
    done (took 0.052779056 seconds)
    (4/16) benchmarking ("adjoint", "(20000, 20000)")...
    done (took 0.025379912 seconds)
    (5/16) benchmarking ("transpose!", "(20000, 10000)")...
    done (took 0.097751257 seconds)
    (6/16) benchmarking ("adjoint!", "(20000, 20000)")...
    done (took 0.208296685 seconds)
    (7/16) benchmarking ("transpose!", "(20000, 20000)")...
    done (took 0.158715094 seconds)
    (8/16) benchmarking ("transpose", "(600, 400)")...
    done (took 0.028016974 seconds)
    (9/16) benchmarking ("transpose", "(20000, 20000)")...
    done (took 0.025843219 seconds)
    (10/16) benchmarking ("transpose!", "(600, 400)")...
    done (took 0.028264045 seconds)
    (11/16) benchmarking ("adjoint", "(600, 600)")...
    done (took 0.02574918 seconds)
    (12/16) benchmarking ("transpose!", "(600, 600)")...
    done (took 0.028040742 seconds)
    (13/16) benchmarking ("adjoint!", "(600, 400)")...
    done (took 0.028153456 seconds)
    (14/16) benchmarking ("transpose", "(20000, 10000)")...
    done (took 0.025474067 seconds)
    (15/16) benchmarking ("adjoint!", "(20000, 10000)")...
    done (took 0.11139592 seconds)
    (16/16) benchmarking ("adjoint", "(20000, 10000)")...
    done (took 0.028009476 seconds)
  done (took 1.685120245 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.076593764 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.124566421 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.068907588 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.023899513 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.075804078 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.031732824 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.023838416 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.039371522 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.03066111 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.02538669 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.031684892 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.029791896 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.025013768 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.029465522 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.032757162 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.03312067 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.025466058 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.032010736 seconds)
  done (took 1.498899498 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", "(20000, 20000)")...
    done (took 0.107728412 seconds)
    (2/2) benchmarking ("unary minus", "(600, 600)")...
    done (took 0.041270867 seconds)
  done (took 0.882876636 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.153628927 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.094929923 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.149088686 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.364952973 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.129999475 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.130761994 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.153997288 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.166708356 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.113077079 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.151869658 seconds)
  done (took 2.342254701 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.075308997 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.175904758 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.332638674 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.085580968 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.032844832 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.067904278 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.085625566 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.041521409 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.041601043 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.039512564 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.039321309 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.034750535 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.063036869 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.032624153 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.03291471 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.034753864 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.067230733 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.031523475 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.033361854 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.034289902 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.066535117 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.024877644 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.032622677 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.031303222 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.036213611 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.036746223 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.025804668 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.024892637 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.034657993 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.032642705 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.035622947 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.062836058 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.036048279 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.066182238 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.030468658 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.065961041 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.035212693 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.032676969 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.032844794 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.032267005 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.036593372 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.03593939 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.03561572 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.034677661 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.025892528 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.035141683 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.025875902 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.025098505 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.036615478 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.026450242 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.037091163 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.0360482 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.06343779 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.027349876 seconds)
  done (took 3.44515918 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.075090212 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.069689919 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.027584061 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.073077762 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.066711008 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.026740539 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.068153731 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.060058319 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.071326058 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.027785857 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.025312299 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.027109762 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.036979157 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.040248876 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.078572474 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.07026932 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.029312341 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.026397934 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.070469717 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.0690636 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.026198662 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.062859863 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.058509854 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.069396445 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.024696692 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.027024707 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.025325834 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.027077517 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.0333371 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.035752222 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.025817925 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.036734102 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.041908526 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.035078334 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.024855141 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.025455652 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.025234554 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.036403509 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.036828549 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.036581444 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.034012981 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.024710612 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.025349885 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.026300529 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.026364644 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.024739455 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.034437797 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.0363565 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.033938383 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.025595659 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.026770594 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.025354748 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.026234011 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.036061275 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.03336091 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.03593244 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.035641677 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.025341915 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.025058544 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.028558795 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.036903784 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.036630009 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.035564202 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.026094891 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.037906642 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.02632871 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.036925484 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.04165058 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.025264779 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.026473163 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.025067455 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.025370507 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.026209662 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.033857995 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.034018473 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.027032906 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.025107133 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.025522144 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.036414469 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.034504888 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.025082893 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.03273089 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.024492007 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.025414041 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.026616468 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.026606831 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.033085704 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.03508253 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.026995876 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.025571342 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.025161773 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.025051043 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.024357942 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.033274192 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.035897081 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.034912414 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.033988831 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.026906972 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.037397613 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.035457548 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.027192445 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.034901458 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.025597977 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.027229287 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.026256506 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.034580389 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.03289918 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.03530423 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.025142783 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.025510224 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.034593584 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.039936616 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.026199307 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.034179423 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.037456609 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.034928864 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.025584952 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.038678193 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.026805978 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.037633502 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.026155739 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.037422532 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.025868773 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.03551143 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.025773252 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.025255586 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.025833749 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.036523236 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.027383093 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.025430414 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.028199281 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.027527732 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.035284244 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.037858085 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.027788699 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.034932925 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.038287436 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.027589057 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.035471652 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.02666233 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.037605145 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.026896427 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.027731408 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.025741838 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.039852734 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.027006754 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.0260091 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.025970381 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.038026538 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.026850445 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.037982936 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.035242549 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.02565457 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.038539989 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.038150013 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.035212866 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.039598215 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.028004651 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.026204994 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.026427353 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.026475582 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.035595497 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.038486405 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.028594544 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.026148068 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.035603978 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.038351713 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.025745541 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.036355528 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.035552521 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.036713576 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.026643926 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.026182714 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.038714971 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.039176196 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.036591899 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.036830428 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.036047226 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.02637338 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.035079566 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.0360637 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.026085396 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.043183125 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.026338461 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.040858911 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.037113319 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.03596416 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.036726245 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.038455423 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.039386638 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.038596439 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.042583972 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.025537631 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.0262033 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.037348714 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.026462263 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.02614694 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.035388728 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.027911822 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.027843963 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.04205705 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.027133407 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.037649509 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.025373683 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.0381225 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.03022018 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.032673463 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.048784269 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.032836929 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.030364159 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.043497942 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.028606997 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.038489317 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.042472848 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.039408105 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.217500629 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.031465849 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.038905208 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.038729701 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.030819134 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.028694583 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.031467367 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.036058727 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.037253188 seconds)
  done (took 8.577880699 seconds)
done (took 20.332734415 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", "(1000, 1000)", 3)...
    done (took 0.179103383 seconds)
    (2/4) benchmarking ("Float64", "(1000000,)", 1)...
    done (took 0.111070446 seconds)
    (3/4) benchmarking ("Float64", "(1000, 1000)", 2)...
    done (took 0.154981345 seconds)
    (4/4) benchmarking ("Float64", "(1000000,)", 2)...
    done (took 0.082301859 seconds)
  done (took 1.261345378 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.054875928 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.058372792 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.035170947 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.021096139 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.041033652 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.021021951 seconds)
  done (took 0.985548446 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", "(1000000,)", 1)...
    done (took 0.188940664 seconds)
    (2/3) benchmarking ("Float64", "(1000, 1000)", 2)...
    done (took 0.278975317 seconds)
    (3/3) benchmarking ("Float64", "(1000000,)", 2)...
    done (took 0.159891977 seconds)
  done (took 1.377424018 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ("(10000000,)", 1)...
    done (took 0.138637606 seconds)
    (2/4) benchmarking ("(1000, 1000)", 2)...
    done (took 0.502080223 seconds)
    (3/4) benchmarking ("(1000, 1000)", 1)...
    done (took 0.134195003 seconds)
    (4/4) benchmarking ("(10000000,)", 2)...
    done (took 0.267840016 seconds)
  done (took 1.804596898 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.095248595 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.038038297 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.018824778 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.029130773 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.07094753 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.116368432 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.057496667 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.089420382 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.030013181 seconds)
  done (took 1.359688157 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.117478147 seconds)
done (took 7.681138395 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/341) benchmarking ("collect", "all", "Int64", 0)...
    done (took 0.134609918 seconds)
    (2/341) benchmarking ("map", "identity", "Int8", 0)...
    done (took 0.138064148 seconds)
    (3/341) benchmarking ("map", "*", "Int64", "(false, false)")...
    done (took 0.142228678 seconds)
    (4/341) benchmarking ("map", "identity", "Float64", 0)...
    done (took 0.137853579 seconds)
    (5/341) benchmarking ("sort", "Float64", 0)...
    done (took 0.09888087 seconds)
    (6/341) benchmarking ("perf_sum4", "BigInt", 1)...
    done (took 0.035648485 seconds)
    (7/341) benchmarking ("skipmissing", "sum", "Union{Nothing, BigInt}", 0)...
    done (took 0.072218694 seconds)
    (8/341) benchmarking ("collect", "all", "Int8", 0)...
    done (took 0.042146846 seconds)
    (9/341) benchmarking ("map", "*", "Complex{Float64}", "(false, true)")...
    done (took 0.228270058 seconds)
    (10/341) benchmarking ("collect", "all", "Float32", 1)...
    done (took 0.154619556 seconds)
    (11/341) benchmarking ("perf_sum3", "Float64", 1)...
    done (took 0.03188384 seconds)
    (12/341) benchmarking ("perf_sum", "Complex{Float64}", 1)...
    done (took 0.031095716 seconds)
    (13/341) benchmarking ("broadcast", "*", "Bool", "(false, true)")...
    done (took 0.204147401 seconds)
    (14/341) benchmarking ("broadcast", "*", "Int64", "(false, true)")...
    done (took 0.179387134 seconds)
    (15/341) benchmarking ("perf_binaryop", "*", "Float32", "(true, true)")...
    done (took 0.052943332 seconds)
    (16/341) benchmarking ("map", "identity", "Float32", 0)...
    done (took 0.043009404 seconds)
    (17/341) benchmarking ("perf_sum2", "Float32", 0)...
    done (took 0.030522225 seconds)
    (18/341) benchmarking ("perf_sum", "Int64", 0)...
    done (took 0.033139945 seconds)
    (19/341) benchmarking ("broadcast", "identity", "Int8", 1)...
    done (took 0.147358536 seconds)
    (20/341) benchmarking ("perf_sum4", "BigInt", 0)...
    done (took 0.024274869 seconds)
    (21/341) benchmarking ("perf_sum3", "Complex{Float64}", 0)...
    done (took 0.035339063 seconds)
    (22/341) benchmarking ("perf_sum2", "BigFloat", 1)...
    done (took 0.038372069 seconds)
    (23/341) benchmarking ("collect", "all", "Float32", 0)...
    done (took 0.025577937 seconds)
    (24/341) benchmarking ("collect", "filter", "Int64", 1)...
    done (took 0.116019851 seconds)
    (25/341) benchmarking ("perf_sum", "Int8", 0)...
    done (took 0.036796291 seconds)
    (26/341) benchmarking ("broadcast", "identity", "Float32", 1)...
    done (took 0.151921496 seconds)
    (27/341) benchmarking ("broadcast", "identity", "BigFloat", 1)...
    done (took 0.213456772 seconds)
    (28/341) benchmarking ("broadcast", "*", "BigInt", "(false, true)")...
    done (took 0.225336796 seconds)
    (29/341) benchmarking ("skipmissing", "collect", "Float64", 0)...
    done (took 0.037450569 seconds)
    (30/341) benchmarking ("broadcast", "*", "Float32", "(false, false)")...
    done (took 0.170081489 seconds)
    (31/341) benchmarking ("broadcast", "identity", "Float32", 0)...
    done (took 0.020116208 seconds)
    (32/341) benchmarking ("broadcast", "abs", "Float64", 1)...
    done (took 0.148650931 seconds)
    (33/341) benchmarking ("perf_binaryop", "*", "Int64", "(false, true)")...
    done (took 0.047275631 seconds)
    (34/341) benchmarking ("perf_simplecopy", "Float32", 1)...
    done (took 0.038853067 seconds)
    (35/341) benchmarking ("perf_binaryop", "*", "Complex{Float64}", "(false, false)")...
    done (took 0.050566943 seconds)
    (36/341) benchmarking ("map", "abs", "BigFloat", 0)...
    done (took 0.14301586 seconds)
    (37/341) benchmarking ("perf_sum3", "BigFloat", 1)...
    done (took 0.033702749 seconds)
    (38/341) benchmarking ("broadcast", "identity", "BigInt", 1)...
    done (took 0.196373877 seconds)
    (39/341) benchmarking ("perf_sum2", "Bool", 1)...
    done (took 0.037032785 seconds)
    (40/341) benchmarking ("skipmissing", "collect", "Union{Missing, Complex{Float64}}", 1)...
    done (took 0.058833892 seconds)
    (41/341) benchmarking ("perf_binaryop", "*", "Int64", "(false, false)")...
    done (took 0.021242267 seconds)
    (42/341) benchmarking ("broadcast", "abs", "Bool", 1)...
    done (took 0.146166544 seconds)
    (43/341) benchmarking ("map", "*", "Int8", "(true, true)")...
    done (took 0.166073227 seconds)
    (44/341) benchmarking ("sort", "Union{Missing, Int8}", 1)...
    done (took 0.132910223 seconds)
    (45/341) benchmarking ("map", "*", "Bool", "(false, false)")...
    done (took 0.18634307 seconds)
    (46/341) benchmarking ("perf_sum2", "Complex{Float64}", 1)...
    done (took 0.032929708 seconds)
    (47/341) benchmarking ("perf_sum2", "BigInt", 1)...
    done (took 0.031983159 seconds)
    (48/341) benchmarking ("sort", "Union{Nothing, Float32}", 0)...
    done (took 0.126384244 seconds)
    (49/341) benchmarking ("map", "*", "BigFloat", "(false, false)")...
    done (took 0.133066857 seconds)
    (50/341) benchmarking ("skipmissing", "collect", "Union{Nothing, BigFloat}", 0)...
    done (took 0.046289554 seconds)
    (51/341) benchmarking ("broadcast", "*", "Float32", "(false, true)")...
    done (took 0.020096549 seconds)
    (52/341) benchmarking ("skipmissing", "collect", "BigInt", 0)...
    done (took 0.040112676 seconds)
    (53/341) benchmarking ("map", "abs", "BigInt", 1)...
    done (took 0.148505509 seconds)
    (54/341) benchmarking ("skipmissing", "sum", "Union{Missing, BigInt}", 1)...
    done (took 0.085553738 seconds)
    (55/341) benchmarking ("collect", "filter", "Int8", 0)...
    done (took 0.121468433 seconds)
    (56/341) benchmarking ("perf_simplecopy", "Complex{Float64}", 1)...
    done (took 0.029116691 seconds)
    (57/341) benchmarking ("sort", "Union{Missing, Bool}", 1)...
    done (took 0.132821175 seconds)
    (58/341) benchmarking ("broadcast", "identity", "Int8", 0)...
    done (took 0.019830711 seconds)
    (59/341) benchmarking ("skipmissing", "collect", "Int8", 0)...
    done (took 0.03728216 seconds)
    (60/341) benchmarking ("broadcast", "*", "Complex{Float64}", "(true, true)")...
    done (took 0.181134729 seconds)
    (61/341) benchmarking ("skipmissing", "sum", "Union{Missing, Bool}", 1)...
    done (took 0.231118197 seconds)
    (62/341) benchmarking ("perf_countequals", "Int8")...
    done (took 0.042659611 seconds)
    (63/341) benchmarking ("map", "abs", "BigInt", 0)...
    done (took 0.021931654 seconds)
    (64/341) benchmarking ("map", "*", "Complex{Float64}", "(false, false)")...
    done (took 0.020593783 seconds)
    (65/341) benchmarking ("perf_sum", "Complex{Float64}", 0)...
    done (took 0.025733131 seconds)
    (66/341) benchmarking ("skipmissing", "collect", "Bool", 0)...
    done (took 0.037265497 seconds)
    (67/341) benchmarking ("broadcast", "*", "Bool", "(false, false)")...
    done (took 0.023480649 seconds)
    (68/341) benchmarking ("sort", "Bool", 0)...
    done (took 0.088419469 seconds)
    (69/341) benchmarking ("perf_countnothing", "Float64", 1)...
    done (took 0.031708723 seconds)
    (70/341) benchmarking ("sort", "Union{Nothing, Int8}", 0)...
    done (took 0.112397728 seconds)
    (71/341) benchmarking ("collect", "filter", "BigFloat", 0)...
    done (took 0.115309553 seconds)
    (72/341) benchmarking ("perf_sum4", "Int64", 0)...
    done (took 0.032154467 seconds)
    (73/341) benchmarking ("skipmissing", "sum", "Float32", 0)...
    done (took 0.048337027 seconds)
    (74/341) benchmarking ("broadcast", "*", "Complex{Float64}", "(false, false)")...
    done (took 0.020442257 seconds)
    (75/341) benchmarking ("skipmissing", "sum", "Union{Missing, Float32}", 1)...
    done (took 0.09479081 seconds)
    (76/341) benchmarking ("sort", "Union{Nothing, BigInt}", 0)...
    done (took 0.10163967 seconds)
    (77/341) benchmarking ("collect", "all", "Bool", 0)...
    done (took 0.088643919 seconds)
    (78/341) benchmarking ("perf_countnothing", "BigFloat", 1)...
    done (took 0.026033895 seconds)
    (79/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(false, false)")...
    done (took 0.053207278 seconds)
    (80/341) benchmarking ("skipmissing", "sum", "Union{Nothing, BigFloat}", 0)...
    done (took 0.068303619 seconds)
    (81/341) benchmarking ("collect", "all", "Complex{Float64}", 1)...
    done (took 0.106530294 seconds)
    (82/341) benchmarking ("broadcast", "abs", "BigFloat", 1)...
    done (took 0.192131724 seconds)
    (83/341) benchmarking ("perf_sum4", "BigFloat", 0)...
    done (took 0.035682395 seconds)
    (84/341) benchmarking ("broadcast", "*", "BigFloat", "(false, false)")...
    done (took 0.208884035 seconds)
    (85/341) benchmarking ("perf_simplecopy", "Int8", 0)...
    done (took 0.037235267 seconds)
    (86/341) benchmarking ("perf_sum", "BigFloat", 1)...
    done (took 0.034437101 seconds)
    (87/341) benchmarking ("broadcast", "*", "Int64", "(true, true)")...
    done (took 0.020675524 seconds)
    (88/341) benchmarking ("collect", "all", "BigFloat", 1)...
    done (took 0.104588678 seconds)
    (89/341) benchmarking ("perf_sum3", "Int8", 1)...
    done (took 0.031784761 seconds)
    (90/341) benchmarking ("skipmissing", "collect", "Union{Missing, Int8}", 1)...
    done (took 0.053316814 seconds)
    (91/341) benchmarking ("perf_binaryop", "*", "Int8", "(true, true)")...
    done (took 0.035668736 seconds)
    (92/341) benchmarking ("map", "*", "Float32", "(true, true)")...
    done (took 0.168562451 seconds)
    (93/341) benchmarking ("map", "*", "BigInt", "(false, true)")...
    done (took 0.152319759 seconds)
    (94/341) benchmarking ("map", "identity", "Bool", 1)...
    done (took 0.055098806 seconds)
    (95/341) benchmarking ("broadcast", "abs", "Complex{Float64}", 0)...
    done (took 0.142707255 seconds)
    (96/341) benchmarking ("broadcast", "*", "BigInt", "(true, true)")...
    done (took 0.021816298 seconds)
    (97/341) benchmarking ("map", "identity", "BigFloat", 1)...
    done (took 0.042454235 seconds)
    (98/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(false, true)")...
    done (took 0.023067656 seconds)
    (99/341) benchmarking ("perf_sum2", "BigInt", 0)...
    done (took 0.022565657 seconds)
    (100/341) benchmarking ("broadcast", "*", "BigInt", "(false, false)")...
    done (took 0.023015981 seconds)
    (101/341) benchmarking ("perf_binaryop", "*", "BigInt", "(true, true)")...
    done (took 0.051826245 seconds)
    (102/341) benchmarking ("map", "*", "Bool", "(true, true)")...
    done (took 0.045049381 seconds)
    (103/341) benchmarking ("broadcast", "*", "Float64", "(true, true)")...
    done (took 0.174468934 seconds)
    (104/341) benchmarking ("skipmissing", "collect", "Union{Missing, BigInt}", 1)...
    done (took 0.048415225 seconds)
    (105/341) benchmarking ("map", "*", "Int64", "(true, true)")...
    done (took 0.044222677 seconds)
    (106/341) benchmarking ("broadcast", "identity", "BigInt", 0)...
    done (took 0.020325445 seconds)
    (107/341) benchmarking ("map", "abs", "Int8", 1)...
    done (took 0.103737677 seconds)
    (108/341) benchmarking ("map", "identity", "Int64", 0)...
    done (took 0.043513972 seconds)
    (109/341) benchmarking ("map", "*", "Float64", "(false, false)")...
    done (took 0.155611666 seconds)
    (110/341) benchmarking ("skipmissing", "collect", "Complex{Float64}", 0)...
    done (took 0.04241517 seconds)
    (111/341) benchmarking ("collect", "all", "BigFloat", 0)...
    done (took 0.028163184 seconds)
    (112/341) benchmarking ("collect", "all", "Int64", 1)...
    done (took 0.042073225 seconds)
    (113/341) benchmarking ("map", "abs", "Int8", 0)...
    done (took 0.022209109 seconds)
    (114/341) benchmarking ("map", "*", "BigInt", "(true, true)")...
    done (took 0.023741147 seconds)
    (115/341) benchmarking ("map", "abs", "Complex{Float64}", 0)...
    done (took 0.08482924 seconds)
    (116/341) benchmarking ("perf_binaryop", "*", "Float32", "(false, true)")...
    done (took 0.02322107 seconds)
    (117/341) benchmarking ("collect", "filter", "Bool", 1)...
    done (took 0.129509019 seconds)
    (118/341) benchmarking ("perf_countnothing", "BigFloat", 0)...
    done (took 0.027175725 seconds)
    (119/341) benchmarking ("perf_simplecopy", "Bool", 0)...
    done (took 0.039567889 seconds)
    (120/341) benchmarking ("map", "abs", "Float64", 0)...
    done (took 0.096182468 seconds)
    (121/341) benchmarking ("perf_sum", "Float32", 1)...
    done (took 0.027674267 seconds)
    (122/341) benchmarking ("map", "abs", "Bool", 0)...
    done (took 0.09007219 seconds)
    (123/341) benchmarking ("perf_sum", "Float64", 1)...
    done (took 0.029313173 seconds)
    (124/341) benchmarking ("sort", "BigInt", 0)...
    done (took 0.166507799 seconds)
    (125/341) benchmarking ("perf_sum2", "Int64", 0)...
    done (took 0.035704591 seconds)
    (126/341) benchmarking ("sort", "Union{Missing, Float64}", 1)...
    done (took 0.139243164 seconds)
    (127/341) benchmarking ("perf_countequals", "Float32")...
    done (took 0.032073685 seconds)
    (128/341) benchmarking ("perf_sum", "BigInt", 1)...
    done (took 0.03136596 seconds)
    (129/341) benchmarking ("perf_sum4", "Bool", 1)...
    done (took 0.03269516 seconds)
    (130/341) benchmarking ("sort", "Int8", 0)...
    done (took 0.09401575 seconds)
    (131/341) benchmarking ("perf_sum2", "Float32", 1)...
    done (took 0.02109207 seconds)
    (132/341) benchmarking ("map", "*", "Complex{Float64}", "(true, true)")...
    done (took 0.02153594 seconds)
    (133/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Float32}", 0)...
    done (took 0.048915734 seconds)
    (134/341) benchmarking ("skipmissing", "collect", "Union{Missing, Float64}", 1)...
    done (took 0.051485554 seconds)
    (135/341) benchmarking ("perf_binaryop", "*", "Bool", "(true, true)")...
    done (took 0.048989141 seconds)
    (136/341) benchmarking ("perf_simplecopy", "Bool", 1)...
    done (took 0.021482195 seconds)
    (137/341) benchmarking ("perf_sum", "Float32", 0)...
    done (took 0.025582553 seconds)
    (138/341) benchmarking ("map", "*", "BigInt", "(false, false)")...
    done (took 0.024508851 seconds)
    (139/341) benchmarking ("perf_sum2", "Int8", 0)...
    done (took 0.036205266 seconds)
    (140/341) benchmarking ("broadcast", "*", "Float64", "(false, false)")...
    done (took 0.021063392 seconds)
    (141/341) benchmarking ("perf_sum", "BigInt", 0)...
    done (took 0.022625877 seconds)
    (142/341) benchmarking ("perf_simplecopy", "Int64", 0)...
    done (took 0.039683075 seconds)
    (143/341) benchmarking ("perf_sum2", "Float64", 0)...
    done (took 0.031316559 seconds)
    (144/341) benchmarking ("perf_sum3", "Bool", 0)...
    done (took 0.031445383 seconds)
    (145/341) benchmarking ("perf_countequals", "Int64")...
    done (took 0.031371221 seconds)
    (146/341) benchmarking ("perf_sum3", "Int8", 0)...
    done (took 0.020889424 seconds)
    (147/341) benchmarking ("perf_sum3", "BigInt", 1)...
    done (took 0.031586187 seconds)
    (148/341) benchmarking ("map", "identity", "Complex{Float64}", 0)...
    done (took 0.044334274 seconds)
    (149/341) benchmarking ("collect", "all", "Complex{Float64}", 0)...
    done (took 0.026395551 seconds)
    (150/341) benchmarking ("perf_sum4", "Float64", 1)...
    done (took 0.03305782 seconds)
    (151/341) benchmarking ("collect", "filter", "Bool", 0)...
    done (took 0.02379606 seconds)
    (152/341) benchmarking ("perf_sum4", "Int8", 0)...
    done (took 0.033402058 seconds)
    (153/341) benchmarking ("perf_countequals", "Bool")...
    done (took 0.031261918 seconds)
    (154/341) benchmarking ("skipmissing", "collect", "Union{Missing, Int64}", 1)...
    done (took 0.052508012 seconds)
    (155/341) benchmarking ("perf_sum3", "BigFloat", 0)...
    done (took 0.022554287 seconds)
    (156/341) benchmarking ("skipmissing", "collect", "Union{Missing, BigFloat}", 1)...
    done (took 0.05081607 seconds)
    (157/341) benchmarking ("perf_sum4", "Float32", 1)...
    done (took 0.032739828 seconds)
    (158/341) benchmarking ("perf_binaryop", "*", "Float64", "(false, false)")...
    done (took 0.049595542 seconds)
    (159/341) benchmarking ("skipmissing", "collect", "Union{Nothing, BigInt}", 0)...
    done (took 0.04605368 seconds)
    (160/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Complex{Float64}}", 0)...
    done (took 0.086580203 seconds)
    (161/341) benchmarking ("map", "*", "Int64", "(false, true)")...
    done (took 0.021552232 seconds)
    (162/341) benchmarking ("broadcast", "abs", "Int8", 1)...
    done (took 0.191834339 seconds)
    (163/341) benchmarking ("perf_simplecopy", "Complex{Float64}", 0)...
    done (took 0.022210189 seconds)
    (164/341) benchmarking ("collect", "all", "BigInt", 0)...
    done (took 0.091068337 seconds)
    (165/341) benchmarking ("perf_sum", "BigFloat", 0)...
    done (took 0.022637242 seconds)
    (166/341) benchmarking ("map", "*", "Int8", "(false, false)")...
    done (took 0.021589922 seconds)
    (167/341) benchmarking ("sort", "Union{Missing, BigInt}", 1)...
    done (took 0.361658088 seconds)
    (168/341) benchmarking ("perf_sum4", "Complex{Float64}", 1)...
    done (took 0.030633706 seconds)
    (169/341) benchmarking ("sort", "Float32", 0)...
    done (took 0.099386974 seconds)
    (170/341) benchmarking ("collect", "all", "Float64", 0)...
    done (took 0.042770371 seconds)
    (171/341) benchmarking ("sort", "Union{Missing, Int64}", 1)...
    done (took 0.14045707 seconds)
    (172/341) benchmarking ("map", "identity", "Int8", 1)...
    done (took 0.033992002 seconds)
    (173/341) benchmarking ("collect", "filter", "Float32", 1)...
    done (took 0.124419989 seconds)
    (174/341) benchmarking ("sort", "BigFloat", 0)...
    done (took 0.087417986 seconds)
    (175/341) benchmarking ("perf_countnothing", "Bool", 0)...
    done (took 0.034605701 seconds)
    (176/341) benchmarking ("broadcast", "abs", "Int8", 0)...
    done (took 0.02061993 seconds)
    (177/341) benchmarking ("broadcast", "abs", "BigInt", 1)...
    done (took 0.194046688 seconds)
    (178/341) benchmarking ("perf_sum2", "Int8", 1)...
    done (took 0.021351309 seconds)
    (179/341) benchmarking ("map", "*", "Float64", "(false, true)")...
    done (took 0.044976892 seconds)
    (180/341) benchmarking ("perf_countnothing", "Bool", 1)...
    done (took 0.03098608 seconds)
    (181/341) benchmarking ("map", "abs", "BigFloat", 1)...
    done (took 0.034723829 seconds)
    (182/341) benchmarking ("sort", "Union{Nothing, BigFloat}", 0)...
    done (took 0.101317699 seconds)
    (183/341) benchmarking ("broadcast", "abs", "Bool", 0)...
    done (took 0.020437577 seconds)
    (184/341) benchmarking ("broadcast", "identity", "Int64", 1)...
    done (took 0.136187034 seconds)
    (185/341) benchmarking ("perf_sum2", "BigFloat", 0)...
    done (took 0.0219836 seconds)
    (186/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Int8}", 0)...
    done (took 0.080748014 seconds)
    (187/341) benchmarking ("perf_binaryop", "*", "Complex{Float64}", "(false, true)")...
    done (took 0.021675135 seconds)
    (188/341) benchmarking ("broadcast", "*", "BigFloat", "(true, true)")...
    done (took 0.021128455 seconds)
    (189/341) benchmarking ("map", "*", "Float32", "(false, false)")...
    done (took 0.021034655 seconds)
    (190/341) benchmarking ("collect", "filter", "Complex{Float64}", 0)...
    done (took 0.138131917 seconds)
    (191/341) benchmarking ("perf_simplecopy", "Float32", 0)...
    done (took 0.021639635 seconds)
    (192/341) benchmarking ("broadcast", "*", "BigFloat", "(false, true)")...
    done (took 0.02168569 seconds)
    (193/341) benchmarking ("perf_sum2", "Int64", 1)...
    done (took 0.020227695 seconds)
    (194/341) benchmarking ("perf_simplecopy", "BigFloat", 0)...
    done (took 0.029565199 seconds)
    (195/341) benchmarking ("skipmissing", "sum", "Complex{Float64}", 0)...
    done (took 0.053380384 seconds)
    (196/341) benchmarking ("perf_sum3", "Float32", 1)...
    done (took 0.03125828 seconds)
    (197/341) benchmarking ("skipmissing", "sum", "Bool", 0)...
    done (took 0.052588042 seconds)
    (198/341) benchmarking ("broadcast", "abs", "BigInt", 0)...
    done (took 0.021579449 seconds)
    (199/341) benchmarking ("perf_binaryop", "*", "Bool", "(false, false)")...
    done (took 0.021259357 seconds)
    (200/341) benchmarking ("skipmissing", "collect", "Float32", 0)...
    done (took 0.036099326 seconds)
    (201/341) benchmarking ("broadcast", "*", "Int8", "(true, true)")...
    done (took 0.169309228 seconds)
    (202/341) benchmarking ("sort", "Union{Missing, Float32}", 1)...
    done (took 0.145845478 seconds)
    (203/341) benchmarking ("perf_binaryop", "*", "Float32", "(false, false)")...
    done (took 0.021849988 seconds)
    (204/341) benchmarking ("broadcast", "identity", "Complex{Float64}", 0)...
    done (took 0.149965691 seconds)
    (205/341) benchmarking ("map", "identity", "Float64", 1)...
    done (took 0.035005196 seconds)
    (206/341) benchmarking ("perf_sum4", "Int8", 1)...
    done (took 0.029505991 seconds)
    (207/341) benchmarking ("map", "*", "Float32", "(false, true)")...
    done (took 0.021396931 seconds)
    (208/341) benchmarking ("map", "identity", "Bool", 0)...
    done (took 0.020836622 seconds)
    (209/341) benchmarking ("skipmissing", "sum", "Union{Missing, Int8}", 1)...
    done (took 0.096558803 seconds)
    (210/341) benchmarking ("perf_binaryop", "*", "BigInt", "(false, true)")...
    done (took 0.023722128 seconds)
    (211/341) benchmarking ("collect", "filter", "BigInt", 0)...
    done (took 0.116876832 seconds)
    (212/341) benchmarking ("perf_simplecopy", "Float64", 1)...
    done (took 0.039997384 seconds)
    (213/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Complex{Float64}}", 0)...
    done (took 0.047461648 seconds)
    (214/341) benchmarking ("broadcast", "abs", "Int64", 1)...
    done (took 0.140197049 seconds)
    (215/341) benchmarking ("collect", "filter", "Float32", 0)...
    done (took 0.023562592 seconds)
    (216/341) benchmarking ("perf_binaryop", "*", "Complex{Float64}", "(true, true)")...
    done (took 0.021709638 seconds)
    (217/341) benchmarking ("skipmissing", "sum", "BigFloat", 0)...
    done (took 0.054663277 seconds)
    (218/341) benchmarking ("skipmissing", "sum", "Union{Missing, BigFloat}", 1)...
    done (took 0.083745008 seconds)
    (219/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Int64}", 0)...
    done (took 0.06889232 seconds)
    (220/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Float64}", 0)...
    done (took 0.077333552 seconds)
    (221/341) benchmarking ("broadcast", "abs", "Float32", 0)...
    done (took 0.139369794 seconds)
    (222/341) benchmarking ("map", "identity", "BigFloat", 0)...
    done (took 0.021129149 seconds)
    (223/341) benchmarking ("sort", "Union{Nothing, Float64}", 0)...
    done (took 0.126756529 seconds)
    (224/341) benchmarking ("perf_sum4", "Float32", 0)...
    done (took 0.030222039 seconds)
    (225/341) benchmarking ("broadcast", "identity", "Bool", 0)...
    done (took 0.148700555 seconds)
    (226/341) benchmarking ("perf_sum", "Int64", 1)...
    done (took 0.029812586 seconds)
    (227/341) benchmarking ("skipmissing", "sum", "Float64", 0)...
    done (took 0.027244634 seconds)
    (228/341) benchmarking ("broadcast", "abs", "Float64", 0)...
    done (took 0.02048583 seconds)
    (229/341) benchmarking ("perf_simplecopy", "BigInt", 0)...
    done (took 0.029401979 seconds)
    (230/341) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.033435482 seconds)
    (231/341) benchmarking ("perf_countequals", "Float64")...
    done (took 0.031084898 seconds)
    (232/341) benchmarking ("skipmissing", "collect", "Int64", 0)...
    done (took 0.037548562 seconds)
    (233/341) benchmarking ("perf_sum3", "BigInt", 0)...
    done (took 0.021948592 seconds)
    (234/341) benchmarking ("collect", "all", "Int8", 1)...
    done (took 0.025602355 seconds)
    (235/341) benchmarking ("perf_sum", "Bool", 0)...
    done (took 0.032903556 seconds)
    (236/341) benchmarking ("perf_countnothing", "Float32", 1)...
    done (took 0.031562418 seconds)
    (237/341) benchmarking ("perf_simplecopy", "Int64", 1)...
    done (took 0.021102302 seconds)
    (238/341) benchmarking ("collect", "all", "Float64", 1)...
    done (took 0.026009929 seconds)
    (239/341) benchmarking ("broadcast", "*", "Int8", "(false, false)")...
    done (took 0.02031206 seconds)
    (240/341) benchmarking ("perf_countnothing", "Complex{Float64}", 1)...
    done (took 0.031623219 seconds)
    (241/341) benchmarking ("perf_countnothing", "Complex{Float64}", 0)...
    done (took 0.030796825 seconds)
    (242/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(true, true)")...
    done (took 0.02229984 seconds)
    (243/341) benchmarking ("sort", "Union{Nothing, Int64}", 0)...
    done (took 0.120392338 seconds)
    (244/341) benchmarking ("map", "abs", "Float32", 1)...
    done (took 0.107566666 seconds)
    (245/341) benchmarking ("skipmissing", "sum", "Union{Missing, Float64}", 1)...
    done (took 0.093822492 seconds)
    (246/341) benchmarking ("perf_sum4", "Complex{Float64}", 0)...
    done (took 0.02782718 seconds)
    (247/341) benchmarking ("map", "identity", "Float32", 1)...
    done (took 0.02211373 seconds)
    (248/341) benchmarking ("map", "*", "Int8", "(false, true)")...
    done (took 0.021570525 seconds)
    (249/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Bool}", 0)...
    done (took 0.073361289 seconds)
    (250/341) benchmarking ("broadcast", "abs", "Complex{Float64}", 1)...
    done (took 0.020388283 seconds)
    (251/341) benchmarking ("perf_sum4", "Float64", 0)...
    done (took 0.029547055 seconds)
    (252/341) benchmarking ("perf_sum3", "Int64", 0)...
    done (took 0.031268102 seconds)
    (253/341) benchmarking ("map", "*", "BigFloat", "(false, true)")...
    done (took 0.039313817 seconds)
    (254/341) benchmarking ("broadcast", "*", "Bool", "(true, true)")...
    done (took 0.020304091 seconds)
    (255/341) benchmarking ("broadcast", "*", "Float32", "(true, true)")...
    done (took 0.020219806 seconds)
    (256/341) benchmarking ("map", "abs", "Int64", 0)...
    done (took 0.091177982 seconds)
    (257/341) benchmarking ("perf_sum", "Bool", 1)...
    done (took 0.030045167 seconds)
    (258/341) benchmarking ("map", "abs", "Float32", 0)...
    done (took 0.020653396 seconds)
    (259/341) benchmarking ("collect", "filter", "Float64", 0)...
    done (took 0.175870223 seconds)
    (260/341) benchmarking ("perf_sum", "Int8", 1)...
    done (took 0.029699614 seconds)
    (261/341) benchmarking ("perf_sum2", "Float64", 1)...
    done (took 0.020920598 seconds)
    (262/341) benchmarking ("perf_sum3", "Complex{Float64}", 1)...
    done (took 0.021449853 seconds)
    (263/341) benchmarking ("collect", "filter", "Complex{Float64}", 1)...
    done (took 0.022982534 seconds)
    (264/341) benchmarking ("collect", "filter", "Float64", 1)...
    done (took 0.022901745 seconds)
    (265/341) benchmarking ("map", "*", "Float64", "(true, true)")...
    done (took 0.021205972 seconds)
    (266/341) benchmarking ("skipmissing", "sum", "Int8", 0)...
    done (took 0.051222617 seconds)
    (267/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Int8}", 0)...
    done (took 0.045254773 seconds)
    (268/341) benchmarking ("perf_binaryop", "*", "BigInt", "(false, false)")...
    done (took 0.022703152 seconds)
    (269/341) benchmarking ("perf_sum3", "Float64", 0)...
    done (took 0.020558816 seconds)
    (270/341) benchmarking ("broadcast", "identity", "Float64", 0)...
    done (took 0.144914857 seconds)
    (271/341) benchmarking ("map", "identity", "Int64", 1)...
    done (took 0.021257476 seconds)
    (272/341) benchmarking ("perf_countnothing", "Float64", 0)...
    done (took 0.030899315 seconds)
    (273/341) benchmarking ("sort", "Int64", 0)...
    done (took 0.024942127 seconds)
    (274/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Float64}", 0)...
    done (took 0.044838806 seconds)
    (275/341) benchmarking ("perf_countnothing", "BigInt", 0)...
    done (took 0.025781552 seconds)
    (276/341) benchmarking ("map", "*", "Bool", "(false, true)")...
    done (took 0.020897124 seconds)
    (277/341) benchmarking ("collect", "filter", "BigInt", 1)...
    done (took 0.022941899 seconds)
    (278/341) benchmarking ("broadcast", "*", "Float64", "(false, true)")...
    done (took 0.020141887 seconds)
    (279/341) benchmarking ("skipmissing", "sum", "Union{Missing, Complex{Float64}}", 1)...
    done (took 0.10088378 seconds)
    (280/341) benchmarking ("perf_sum4", "Bool", 0)...
    done (took 0.029255556 seconds)
    (281/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Int64}", 0)...
    done (took 0.043654564 seconds)
    (282/341) benchmarking ("perf_simplecopy", "BigFloat", 1)...
    done (took 0.021049589 seconds)
    (283/341) benchmarking ("broadcast", "abs", "BigFloat", 0)...
    done (took 0.021232501 seconds)
    (284/341) benchmarking ("map", "abs", "Bool", 1)...
    done (took 0.033644319 seconds)
    (285/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Float32}", 0)...
    done (took 0.072521137 seconds)
    (286/341) benchmarking ("collect", "filter", "BigFloat", 1)...
    done (took 0.022997723 seconds)
    (287/341) benchmarking ("perf_sum2", "Bool", 0)...
    done (took 0.020158442 seconds)
    (288/341) benchmarking ("perf_sum4", "Int64", 1)...
    done (took 0.029249656 seconds)
    (289/341) benchmarking ("perf_countnothing", "Int64", 0)...
    done (took 0.031457536 seconds)
    (290/341) benchmarking ("collect", "filter", "Int8", 1)...
    done (took 0.022794231 seconds)
    (291/341) benchmarking ("perf_simplecopy", "Float64", 0)...
    done (took 0.020853577 seconds)
    (292/341) benchmarking ("perf_binaryop", "*", "Float64", "(true, true)")...
    done (took 0.021351345 seconds)
    (293/341) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.032156128 seconds)
    (294/341) benchmarking ("perf_binaryop", "*", "Int8", "(false, true)")...
    done (took 0.021059597 seconds)
    (295/341) benchmarking ("broadcast", "identity", "BigFloat", 0)...
    done (took 0.019958828 seconds)
    (296/341) benchmarking ("perf_sum2", "Complex{Float64}", 0)...
    done (took 0.021073519 seconds)
    (297/341) benchmarking ("perf_countnothing", "Int64", 1)...
    done (took 0.030657871 seconds)
    (298/341) benchmarking ("perf_countnothing", "BigInt", 1)...
    done (took 0.024865599 seconds)
    (299/341) benchmarking ("perf_binaryop", "*", "Bool", "(false, true)")...
    done (took 0.021256061 seconds)
    (300/341) benchmarking ("broadcast", "*", "Int8", "(false, true)")...
    done (took 0.019990562 seconds)
    (301/341) benchmarking ("broadcast", "*", "Complex{Float64}", "(false, true)")...
    done (took 0.020002555 seconds)
    (302/341) benchmarking ("skipmissing", "sum", "Union{Missing, Int64}", 1)...
    done (took 0.09960378 seconds)
    (303/341) benchmarking ("broadcast", "*", "Int64", "(false, false)")...
    done (took 0.021175106 seconds)
    (304/341) benchmarking ("map", "abs", "Float64", 1)...
    done (took 0.034889206 seconds)
    (305/341) benchmarking ("perf_sum3", "Float32", 0)...
    done (took 0.020228216 seconds)
    (306/341) benchmarking ("skipmissing", "collect", "Union{Missing, Float32}", 1)...
    done (took 0.049951915 seconds)
    (307/341) benchmarking ("broadcast", "abs", "Int64", 0)...
    done (took 0.02023833 seconds)
    (308/341) benchmarking ("sort", "Union{Missing, BigFloat}", 1)...
    done (took 0.140209699 seconds)
    (309/341) benchmarking ("broadcast", "identity", "Bool", 1)...
    done (took 0.020246447 seconds)
    (310/341) benchmarking ("map", "abs", "Int64", 1)...
    done (took 0.034441551 seconds)
    (311/341) benchmarking ("perf_simplecopy", "BigInt", 1)...
    done (took 0.021337596 seconds)
    (312/341) benchmarking ("perf_sum", "Float64", 0)...
    done (took 0.024770822 seconds)
    (313/341) benchmarking ("perf_simplecopy", "Int8", 1)...
    done (took 0.021364685 seconds)
    (314/341) benchmarking ("perf_countnothing", "Float32", 0)...
    done (took 0.031697594 seconds)
    (315/341) benchmarking ("map", "identity", "BigInt", 0)...
    done (took 0.041729637 seconds)
    (316/341) benchmarking ("sort", "Union{Nothing, Bool}", 0)...
    done (took 0.126783322 seconds)
    (317/341) benchmarking ("perf_binaryop", "*", "Int64", "(true, true)")...
    done (took 0.02495502 seconds)
    (318/341) benchmarking ("collect", "all", "BigInt", 1)...
    done (took 0.043078516 seconds)
    (319/341) benchmarking ("map", "abs", "Complex{Float64}", 1)...
    done (took 0.041155316 seconds)
    (320/341) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.036324425 seconds)
    (321/341) benchmarking ("map", "*", "BigFloat", "(true, true)")...
    done (took 0.026969743 seconds)
    (322/341) benchmarking ("map", "identity", "Complex{Float64}", 1)...
    done (took 0.024058199 seconds)
    (323/341) benchmarking ("broadcast", "identity", "Complex{Float64}", 1)...
    done (took 0.023179746 seconds)
    (324/341) benchmarking ("collect", "all", "Bool", 1)...
    done (took 0.029381601 seconds)
    (325/341) benchmarking ("map", "identity", "BigInt", 1)...
    done (took 0.025037924 seconds)
    (326/341) benchmarking ("skipmissing", "sum", "Int64", 0)...
    done (took 0.033516842 seconds)
    (327/341) benchmarking ("perf_binaryop", "*", "Float64", "(false, true)")...
    done (took 0.024791153 seconds)
    (328/341) benchmarking ("perf_countnothing", "Int8", 0)...
    done (took 0.037585009 seconds)
    (329/341) benchmarking ("perf_sum4", "BigFloat", 1)...
    done (took 0.026396859 seconds)
    (330/341) benchmarking ("perf_countnothing", "Int8", 1)...
    done (took 0.037011913 seconds)
    (331/341) benchmarking ("perf_sum3", "Int64", 1)...
    done (took 0.023522337 seconds)
    (332/341) benchmarking ("broadcast", "abs", "Float32", 1)...
    done (took 0.024174545 seconds)
    (333/341) benchmarking ("perf_binaryop", "*", "Int8", "(false, false)")...
    done (took 0.025932049 seconds)
    (334/341) benchmarking ("skipmissing", "collect", "Union{Missing, Bool}", 1)...
    done (took 0.058523828 seconds)
    (335/341) benchmarking ("broadcast", "identity", "Int64", 0)...
    done (took 0.023158795 seconds)
    (336/341) benchmarking ("perf_sum3", "Bool", 1)...
    done (took 0.023383824 seconds)
    (337/341) benchmarking ("skipmissing", "sum", "BigInt", 0)...
    done (took 0.057471053 seconds)
    (338/341) benchmarking ("broadcast", "identity", "Float64", 1)...
    done (took 0.023149773 seconds)
    (339/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Bool}", 0)...
    done (took 0.052282597 seconds)
    (340/341) benchmarking ("skipmissing", "collect", "BigFloat", 0)...
    done (took 0.04520342 seconds)
    (341/341) benchmarking ("collect", "filter", "Int64", 0)...
    done (took 0.026320232 seconds)
  done (took 20.854288604 seconds)
done (took 21.617446855 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.042665112 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.046260963 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.028597966 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.041784394 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.03872364 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.040568419 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.029377447 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.035393517 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.038368303 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.037753395 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.035474467 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.024087528 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.031471535 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.031614639 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.029623414 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.047036684 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.038494612 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.035297396 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.036695789 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.024929859 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.036637284 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.025492598 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.024650269 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.02898248 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.042266362 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.035677235 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.038077593 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.037776578 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.025549196 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.030204313 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.032711422 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.036875655 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.025184667 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.042406287 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.037273675 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.036733505 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.038837194 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.042373156 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.024805636 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.025816312 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.041976208 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.025510675 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.033120445 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.028954444 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.027014678 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.029466246 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.032695084 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.037143522 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.046730093 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.027729741 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.035064638 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.035840052 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.034813561 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.028082373 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.026907623 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.030790043 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.028834717 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.047141788 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.030262155 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.026804325 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.034608113 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.032464251 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.029153597 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.030710029 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.03031301 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.034376777 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.035482804 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.029418226 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.034571426 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.029689828 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.021147411 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.030773089 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.026812804 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.021982043 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.036434077 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.037166677 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.022580516 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.028188954 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.033869342 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.032542975 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.02129292 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.026651825 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.020788771 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.027151606 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.026612049 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.024211057 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.026580464 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.030004641 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.020700306 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.030825858 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.029476635 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.030085205 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.020981431 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.036395055 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.021079537 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.028694436 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.021587869 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.021808629 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.0205965 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.026822954 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.020995082 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.026518948 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.031431221 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.021562772 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.029959666 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.041176965 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.022484328 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.032210152 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.021882747 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.022136486 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.037343706 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.036665941 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.023140164 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.028556077 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.022377783 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.032850865 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.023011239 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.022944795 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.023113283 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.022709641 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.028337961 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.022772402 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.028372062 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.030638427 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.038125953 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.022514501 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.028879725 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.028467586 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.022793308 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.030257516 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.023144909 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.022840007 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.022240633 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.034899481 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.028154294 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.023306863 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.03075097 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.028506284 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.033376462 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.021680357 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.033397599 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.029717075 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.02857444 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.031042027 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.021944472 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.031781886 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.028410561 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.028172394 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.02236076 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.023165866 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.021568703 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.022604862 seconds)
done (took 5.522765871 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.040867288 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.076559581 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.06794578 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.041372973 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.040013438 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.022160076 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.031325667 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.05234591 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.024404998 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.059214877 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.046071145 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.046583439 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.058870038 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.020302312 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.021406517 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.022444628 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.022726951 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.035734925 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.042628405 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.047504109 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.066513344 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.021105948 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.048461537 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.045641129 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.038707717 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.046871637 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.022690316 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.022631281 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.024597727 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.046295473 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.051162629 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.025033006 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.022432609 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.0510775 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.044387298 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.037223721 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.02207791 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.031299547 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.022313493 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.021294853 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.023328996 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.045366508 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.031470948 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.031308786 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.022816232 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.029746014 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.022907851 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.040858305 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.040723493 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.03201729 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.040068994 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.048573088 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.025764886 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.040278281 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.020335601 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.03885344 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.032050342 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.021045052 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.021903873 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.026519104 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.0217326 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.024625023 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.035304439 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.031990755 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.027147444 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.038999802 seconds)
  done (took 3.161891732 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.044337659 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.052505336 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.039725068 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.040842013 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.022435111 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.022075365 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.02215655 seconds)
  done (took 1.085121244 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.0391755 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.033697793 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.037312349 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.040145968 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.02721469 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.038896242 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.029651999 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.036891638 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.054758858 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.02091189 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.036295091 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.046039859 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.026031324 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.035434144 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.039345414 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.040589817 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.03967884 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.037303502 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.022125738 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.038722732 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.027351897 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.054184483 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.035390432 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.022317057 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.025466032 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.022522129 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.047477737 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.030228211 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.023298395 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.023205268 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.023426833 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.053653723 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.027327301 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.038003465 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.024397566 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.031815384 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.026886938 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.025776442 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.024145689 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.034300007 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.026179818 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.023105221 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.020936356 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.023387768 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.025399773 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.024556893 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.020848983 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.02342088 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.022933479 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.033471005 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.020941137 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.025378376 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.026143081 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.029309471 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.028773632 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.027757839 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.031676758 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.02385605 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.034555714 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.023273845 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.031209031 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.030209385 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.02596545 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.030309211 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.035094868 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.025242656 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.026105897 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.023125558 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.033929806 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.025713119 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.031612281 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.025763378 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.024512724 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.039089476 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.021418069 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.039596675 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.039019695 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.022112904 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.037837464 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.023134657 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.023246391 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.036310947 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.038963819 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.028834613 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.022906724 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.027401808 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.024750786 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.025993737 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.041005412 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.051383306 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.023728779 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.028363179 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.023262141 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.026679585 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.026207341 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.03068599 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.021600029 seconds)
  done (took 3.761998468 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.026240352 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.023694905 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.024894137 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.023150058 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.022932893 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.023035664 seconds)
  done (took 0.981126238 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.049379365 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.022503752 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.03659444 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.022359401 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.063486871 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.029867175 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.030097417 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.032949972 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.038305023 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.035938864 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.030979331 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.034527338 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.035775918 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.025085884 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.029750221 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.035682602 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.030188116 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.03079799 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.035430185 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.025410172 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.038375409 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.025023243 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.025318966 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.034085942 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.026814744 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.035992758 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.037624772 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.035890511 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.035146311 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.034128885 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.024852358 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.026771314 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.03041316 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.033768103 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.030650675 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.030372868 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.02315054 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.02936763 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.026886552 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.026727039 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.032610562 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.025438125 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.026611861 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.030916071 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.035553997 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.032962171 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.029601912 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.033379519 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.029663337 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.028872886 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.029341116 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.023937048 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.026431963 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.028981747 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.030563854 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.033985429 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.028846313 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.030178995 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.024781004 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.030008279 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.02326622 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.026405419 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.032834107 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.026673945 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.031341912 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.028756737 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.030495759 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.025426193 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.025105932 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.023106079 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.028934872 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.023174518 seconds)
  done (took 3.024425722 seconds)
done (took 12.878082268 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.590299344 seconds)
  done (took 1.40452951 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.734130472 seconds)
  done (took 1.578599131 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 0.053626342 seconds)
  done (took 0.906851855 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.485002206 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.588886447 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.831788548 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.117368189 seconds)
  done (took 2.855030108 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.892187699 seconds)
  done (took 1.759315115 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.246630236 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.204564134 seconds)
  done (took 1.375036501 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.48921849 seconds)
  done (took 1.322332004 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.179586807 seconds)
  done (took 2.015643856 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.213451814 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.13028752 seconds)
  done (took 1.184963743 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.432546208 seconds)
  done (took 1.261924152 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 5.427400968 seconds)
  done (took 6.273556006 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.202562178 seconds)
  done (took 1.125146952 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.217537092 seconds)
  done (took 1.049495137 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 0.865753856 seconds)
  done (took 1.697117525 seconds)
done (took 26.642062702 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.050649843 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.043703438 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.043033393 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.038639795 seconds)
  done (took 0.998763619 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.03215444 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.026397961 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.03130905 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.026038234 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.030820475 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.025798724 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.027223704 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.028963702 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.026064147 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.025878651 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.025513467 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.025686614 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.028559879 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.02718911 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.024228721 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.029097978 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.029933314 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.025464926 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.028567223 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.025814912 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.023779866 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.028908663 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.029355109 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.025084786 seconds)
  done (took 1.49403484 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.036568682 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.028863122 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.031765886 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.027423108 seconds)
  done (took 0.961634712 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.040409297 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.050923582 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.038719584 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.03832198 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.053188517 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.047486214 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.025614128 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.025383465 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.026771021 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.037965139 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.023976966 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.057940687 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.048875577 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.033613398 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.036619905 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.017909797 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.020334611 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.042461173 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.034335419 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.040591938 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.023578984 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.033734888 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.020877495 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.045146015 seconds)
  done (took 1.726818901 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.044638238 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.020717224 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.043458951 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.049588539 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.051776904 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.020840461 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.043016218 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.051494447 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.09091961 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.020839338 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.027478195 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.020707365 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.06457104 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.02065435 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.043696053 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.070351297 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.076245761 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.025981353 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.058126383 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.021032322 seconds)
  done (took 1.704409203 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.030532898 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.027024337 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.026971956 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.020717794 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.034561565 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.028696098 seconds)
  done (took 1.004485091 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.028055018 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.025813666 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.023596132 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.023272376 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.029153164 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.02300073 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.021251583 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.02357377 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.023703247 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.023152028 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.022182188 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.021760309 seconds)
  done (took 1.130409518 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.177141948 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.029017641 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.028955168 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.021148774 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.028317756 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.02186545 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.040158702 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.024926073 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.052670424 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.021998625 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.021918373 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.025121967 seconds)
  done (took 1.330201815 seconds)
  (9/13) benchmarking "index"...
    (1/608) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191422673 seconds)
    (2/608) benchmarking ("sumrange", "Array{Int64,2}")...
    done (took 0.054822579 seconds)
    (3/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.03029492 seconds)
    (4/608) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194257366 seconds)
    (5/608) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111618954 seconds)
    (6/608) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.064945482 seconds)
    (7/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int64,Array{Int64,2}}")...
    done (took 0.116796402 seconds)
    (8/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int32,Array{Int32,2}}")...
    done (took 0.053002062 seconds)
    (9/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.071323258 seconds)
    (10/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.073873209 seconds)
    (11/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.066538578 seconds)
    (12/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float64,Array{Float64,2}}")...
    done (took 0.109959544 seconds)
    (13/608) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.103226503 seconds)
    (14/608) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.05653945 seconds)
    (15/608) benchmarking ("sumrange_view", "Array{Float64,2}")...
    done (took 0.045088455 seconds)
    (16/608) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121548449 seconds)
    (17/608) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164899651 seconds)
    (18/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.065618293 seconds)
    (19/608) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094570313 seconds)
    (20/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.045443512 seconds)
    (21/608) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.069015888 seconds)
    (22/608) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108159119 seconds)
    (23/608) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125321651 seconds)
    (24/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.058531243 seconds)
    (25/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int32,Array{Int32,2}}")...
    done (took 0.099343771 seconds)
    (26/608) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121538604 seconds)
    (27/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int32,Array{Int32,2}}")...
    done (took 0.122167466 seconds)
    (28/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.089619729 seconds)
    (29/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.056640123 seconds)
    (30/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.06218288 seconds)
    (31/608) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.075336018 seconds)
    (32/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107981723 seconds)
    (33/608) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101247233 seconds)
    (34/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.034424211 seconds)
    (35/608) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.026987264 seconds)
    (36/608) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.121654076 seconds)
    (37/608) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.083878279 seconds)
    (38/608) benchmarking ("sumvector", "Base.ReinterpretArray{Float32,2,Int32,Array{Int32,2}}")...
    done (took 0.0831674 seconds)
    (39/608) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106105111 seconds)
    (40/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.066009828 seconds)
    (41/608) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.051254661 seconds)
    (42/608) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136656465 seconds)
    (43/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float64,Array{Float64,2}}")...
    done (took 0.047428109 seconds)
    (44/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float64,Array{Float64,2}}")...
    done (took 0.110009107 seconds)
    (45/608) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127625117 seconds)
    (46/608) benchmarking ("sumeach", "Array{Float64,2}")...
    done (took 0.025327574 seconds)
    (47/608) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099859869 seconds)
    (48/608) benchmarking ("sumvector", "Array{Int64,2}")...
    done (took 0.060681988 seconds)
    (49/608) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109830432 seconds)
    (50/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float32,Array{Float32,2}}")...
    done (took 0.05341129 seconds)
    (51/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int64,Array{Int64,2}}")...
    done (took 0.113012645 seconds)
    (52/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.040401663 seconds)
    (53/608) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.089866052 seconds)
    (54/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int64,Array{Int64,2}}")...
    done (took 0.057411024 seconds)
    (55/608) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.117664771 seconds)
    (56/608) benchmarking ("sumrange", "Base.ReinterpretArray{Float32,2,Int32,Array{Int32,2}}")...
    done (took 0.104158753 seconds)
    (57/608) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207272064 seconds)
    (58/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.056288497 seconds)
    (59/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float64,Array{Float64,2}}")...
    done (took 0.053795405 seconds)
    (60/608) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161910608 seconds)
    (61/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.079165305 seconds)
    (62/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.043698886 seconds)
    (63/608) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112126536 seconds)
    (64/608) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098120906 seconds)
    (65/608) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.097263895 seconds)
    (66/608) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.076903921 seconds)
    (67/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.056621897 seconds)
    (68/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{Float32,2,Int32,Array{Int32,2}}")...
    done (took 0.128698522 seconds)
    (69/608) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184201564 seconds)
    (70/608) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109906256 seconds)
    (71/608) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.100354796 seconds)
    (72/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.043829145 seconds)
    (73/608) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081770751 seconds)
    (74/608) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.070328462 seconds)
    (75/608) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.073309993 seconds)
    (76/608) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.07999827 seconds)
    (77/608) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147296106 seconds)
    (78/608) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122107745 seconds)
    (79/608) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088465014 seconds)
    (80/608) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.025850646 seconds)
    (81/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.070951258 seconds)
    (82/608) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113760274 seconds)
    (83/608) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.094752934 seconds)
    (84/608) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.068487643 seconds)
    (85/608) benchmarking ("mapr_access", "Array{Int64,2}")...
    done (took 0.106794817 seconds)
    (86/608) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.083719324 seconds)
    (87/608) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.046085468 seconds)
    (88/608) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090292017 seconds)
    (89/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120749923 seconds)
    (90/608) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.08485805 seconds)
    (91/608) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101978553 seconds)
    (92/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float64,Array{Float64,2}}")...
    done (took 0.088717052 seconds)
    (93/608) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.043652345 seconds)
    (94/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Float32,2,Int32,Array{Int32,2}}")...
    done (took 0.100133248 seconds)
    (95/608) benchmarking ("sum", "3dsubarray")...
    done (took 0.078033813 seconds)
    (96/608) benchmarking ("sumlogical_view", "Array{Float64,2}")...
    done (took 0.087884717 seconds)
    (97/608) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082322141 seconds)
    (98/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102492151 seconds)
    (99/608) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091119086 seconds)
    (100/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float32,Array{Float32,2}}")...
    done (took 0.11753447 seconds)
    (101/608) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142090306 seconds)
    (102/608) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090113017 seconds)
    (103/608) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.028949368 seconds)
    (104/608) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.085969483 seconds)
    (105/608) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.060959792 seconds)
    (106/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.037461155 seconds)
    (107/608) benchmarking "5d"...
    done (took 0.119862265 seconds)
    (108/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.031024534 seconds)
    (109/608) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142066726 seconds)
    (110/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int32,Array{Int32,2}}")...
    done (took 0.10360895 seconds)
    (111/608) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.058872111 seconds)
    (112/608) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.084365419 seconds)
    (113/608) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.093684156 seconds)
    (114/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.072021052 seconds)
    (115/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.067894709 seconds)
    (116/608) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119617068 seconds)
    (117/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int64,Array{Int64,2}}")...
    done (took 0.063193058 seconds)
    (118/608) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104253671 seconds)
    (119/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.065010962 seconds)
    (120/608) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.038442643 seconds)
    (121/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.064669672 seconds)
    (122/608) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.081493066 seconds)
    (123/608) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10788879 seconds)
    (124/608) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.04516997 seconds)
    (125/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.069358329 seconds)
    (126/608) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.075343811 seconds)
    (127/608) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.034963633 seconds)
    (128/608) benchmarking ("sumrange", "Array{Float64,2}")...
    done (took 0.039306975 seconds)
    (129/608) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.094943681 seconds)
    (130/608) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.030641036 seconds)
    (131/608) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083013857 seconds)
    (132/608) benchmarking ("sumvector_view", "Array{Float64,2}")...
    done (took 0.049017841 seconds)
    (133/608) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.049587882 seconds)
    (134/608) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080389077 seconds)
    (135/608) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.526437012 seconds)
    (136/608) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.034434618 seconds)
    (137/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080099319 seconds)
    (138/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.059074524 seconds)
    (139/608) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.059710056 seconds)
    (140/608) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.087458858 seconds)
    (141/608) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115001035 seconds)
    (142/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.042957438 seconds)
    (143/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.036015378 seconds)
    (144/608) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129344569 seconds)
    (145/608) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.079613327 seconds)
    (146/608) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.060324854 seconds)
    (147/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101535973 seconds)
    (148/608) benchmarking ("sumcartesian_view", "Array{Float64,2}")...
    done (took 0.05835827 seconds)
    (149/608) benchmarking ("sumelt", "Array{Float64,2}")...
    done (took 0.026454278 seconds)
    (150/608) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.077823186 seconds)
    (151/608) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.119431461 seconds)
    (152/608) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.054841539 seconds)
    (153/608) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.101644765 seconds)
    (154/608) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131331475 seconds)
    (155/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.046146159 seconds)
    (156/608) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123390543 seconds)
    (157/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int32,Array{Int32,2}}")...
    done (took 0.049153866 seconds)
    (158/608) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.060368746 seconds)
    (159/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.039315983 seconds)
    (160/608) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.058973045 seconds)
    (161/608) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.080059151 seconds)
    (162/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077880149 seconds)
    (163/608) benchmarking "ind2sub"...
    done (took 0.083043619 seconds)
    (164/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.035205063 seconds)
    (165/608) benchmarking ("sumlinear_view", "Array{Float64,2}")...
    done (took 0.073925839 seconds)
    (166/608) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.077108823 seconds)
    (167/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float32,Array{Float32,2}}")...
    done (took 0.082881828 seconds)
    (168/608) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120866645 seconds)
    (169/608) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.029062487 seconds)
    (170/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float64,Array{Float64,2}}")...
    done (took 0.04879605 seconds)
    (171/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.053321801 seconds)
    (172/608) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09342624 seconds)
    (173/608) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.035385514 seconds)
    (174/608) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.034510063 seconds)
    (175/608) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.060421754 seconds)
    (176/608) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.059381241 seconds)
    (177/608) benchmarking ("sumcolon", "Array{Float64,2}")...
    done (took 0.052197577 seconds)
    (178/608) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.052894958 seconds)
    (179/608) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.052407751 seconds)
    (180/608) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.059083698 seconds)
    (181/608) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094373322 seconds)
    (182/608) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.07994281 seconds)
    (183/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.061747873 seconds)
    (184/608) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085605053 seconds)
    (185/608) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.052997461 seconds)
    (186/608) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.123565288 seconds)
    (187/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int32,Array{Int32,2}}")...
    done (took 0.09749953 seconds)
    (188/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.04242896 seconds)
    (189/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float32,Array{Float32,2}}")...
    done (took 0.11739687 seconds)
    (190/608) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.060157091 seconds)
    (191/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.061048682 seconds)
    (192/608) benchmarking ("sumelt", "1:100000")...
    done (took 0.026073894 seconds)
    (193/608) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.088242661 seconds)
    (194/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int64,Array{Int64,2}}")...
    done (took 0.047075848 seconds)
    (195/608) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113743553 seconds)
    (196/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.034141351 seconds)
    (197/608) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115570995 seconds)
    (198/608) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.078712923 seconds)
    (199/608) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.074277312 seconds)
    (200/608) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079629878 seconds)
    (201/608) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.040195452 seconds)
    (202/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.100709356 seconds)
    (203/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.036899631 seconds)
    (204/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float32,Array{Float32,2}}")...
    done (took 0.049797504 seconds)
    (205/608) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.108561132 seconds)
    (206/608) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.029071649 seconds)
    (207/608) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078769393 seconds)
    (208/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int64,Array{Int64,2}}")...
    done (took 0.068950866 seconds)
    (209/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float64,Array{Float64,2}}")...
    done (took 0.093700203 seconds)
    (210/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077916984 seconds)
    (211/608) benchmarking ("sumelt_boundscheck", "Array{Int64,2}")...
    done (took 0.032015525 seconds)
    (212/608) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.078878883 seconds)
    (213/608) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.123349761 seconds)
    (214/608) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.109015843 seconds)
    (215/608) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.086341903 seconds)
    (216/608) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.097850513 seconds)
    (217/608) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101006719 seconds)
    (218/608) benchmarking ("sumcolon_view", "Array{Float64,2}")...
    done (took 0.033379716 seconds)
    (219/608) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.091052162 seconds)
    (220/608) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.068766269 seconds)
    (221/608) benchmarking ("sumelt", "Base.ReinterpretArray{Float32,2,Int32,Array{Int32,2}}")...
    done (took 0.047291332 seconds)
    (222/608) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.046040494 seconds)
    (223/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075240073 seconds)
    (224/608) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092723926 seconds)
    (225/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float64,Array{Float64,2}}")...
    done (took 0.06236116 seconds)
    (226/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int32,Array{Int32,2}}")...
    done (took 0.086364888 seconds)
    (227/608) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.02805349 seconds)
    (228/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float32,Array{Float32,2}}")...
    done (took 0.086684653 seconds)
    (229/608) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.04197356 seconds)
    (230/608) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.06134273 seconds)
    (231/608) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.051032506 seconds)
    (232/608) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.052055227 seconds)
    (233/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.039913962 seconds)
    (234/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Int32,3,Float64,Array{Float64,3}}")...
    done (took 0.115204911 seconds)
    (235/608) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104428518 seconds)
    (236/608) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.082169519 seconds)
    (237/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.071604 seconds)
    (238/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int32,Array{Int32,2}}")...
    done (took 0.058089113 seconds)
    (239/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.075961349 seconds)
    (240/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Float32,2,Int32,Array{Int32,2}}")...
    done (took 0.038132132 seconds)
    (241/608) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.059065103 seconds)
    (242/608) benchmarking ("sumlogical_view", "Array{Int64,2}")...
    done (took 0.088129199 seconds)
    (243/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.116852999 seconds)
    (244/608) benchmarking ("sumeach", "1:100000")...
    done (took 0.035153476 seconds)
    (245/608) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.085606818 seconds)
    (246/608) benchmarking ("sumvector", "1:100000")...
    done (took 0.083958296 seconds)
    (247/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int64,Array{Int64,2}}")...
    done (took 0.142862331 seconds)
    (248/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.052621922 seconds)
    (249/608) benchmarking ("sumlogical", "1:100000")...
    done (took 0.116751729 seconds)
    (250/608) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115943612 seconds)
    (251/608) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093733249 seconds)
    (252/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.058908771 seconds)
    (253/608) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.096723309 seconds)
    (254/608) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.028184572 seconds)
    (255/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.031065056 seconds)
    (256/608) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.046460643 seconds)
    (257/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Int32,3,Float64,Array{Float64,3}}")...
    done (took 0.060261689 seconds)
    (258/608) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083194456 seconds)
    (259/608) benchmarking ("sumvector", "Array{Float64,2}")...
    done (took 0.056549197 seconds)
    (260/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Float32,2,Int32,Array{Int32,2}}")...
    done (took 0.086008468 seconds)
    (261/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.040081837 seconds)
    (262/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.040318622 seconds)
    (263/608) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.074168678 seconds)
    (264/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112626084 seconds)
    (265/608) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.086990553 seconds)
    (266/608) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096563688 seconds)
    (267/608) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.084928603 seconds)
    (268/608) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.076526614 seconds)
    (269/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.122738113 seconds)
    (270/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float32,Array{Float32,2}}")...
    done (took 0.131470323 seconds)
    (271/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float32,Array{Float32,2}}")...
    done (took 0.077346458 seconds)
    (272/608) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.027156745 seconds)
    (273/608) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105505918 seconds)
    (274/608) benchmarking "4d"...
    done (took 0.082715835 seconds)
    (275/608) benchmarking ("sumlinear_view", "Array{Int64,2}")...
    done (took 0.076662813 seconds)
    (276/608) benchmarking ("sumlogical", "Base.ReinterpretArray{Float32,2,Int32,Array{Int32,2}}")...
    done (took 0.111135231 seconds)
    (277/608) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.082282272 seconds)
    (278/608) benchmarking ("sumeach", "Base.ReinterpretArray{Int32,3,Float64,Array{Float64,3}}")...
    done (took 0.042527309 seconds)
    (279/608) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.067503627 seconds)
    (280/608) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.048677051 seconds)
    (281/608) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.057404683 seconds)
    (282/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106825117 seconds)
    (283/608) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.064025958 seconds)
    (284/608) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14924716 seconds)
    (285/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int32,Array{Int32,2}}")...
    done (took 0.055000391 seconds)
    (286/608) benchmarking ("sumeach", "Array{Int64,2}")...
    done (took 0.028550427 seconds)
    (287/608) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.074813087 seconds)
    (288/608) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.084659206 seconds)
    (289/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float64,Array{Float64,2}}")...
    done (took 0.124445681 seconds)
    (290/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int32,Array{Int32,2}}")...
    done (took 0.587780955 seconds)
    (291/608) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113529218 seconds)
    (292/608) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.05940911 seconds)
    (293/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.033604667 seconds)
    (294/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.060279762 seconds)
    (295/608) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085148854 seconds)
    (296/608) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.055083641 seconds)
    (297/608) benchmarking ("sumvector_view", "Array{Int64,2}")...
    done (took 0.039844714 seconds)
    (298/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float32,Array{Float32,2}}")...
    done (took 0.074944506 seconds)
    (299/608) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097695074 seconds)
    (300/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.05420236 seconds)
    (301/608) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.040648279 seconds)
    (302/608) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.063621781 seconds)
    (303/608) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.033158793 seconds)
    (304/608) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.052644066 seconds)
    (305/608) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084384821 seconds)
    (306/608) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.072158296 seconds)
    (307/608) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.090950576 seconds)
    (308/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Int32,3,Float64,Array{Float64,3}}")...
    done (took 0.040620947 seconds)
    (309/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float32,Array{Float32,2}}")...
    done (took 0.055129377 seconds)
    (310/608) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.069203075 seconds)
    (311/608) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095920484 seconds)
    (312/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.033285501 seconds)
    (313/608) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.070754501 seconds)
    (314/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.081292605 seconds)
    (315/608) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.077446719 seconds)
    (316/608) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.035200197 seconds)
    (317/608) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.074506177 seconds)
    (318/608) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127635393 seconds)
    (319/608) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.054416254 seconds)
    (320/608) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.07255588 seconds)
    (321/608) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107916399 seconds)
    (322/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int64,Array{Int64,2}}")...
    done (took 0.047017435 seconds)
    (323/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int32,Array{Int32,2}}")...
    done (took 0.058234781 seconds)
    (324/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.033411807 seconds)
    (325/608) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.100209745 seconds)
    (326/608) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128594793 seconds)
    (327/608) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102813408 seconds)
    (328/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.03958634 seconds)
    (329/608) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.060510817 seconds)
    (330/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080805936 seconds)
    (331/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084225945 seconds)
    (332/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float64,Array{Float64,2}}")...
    done (took 0.091647282 seconds)
    (333/608) benchmarking ("sumelt_boundscheck", "Array{Float64,2}")...
    done (took 0.027227939 seconds)
    (334/608) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.073064322 seconds)
    (335/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094418545 seconds)
    (336/608) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.059579357 seconds)
    (337/608) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.096249311 seconds)
    (338/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.069069227 seconds)
    (339/608) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.04134624 seconds)
    (340/608) benchmarking ("sumcartesian_view", "Array{Int64,2}")...
    done (took 0.058349142 seconds)
    (341/608) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.042578376 seconds)
    (342/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float32,Array{Float32,2}}")...
    done (took 0.079351125 seconds)
    (343/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Int32,3,Float64,Array{Float64,3}}")...
    done (took 0.100528732 seconds)
    (344/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.051171477 seconds)
    (345/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float64,Array{Float64,2}}")...
    done (took 0.075973261 seconds)
    (346/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.060450533 seconds)
    (347/608) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.072333497 seconds)
    (348/608) benchmarking ("sumcolon", "Base.ReinterpretArray{Float32,2,Int32,Array{Int32,2}}")...
    done (took 0.072829802 seconds)
    (349/608) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.05978703 seconds)
    (350/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int64,Array{Int64,2}}")...
    done (took 0.108839427 seconds)
    (351/608) benchmarking ("sumcolon", "1:100000")...
    done (took 0.072154031 seconds)
    (352/608) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.052276601 seconds)
    (353/608) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087653307 seconds)
    (354/608) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.058895014 seconds)
    (355/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.067967986 seconds)
    (356/608) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.075917029 seconds)
    (357/608) benchmarking "3d"...
    done (took 0.057588896 seconds)
    (358/608) benchmarking ("sum", "3darray")...
    done (took 0.052375597 seconds)
    (359/608) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.054010876 seconds)
    (360/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Int32,3,Float64,Array{Float64,3}}")...
    done (took 0.067429787 seconds)
    (361/608) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134707873 seconds)
    (362/608) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077273029 seconds)
    (363/608) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.12701965 seconds)
    (364/608) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.057875149 seconds)
    (365/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float64,Array{Float64,2}}")...
    done (took 0.079481706 seconds)
    (366/608) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.102844755 seconds)
    (367/608) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.299534134 seconds)
    (368/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.028641805 seconds)
    (369/608) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.034713789 seconds)
    (370/608) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.036296735 seconds)
    (371/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Int32,3,Float64,Array{Float64,3}}")...
    done (took 0.043491134 seconds)
    (372/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.092287069 seconds)
    (373/608) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.038840111 seconds)
    (374/608) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.082622643 seconds)
    (375/608) benchmarking ("sumlogical", "Array{Int64,2}")...
    done (took 0.086576411 seconds)
    (376/608) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.071482986 seconds)
    (377/608) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.076494767 seconds)
    (378/608) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090132149 seconds)
    (379/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Float32,2,Int32,Array{Int32,2}}")...
    done (took 0.04904055 seconds)
    (380/608) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.068776994 seconds)
    (381/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.051036313 seconds)
    (382/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.064820968 seconds)
    (383/608) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.024240681 seconds)
    (384/608) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.085526157 seconds)
    (385/608) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.080612545 seconds)
    (386/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Float32,2,Int32,Array{Int32,2}}")...
    done (took 0.037101817 seconds)
    (387/608) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.050972484 seconds)
    (388/608) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.058229075 seconds)
    (389/608) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114984859 seconds)
    (390/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float64,Array{Float64,2}}")...
    done (took 0.08083693 seconds)
    (391/608) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.072478988 seconds)
    (392/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.033240482 seconds)
    (393/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.069249921 seconds)
    (394/608) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.073288366 seconds)
    (395/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.060484787 seconds)
    (396/608) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131468657 seconds)
    (397/608) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.042363177 seconds)
    (398/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.067202621 seconds)
    (399/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.031513473 seconds)
    (400/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.036026958 seconds)
    (401/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084575544 seconds)
    (402/608) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.106252809 seconds)
    (403/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float32,Array{Float32,2}}")...
    done (took 0.089325014 seconds)
    (404/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{Float32,2,Int32,Array{Int32,2}}")...
    done (took 0.082704671 seconds)
    (405/608) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.037212424 seconds)
    (406/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Float32,2,Int32,Array{Int32,2}}")...
    done (took 0.053074862 seconds)
    (407/608) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.064811856 seconds)
    (408/608) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076499657 seconds)
    (409/608) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.066826858 seconds)
    (410/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084391852 seconds)
    (411/608) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.053713365 seconds)
    (412/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.068238961 seconds)
    (413/608) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.08910591 seconds)
    (414/608) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.104423949 seconds)
    (415/608) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086058065 seconds)
    (416/608) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.05000927 seconds)
    (417/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074268888 seconds)
    (418/608) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086109403 seconds)
    (419/608) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110613496 seconds)
    (420/608) benchmarking ("sumelt", "Array{Int64,2}")...
    done (took 0.029682098 seconds)
    (421/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.060564104 seconds)
    (422/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float64,Array{Float64,2}}")...
    done (took 0.089314787 seconds)
    (423/608) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.057609104 seconds)
    (424/608) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168107875 seconds)
    (425/608) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114394236 seconds)
    (426/608) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.12172026 seconds)
    (427/608) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.044241263 seconds)
    (428/608) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.072565489 seconds)
    (429/608) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.072369286 seconds)
    (430/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.068349049 seconds)
    (431/608) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098242029 seconds)
    (432/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.038834158 seconds)
    (433/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int64,Array{Int64,2}}")...
    done (took 0.099746255 seconds)
    (434/608) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120737552 seconds)
    (435/608) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.036116859 seconds)
    (436/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int64,Array{Int64,2}}")...
    done (took 0.081264674 seconds)
    (437/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.092944961 seconds)
    (438/608) benchmarking ("sumlogical", "Array{Float64,2}")...
    done (took 0.093147616 seconds)
    (439/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int64,Array{Int64,2}}")...
    done (took 0.118474865 seconds)
    (440/608) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.060121214 seconds)
    (441/608) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.045400813 seconds)
    (442/608) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.252962058 seconds)
    (443/608) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.069294018 seconds)
    (444/608) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.041576481 seconds)
    (445/608) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.097140707 seconds)
    (446/608) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.070928309 seconds)
    (447/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int64,Array{Int64,2}}")...
    done (took 0.085088201 seconds)
    (448/608) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.036808686 seconds)
    (449/608) benchmarking ("sumeach_view", "Array{Float64,2}")...
    done (took 0.04739465 seconds)
    (450/608) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.033859134 seconds)
    (451/608) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.067846811 seconds)
    (452/608) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.072449903 seconds)
    (453/608) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.055135404 seconds)
    (454/608) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.028464298 seconds)
    (455/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float32,Array{Float32,2}}")...
    done (took 0.051373395 seconds)
    (456/608) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.097332086 seconds)
    (457/608) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.02734495 seconds)
    (458/608) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09270642 seconds)
    (459/608) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.121513829 seconds)
    (460/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.033104644 seconds)
    (461/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int64,Array{Int64,2}}")...
    done (took 0.062408626 seconds)
    (462/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.060088632 seconds)
    (463/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.050980767 seconds)
    (464/608) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.035583757 seconds)
    (465/608) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.058454245 seconds)
    (466/608) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.056241805 seconds)
    (467/608) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.040842696 seconds)
    (468/608) benchmarking ("sumcolon_view", "Array{Int64,2}")...
    done (took 0.054939225 seconds)
    (469/608) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.063371766 seconds)
    (470/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float32,Array{Float32,2}}")...
    done (took 0.090311415 seconds)
    (471/608) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125659637 seconds)
    (472/608) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.042477148 seconds)
    (473/608) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104534754 seconds)
    (474/608) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.101093824 seconds)
    (475/608) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.071068637 seconds)
    (476/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int32,Array{Int32,2}}")...
    done (took 0.084256168 seconds)
    (477/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.059946116 seconds)
    (478/608) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.090991799 seconds)
    (479/608) benchmarking "sub2ind"...
    done (took 0.761001975 seconds)
    (480/608) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.034573619 seconds)
    (481/608) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10798438 seconds)
    (482/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07359654 seconds)
    (483/608) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133893667 seconds)
    (484/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.05672008 seconds)
    (485/608) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.074410519 seconds)
    (486/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.066590621 seconds)
    (487/608) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.07567672 seconds)
    (488/608) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.097944822 seconds)
    (489/608) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.055779071 seconds)
    (490/608) benchmarking ("mapr_access", "Array{Float64,2}")...
    done (took 0.099765996 seconds)
    (491/608) benchmarking "6d"...
    done (took 0.152616125 seconds)
    (492/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int64,Array{Int64,2}}")...
    done (took 0.081123979 seconds)
    (493/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.087567406 seconds)
    (494/608) benchmarking ("sumrange", "1:100000")...
    done (took 0.074938886 seconds)
    (495/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int64,Array{Int64,2}}")...
    done (took 0.083639416 seconds)
    (496/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.036849752 seconds)
    (497/608) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.059280413 seconds)
    (498/608) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.06057169 seconds)
    (499/608) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.045080997 seconds)
    (500/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.06378395 seconds)
    (501/608) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.072209731 seconds)
    (502/608) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.070448912 seconds)
    (503/608) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.05160514 seconds)
    (504/608) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.075642875 seconds)
    (505/608) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.080534171 seconds)
    (506/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float64,Array{Float64,2}}")...
    done (took 0.101405241 seconds)
    (507/608) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.044271445 seconds)
    (508/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.054992029 seconds)
    (509/608) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119826052 seconds)
    (510/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float64,Array{Float64,2}}")...
    done (took 0.064276822 seconds)
    (511/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079031483 seconds)
    (512/608) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117718402 seconds)
    (513/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.101730011 seconds)
    (514/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.040878066 seconds)
    (515/608) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.077864738 seconds)
    (516/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{Float32,2,Int32,Array{Int32,2}}")...
    done (took 0.252881906 seconds)
    (517/608) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095360327 seconds)
    (518/608) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.033384208 seconds)
    (519/608) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.071536245 seconds)
    (520/608) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.100063259 seconds)
    (521/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.062009425 seconds)
    (522/608) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.058035337 seconds)
    (523/608) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.036045632 seconds)
    (524/608) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.05525802 seconds)
    (525/608) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.124413665 seconds)
    (526/608) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.026268316 seconds)
    (527/608) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.108741097 seconds)
    (528/608) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.073692289 seconds)
    (529/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.06533408 seconds)
    (530/608) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.067343888 seconds)
    (531/608) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.062661902 seconds)
    (532/608) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.083005913 seconds)
    (533/608) benchmarking ("sumelt", "Base.ReinterpretArray{Int32,3,Float64,Array{Float64,3}}")...
    done (took 0.052508637 seconds)
    (534/608) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.059471397 seconds)
    (535/608) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076744326 seconds)
    (536/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int32,Array{Int32,2}}")...
    done (took 0.047372371 seconds)
    (537/608) benchmarking ("sumrange_view", "Array{Int64,2}")...
    done (took 0.066557328 seconds)
    (538/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.071562723 seconds)
    (539/608) benchmarking ("sumcolon", "Array{Int64,2}")...
    done (took 0.036011793 seconds)
    (540/608) benchmarking ("sumcartesian", "Array{Int64,2}")...
    done (took 0.028340015 seconds)
    (541/608) benchmarking ("mapr_access", "Base.ReinterpretArray{Float32,2,Int32,Array{Int32,2}}")...
    done (took 0.077689036 seconds)
    (542/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float32,Array{Float32,2}}")...
    done (took 0.040554823 seconds)
    (543/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.063847745 seconds)
    (544/608) benchmarking ("sumlinear", "1:100000")...
    done (took 0.032905959 seconds)
    (545/608) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.065127832 seconds)
    (546/608) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.066196936 seconds)
    (547/608) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.054077068 seconds)
    (548/608) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.037334318 seconds)
    (549/608) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.047550849 seconds)
    (550/608) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.058691166 seconds)
    (551/608) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.052559945 seconds)
    (552/608) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109631413 seconds)
    (553/608) benchmarking ("sumeach_view", "Array{Int64,2}")...
    done (took 0.053036927 seconds)
    (554/608) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.055483563 seconds)
    (555/608) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.026649161 seconds)
    (556/608) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.072172185 seconds)
    (557/608) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125863836 seconds)
    (558/608) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099595604 seconds)
    (559/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.038592903 seconds)
    (560/608) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.075202356 seconds)
    (561/608) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.058459936 seconds)
    (562/608) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.075561612 seconds)
    (563/608) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.077587955 seconds)
    (564/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int64,Array{Int64,2}}")...
    done (took 0.09007836 seconds)
    (565/608) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.069790766 seconds)
    (566/608) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.03577318 seconds)
    (567/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.034534112 seconds)
    (568/608) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.035329455 seconds)
    (569/608) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.05460526 seconds)
    (570/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float64,Array{Float64,2}}")...
    done (took 0.091609401 seconds)
    (571/608) benchmarking ("sumlinear", "Array{Float64,2}")...
    done (took 0.0271448 seconds)
    (572/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float32,Array{Float32,2}}")...
    done (took 0.090541234 seconds)
    (573/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int32,Array{Int32,2}}")...
    done (took 0.078825306 seconds)
    (574/608) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.080073573 seconds)
    (575/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.071502249 seconds)
    (576/608) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.076207051 seconds)
    (577/608) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.065789752 seconds)
    (578/608) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114929147 seconds)
    (579/608) benchmarking "2d"...
    done (took 0.039499589 seconds)
    (580/608) benchmarking ("sumeach", "Base.ReinterpretArray{Float32,2,Int32,Array{Int32,2}}")...
    done (took 0.035460268 seconds)
    (581/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float32,Array{Float32,2}}")...
    done (took 0.074592303 seconds)
    (582/608) benchmarking "7d"...
    done (took 0.208859314 seconds)
    (583/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.054155002 seconds)
    (584/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.064277178 seconds)
    (585/608) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.041452487 seconds)
    (586/608) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.034774404 seconds)
    (587/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int32,Array{Int32,2}}")...
    done (took 0.083729936 seconds)
    (588/608) benchmarking ("sumlinear", "Array{Int64,2}")...
    done (took 0.02949067 seconds)
    (589/608) benchmarking ("sumcartesian", "Array{Float64,2}")...
    done (took 0.029386981 seconds)
    (590/608) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.058114674 seconds)
    (591/608) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.05291089 seconds)
    (592/608) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.060926763 seconds)
    (593/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.06988574 seconds)
    (594/608) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133402639 seconds)
    (595/608) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.052683361 seconds)
    (596/608) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.05545092 seconds)
    (597/608) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.048964669 seconds)
    (598/608) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.028971604 seconds)
    (599/608) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.039029915 seconds)
    (600/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.253344737 seconds)
    (601/608) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.064172873 seconds)
    (602/608) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.072070745 seconds)
    (603/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int32,Array{Int32,2}}")...
    done (took 0.080054053 seconds)
    (604/608) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.059038499 seconds)
    (605/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int32,Array{Int32,2}}")...
    done (took 0.056586161 seconds)
    (606/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{Float32,2,Int32,Array{Int32,2}}")...
    done (took 0.05667289 seconds)
    (607/608) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.031995051 seconds)
    (608/608) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.057486609 seconds)
  done (took 48.311023914 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.101797835 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.111568448 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.088820238 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.149718648 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.116532644 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.278481196 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.159545576 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.268901441 seconds)
  done (took 2.289984474 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.026690069 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.053987918 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.064132892 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.039941903 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.022047819 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.026080404 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.1894541 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.040123097 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.021931945 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.04941455 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.035471525 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.026206944 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.412493592 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.023109191 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.026975599 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.037197884 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.023381743 seconds)
  done (took 2.113479886 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.377377295 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.908194025 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.401023263 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.032690269 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 6.721043607 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.246060777 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.901126682 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.137528427 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.040144606 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.638886689 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.503173258 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.112191698 seconds)
  done (took 22.010807179 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.040983393 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.031663744 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.037760475 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.039224982 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.034856819 seconds)
  done (took 1.201272463 seconds)
done (took 87.216551065 seconds)
(18/20) benchmarking "misc"...
  (1/15) benchmarking "fastmath many args"...
  done (took 0.043965339 seconds)
  (2/15) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.453252361 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.024267893 seconds)
  done (took 1.513320096 seconds)
  (3/15) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.040726539 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.036646953 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.035978541 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.038382533 seconds)
  done (took 1.163865848 seconds)
  (4/15) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.031774261 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.032905327 seconds)
  done (took 1.041450451 seconds)
  (5/15) benchmarking "perf highdim generator"...
  done (took 0.206328715 seconds)
  (6/15) benchmarking "18129"...
  done (took 0.132210833 seconds)
  (7/15) benchmarking "20517"...
  done (took 0.056647989 seconds)
  (8/15) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.047257414 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.042883193 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.042529775 seconds)
  done (took 1.116611107 seconds)
  (9/15) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.028744552 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.026918235 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.027661373 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.027624258 seconds)
  done (took 1.107448448 seconds)
  (10/15) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.027326298 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.020583146 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.023440832 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.025341828 seconds)
  done (took 1.076723922 seconds)
  (11/15) benchmarking "foldl"...
    (1/3) benchmarking "foldl(+, filter(...))"...
    done (took 0.046185505 seconds)
    (2/3) benchmarking "foldl(+, filter(...); init = 0.0)"...
    done (took 0.046094782 seconds)
    (3/3) benchmarking "foldl(+, flatten(filter(...)))"...
    done (took 0.079308418 seconds)
  done (took 1.151997423 seconds)
  (12/15) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.041963521 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.04227979 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.034931954 seconds)
  done (took 1.110397646 seconds)
  (13/15) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.061259413 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.053020464 seconds)
  done (took 1.098276842 seconds)
  (14/15) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.03946176 seconds)
  done (took 1.020511239 seconds)
  (15/15) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.050097152 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.059399649 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.083905361 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.064107743 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.090875061 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.063761447 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.040185751 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.043057929 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.034382392 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.042969709 seconds)
  done (took 1.551406798 seconds)
done (took 14.390820788 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.03699051 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.297294936 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.449940274 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.051643881 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.687011101 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.444328955 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.769747422 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.053176871 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.106016402 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.025545614 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.045709625 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.666898867 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.77541191 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.251531307 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.763853698 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.240399363 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.878773797 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.027442434 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.02376306 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.024289124 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.75205683 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.023171178 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.024285634 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.024082325 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.861077359 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.465528596 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.027842315 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.247410955 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.023619073 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.028593753 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.45069584 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.031947933 seconds)
  done (took 14.553476891 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.027889611 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.083473047 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.029684539 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.042529559 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.026250057 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.026136676 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.028093065 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.02425306 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.081966073 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.024716901 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.044683099 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.023346847 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.029474296 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.025272408 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.048019787 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.023591643 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.026451728 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.024513948 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.023758401 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.024591062 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.046243161 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.02331906 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.024647177 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.023946837 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.026480581 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.043068479 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.027343989 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.023811981 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.024202128 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.028763821 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.030758047 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.02598168 seconds)
  done (took 2.156002323 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.080036184 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.087511562 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.030270633 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.067889862 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.071780085 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.027303086 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.111324689 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.051531495 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.090339623 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.025440689 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.044405135 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.023595088 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.063422402 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.026324568 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.052173486 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.026149331 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.028213224 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.024775301 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.023938101 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.024619088 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.046894677 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.023357459 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.024730799 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.024367049 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.025319073 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.041865583 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.025863604 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.024085914 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.024309922 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.028743234 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.031465532 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.025887969 seconds)
  done (took 2.313640448 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.027236355 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.028366469 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.036523952 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.037267507 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.022154982 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.024686472 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.026180984 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.022288807 seconds)
  done (took 1.211296393 seconds)
done (took 21.261891653 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.037243022 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.023134084 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.026690207 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.045099941 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.03003588 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.024427505 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.019974886 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.030845007 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.027952071 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.029447205 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.033476973 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.023751635 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.02860813 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.02106607 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.028650593 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.021996127 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.027882898 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.026505256 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.025922911 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.027640075 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.024564748 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.028054704 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.030158443 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.025716315 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.025808513 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.025631625 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.031743092 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.027787496 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.022215593 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.025271953 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.025709564 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.025148532 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.023804349 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.0272559 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.021529995 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.021509661 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.026603811 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.023549889 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.028104411 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.031535255 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.023552375 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.031560238 seconds)
  done (took 2.132660853 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.030625109 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.034455907 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.026025852 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.031253083 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.02930312 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.035238597 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.032811753 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.029809082 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.028890966 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.030203445 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.023972245 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.028811097 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.030954404 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.021774177 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.027534865 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.024917836 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.031189851 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.023182243 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.027340681 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.02901065 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.030871556 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.021906035 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.030372287 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.031033044 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.024474289 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.03102737 seconds)
  done (took 1.734682109 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.030704503 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.043318792 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.050859525 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.108238666 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.072110742 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.036487708 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.038064256 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.051315879 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.058592607 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.023033265 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.02763534 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.049563477 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.050695424 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.029351067 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.022276654 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.041143847 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.040383679 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.02438289 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.030046522 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.055311471 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.046751473 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.042170476 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.052755313 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.04151104 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.021691676 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.02506378 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.027624747 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.040761652 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.025614629 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.035610673 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.02601802 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.027766018 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.024350256 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.034000773 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.025492111 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.021950091 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.054403312 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.037264855 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.037905127 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.02350614 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.034522955 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.023622948 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.052004145 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.091003288 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.021912298 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.027448033 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.027290785 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.036050157 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.022056527 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.054932834 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.036510993 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.022580989 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.023261556 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.02171782 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.021925323 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.025532528 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.024454434 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.025987439 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.034041126 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.030424621 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.048570358 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.028607425 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.042002542 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.021751601 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.034339538 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.021593492 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.024495023 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.022967845 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.056966689 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.024424708 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.071819681 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.023396416 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.020867525 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.035139535 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.034232733 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.029688598 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.022116297 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.042240156 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.035378937 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.027229852 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.031897908 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.026782853 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.026608435 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.057867526 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.022947499 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.021649637 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.020972525 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.032542193 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.028135541 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.024814028 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.037798143 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.023001678 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.027873467 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.04402046 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.023334943 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.024367945 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.027567782 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.026131408 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.022856439 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.037969345 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.029907897 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.025687464 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.036346032 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.024433025 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.028017772 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.039192983 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.032487581 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.022006167 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.025933599 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.027265857 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.024764589 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.024727539 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.027303141 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.025387574 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.031234426 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.03091324 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.029674983 seconds)
  done (took 4.966461611 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.120353536 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.111814794 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.02613203 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.102978649 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.033012424 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.026900274 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.109725673 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.043259458 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.023512908 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.024509029 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.023159108 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.058093397 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.052580313 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.064648631 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.027426698 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.023842517 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.049332154 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.063405851 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.110912639 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.103664273 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.049384954 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.033102016 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.026849547 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.025521967 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.025278922 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.034757434 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.043156796 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.034574966 seconds)
  done (took 2.49096231 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.034849364 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.065287574 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.027951205 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.050261928 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.044716091 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.023818248 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.025587419 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.02591204 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.042538351 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.031784576 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.023714102 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.029442449 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.027438914 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.026721913 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.024040196 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.031090326 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.031528253 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.022727013 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.028132078 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.030275988 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.035422246 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.050177662 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.027964633 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.022906124 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.025902538 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.023116077 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.030783141 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.035799122 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.023459296 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.023122105 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.020731328 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.03017368 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.043300896 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.024850802 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.02330828 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.023951077 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.023795452 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.023745356 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.025075712 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.021662805 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.021648423 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.027730518 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.022229881 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.030951748 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.038624405 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.025405516 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.025354409 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.026427527 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.026582014 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.020402709 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.02614277 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.026416637 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.026673565 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.032518149 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.028240889 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.026504683 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.024455835 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.038784092 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.029661041 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.022939849 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.024205404 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.026205936 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.029226505 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.0380125 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.045242723 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.028011087 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.023813781 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.025371682 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.02653386 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.039839597 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.022789301 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.028896343 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.02028833 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.028289962 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.026212667 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.026432148 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.024262194 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.021702983 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.022721789 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.023330451 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.02371532 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.022868594 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.022318495 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.027148529 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.021090478 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.02161917 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.023518618 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.024976799 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.031081107 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.02206207 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.027143544 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.024455686 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.021790973 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.027015057 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.029275156 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.027040647 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.041051855 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.0341244 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.023614112 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.021476975 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.039334082 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.026138864 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.022616152 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.02469207 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.029711713 seconds)
  done (took 3.986683703 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.051869963 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.02493165 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.042893499 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.050115363 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.033984714 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.030454097 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.03479125 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.023262246 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.041285451 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.029342016 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.032216882 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.021626231 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.034710278 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.033558159 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.024122319 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.034105032 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.027291375 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.043174235 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.039263298 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.022222137 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.032698749 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.037385965 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.036382579 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.039622936 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.038629478 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.040149395 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.035935198 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.034843072 seconds)
  done (took 1.985931145 seconds)
done (took 18.287990183 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.06793928 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.289781792 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.026389397 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.775996089 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.116357686 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.154933125 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.222259142 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.025347787 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.785249446 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.010837795 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.030314255 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.858707837 seconds)
done (took 59.52097931 seconds)
(2/20) benchmarking "string"...
  (1/7) benchmarking "join"...
  done (took 6.049817509 seconds)
  (2/7) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.216365009 seconds)
    (2/2) benchmarking "String"...
    done (took 1.342384175 seconds)
  done (took 3.554073045 seconds)
  (3/7) benchmarking "==(::SubString, ::String)"...
    (1/3) benchmarking "equal"...
    done (took 5.999825786 seconds)
    (2/3) benchmarking "different length"...
    done (took 6.039811446 seconds)
    (3/3) benchmarking "different"...
    done (took 2.041020771 seconds)
  done (took 15.065970946 seconds)
  (4/7) benchmarking "replace"...
  done (took 2.73797107 seconds)
  (5/7) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 6.052735726 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.451453741 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 5.988290846 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.062349557 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.056526462 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.370113683 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 1.816282957 seconds)
  done (took 27.837742339 seconds)
  (6/7) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.137609931 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.501095299 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.822997747 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.922799589 seconds)
  done (took 18.492558866 seconds)
  (7/7) benchmarking "==(::AbstractString, ::AbstractString)"...
    (1/4) benchmarking "identical"...
    done (took 1.361199127 seconds)
    (2/4) benchmarking "equal"...
    done (took 1.429854938 seconds)
    (3/4) benchmarking "different length"...
    done (took 1.442792067 seconds)
    (4/4) benchmarking "different"...
    done (took 1.963721082 seconds)
  done (took 7.406717871 seconds)
done (took 82.271325981 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.143496072 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.144400498 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.084975801 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.017103193 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.188682771 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.024942828 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.198536018 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 8.006613454 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.000136483 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.034922572 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.033729312 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 3.725296708 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.051890984 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.170429517 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.014317156 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.005393121 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.119678877 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 8.453556704 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.310612668 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.010577688 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.072094777 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.03844203 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.055081114 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.034913124 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.101934922 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.003207795 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 5.996335674 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.012732464 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 1.853954722 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 5.995962807 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.044158808 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.391116562 seconds)
  done (took 183.32739933 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 5.985291372 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 4.951567864 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 5.078906492 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.042523255 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 5.779581491 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.545318156 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.275238163 seconds)
    (8/36) benchmarking "gemv"...
    done (took 5.829545257 seconds)
    (9/36) benchmarking "syr!"...
    done (took 5.9971076 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.04697677 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.791112069 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.015822574 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.858665543 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.026419619 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.956714111 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.064280239 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.716446286 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.743552874 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.939045797 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.121185366 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.007642024 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 4.798452242 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 4.801360474 seconds)
    (24/36) benchmarking "symv!"...
    done (took 3.629108207 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.017216324 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.114453158 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.071837056 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.079550301 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.618576756 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 3.642380041 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.04838442 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.045617107 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.554638991 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.13649145 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.019359447 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.035067693 seconds)
  done (took 166.447147627 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.315127821 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/118) benchmarking ("cumsum!", "Int32", 1024)...
    done (took 0.984631754 seconds)
    (2/118) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.031220293 seconds)
    (3/118) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.993300708 seconds)
    (4/118) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.985800266 seconds)
    (5/118) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.020997003 seconds)
    (6/118) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.98650163 seconds)
    (7/118) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.142085448 seconds)
    (8/118) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.18853898 seconds)
    (9/118) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.033759109 seconds)
    (10/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.104316576 seconds)
    (11/118) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.152766997 seconds)
    (12/118) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 6.117249389 seconds)
    (13/118) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.991867543 seconds)
    (14/118) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.143360749 seconds)
    (15/118) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.020486241 seconds)
    (16/118) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.991777485 seconds)
    (17/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.011472877 seconds)
    (18/118) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.038245144 seconds)
    (19/118) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.991487684 seconds)
    (20/118) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.985480026 seconds)
    (21/118) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.470813683 seconds)
    (22/118) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.02894795 seconds)
    (23/118) benchmarking ("cumsum!", "Float64", 1024)...
    done (took 0.988396618 seconds)
    (24/118) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.996921894 seconds)
    (25/118) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.039752208 seconds)
    (26/118) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.99871253 seconds)
    (27/118) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.391412825 seconds)
    (28/118) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.036970182 seconds)
    (29/118) benchmarking ("3-arg mul!", 3)...
    done (took 1.196580622 seconds)
    (30/118) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.984898194 seconds)
    (31/118) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.994339762 seconds)
    (32/118) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.523086382 seconds)
    (33/118) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.993219805 seconds)
    (34/118) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.99651755 seconds)
    (35/118) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.435960011 seconds)
    (36/118) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 18.382675518 seconds)
    (37/118) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.196458323 seconds)
    (38/118) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.994759911 seconds)
    (39/118) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.994621696 seconds)
    (40/118) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.99501306 seconds)
    (41/118) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.450309905 seconds)
    (42/118) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.999329023 seconds)
    (43/118) benchmarking ("5-arg mul!", 2)...
    done (took 0.989728819 seconds)
    (44/118) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.986018231 seconds)
    (45/118) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.008328066 seconds)
    (46/118) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 6.866997445 seconds)
    (47/118) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.02527239 seconds)
    (48/118) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.172072809 seconds)
    (49/118) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.993063531 seconds)
    (50/118) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 5.109405698 seconds)
    (51/118) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.091453297 seconds)
    (52/118) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.989068004 seconds)
    (53/118) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.394356686 seconds)
    (54/118) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 16.632818925 seconds)
    (55/118) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.012827324 seconds)
    (56/118) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.025860613 seconds)
    (57/118) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.040786534 seconds)
    (58/118) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.044706146 seconds)
    (59/118) benchmarking ("cumsum!", "Int32", 256)...
    done (took 1.009069841 seconds)
    (60/118) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.010036172 seconds)
    (61/118) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.447195934 seconds)
    (62/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.264893347 seconds)
    (63/118) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.015218851 seconds)
    (64/118) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.987070333 seconds)
    (65/118) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.994434683 seconds)
    (66/118) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.036588166 seconds)
    (67/118) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.003078319 seconds)
    (68/118) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.112828619 seconds)
    (69/118) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.641519468 seconds)
    (70/118) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.078834689 seconds)
    (71/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.911868582 seconds)
    (72/118) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.355371492 seconds)
    (73/118) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.013049636 seconds)
    (74/118) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.147158983 seconds)
    (75/118) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.135431172 seconds)
    (76/118) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.992021028 seconds)
    (77/118) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.01064117 seconds)
    (78/118) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.989281311 seconds)
    (79/118) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.986344691 seconds)
    (80/118) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.168433428 seconds)
    (81/118) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.992103303 seconds)
    (82/118) benchmarking ("3-arg mul!", 2)...
    done (took 0.987050962 seconds)
    (83/118) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 4.568285061 seconds)
    (84/118) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.050372827 seconds)
    (85/118) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.987096315 seconds)
    (86/118) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.039750761 seconds)
    (87/118) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.105533969 seconds)
    (88/118) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.000956076 seconds)
    (89/118) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.346702888 seconds)
    (90/118) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.025424299 seconds)
    (91/118) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.986638398 seconds)
    (92/118) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 6.122053542 seconds)
    (93/118) benchmarking ("cumsum!", "Int64", 1024)...
    done (took 1.00169325 seconds)
    (94/118) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.10942704 seconds)
    (95/118) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.991567079 seconds)
    (96/118) benchmarking ("cumsum!", "Float64", 256)...
    done (took 0.985886928 seconds)
    (97/118) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.99178049 seconds)
    (98/118) benchmarking ("log", "Hermitian", 256)...
    done (took 4.630928644 seconds)
    (99/118) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.350545542 seconds)
    (100/118) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 9.139420451 seconds)
    (101/118) benchmarking ("cumsum!", "Float32", 256)...
    done (took 1.017236663 seconds)
    (102/118) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.992603819 seconds)
    (103/118) benchmarking ("cumsum!", "Int64", 256)...
    done (took 1.006700187 seconds)
    (104/118) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.358813155 seconds)
    (105/118) benchmarking ("exp", "Hermitian", 256)...
    done (took 4.649150691 seconds)
    (106/118) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.015423977 seconds)
    (107/118) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 6.716466676 seconds)
    (108/118) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.042132177 seconds)
    (109/118) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.179824359 seconds)
    (110/118) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.004675905 seconds)
    (111/118) benchmarking ("cumsum!", "Float32", 1024)...
    done (took 0.98558438 seconds)
    (112/118) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.996760667 seconds)
    (113/118) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.023302653 seconds)
    (114/118) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.985501201 seconds)
    (115/118) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.015862334 seconds)
    (116/118) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.986391361 seconds)
    (117/118) benchmarking ("5-arg mul!", 3)...
    done (took 0.990137037 seconds)
    (118/118) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.394945445 seconds)
  done (took 357.506840268 seconds)
done (took 709.609824299 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.793648395 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.735747318 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.908581136 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.772168897 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.722870678 seconds)
  done (took 9.918350154 seconds)
done (took 10.906308509 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/41) benchmarking ("> q0.5", "Array{Int64,1}")...
    done (took 1.115792431 seconds)
    (2/41) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.133847413 seconds)
    (3/41) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.025095076 seconds)
    (4/41) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.149865831 seconds)
    (5/41) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.031491515 seconds)
    (6/41) benchmarking ("> q0.95", "Array{Float32,1}")...
    done (took 1.02887626 seconds)
    (7/41) benchmarking ("> q0.99", "Array{Int64,1}")...
    done (took 1.065771502 seconds)
    (8/41) benchmarking ("> q0.5", "Array{Float64,1}")...
    done (took 1.081171627 seconds)
    (9/41) benchmarking ("> q0.8", "Array{Float32,1}")...
    done (took 1.057933754 seconds)
    (10/41) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.144579621 seconds)
    (11/41) benchmarking ("> q0.95", "Array{Bool,1}")...
    done (took 1.034723379 seconds)
    (12/41) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.041475862 seconds)
    (13/41) benchmarking ("> q0.8", "Array{UInt64,1}")...
    done (took 1.073489835 seconds)
    (14/41) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.125608181 seconds)
    (15/41) benchmarking ("> q0.99", "Array{Bool,1}")...
    done (took 1.077222519 seconds)
    (16/41) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.072443604 seconds)
    (17/41) benchmarking ("> q0.99", "Array{UInt8,1}")...
    done (took 1.028103418 seconds)
    (18/41) benchmarking ("> q0.99", "Array{UInt64,1}")...
    done (took 1.064532758 seconds)
    (19/41) benchmarking ("> q0.8", "Array{Int64,1}")...
    done (took 1.065313994 seconds)
    (20/41) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.035449835 seconds)
    (21/41) benchmarking ("> q0.8", "Array{UInt8,1}")...
    done (took 1.090411539 seconds)
    (22/41) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.083885865 seconds)
    (23/41) benchmarking ("> q0.8", "Array{Int8,1}")...
    done (took 1.055551903 seconds)
    (24/41) benchmarking ("> q0.5", "Array{UInt8,1}")...
    done (took 1.105720075 seconds)
    (25/41) benchmarking ("> q0.95", "Array{UInt64,1}")...
    done (took 1.053170171 seconds)
    (26/41) benchmarking ("> q0.5", "Array{Int8,1}")...
    done (took 1.079858151 seconds)
    (27/41) benchmarking ("> q0.95", "Array{Int8,1}")...
    done (took 1.070052098 seconds)
    (28/41) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.029027722 seconds)
    (29/41) benchmarking ("> q0.99", "Array{Float64,1}")...
    done (took 1.026970743 seconds)
    (30/41) benchmarking ("> q0.5", "Array{UInt64,1}")...
    done (took 1.106279964 seconds)
    (31/41) benchmarking ("> q0.95", "Array{Int64,1}")...
    done (took 1.052635114 seconds)
    (32/41) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.080638952 seconds)
    (33/41) benchmarking ("> q0.99", "Array{Int8,1}")...
    done (took 1.030904394 seconds)
    (34/41) benchmarking ("> q0.5", "Array{Float32,1}")...
    done (took 1.079903377 seconds)
    (35/41) benchmarking ("> q0.95", "Array{Float64,1}")...
    done (took 1.048538955 seconds)
    (36/41) benchmarking ("> q0.95", "Array{UInt8,1}")...
    done (took 1.028662874 seconds)
    (37/41) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.029296412 seconds)
    (38/41) benchmarking ("> q0.5", "Array{Bool,1}")...
    done (took 1.121272299 seconds)
    (39/41) benchmarking ("> q0.8", "Array{Bool,1}")...
    done (took 1.035097202 seconds)
    (40/41) benchmarking ("> q0.8", "Array{Float64,1}")...
    done (took 1.045578662 seconds)
    (41/41) benchmarking ("> q0.99", "Array{Float32,1}")...
    done (took 1.043387484 seconds)
  done (took 44.736405729 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.342159234 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.369915844 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.107939911 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.353982719 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.07872378 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.344871602 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.253057633 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.234580944 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.25013332 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.03567603 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.015769392 seconds)
  done (took 14.372953247 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.348441873 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.398547337 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.11596155 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.345714286 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.095340633 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.349659214 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.286664489 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.24904924 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.270220791 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.048212507 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.016060013 seconds)
  done (took 14.531958768 seconds)
done (took 74.630025093 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/2) benchmarking "longtuple"...
    done (took 1.626917183 seconds)
    (2/2) benchmarking "11899"...
    done (took 1.12130059 seconds)
  done (took 3.734252975 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", "(8, 8)", "(8, 8)")...
    done (took 1.027350686 seconds)
    (2/8) benchmarking ("matvec", "(2, 2)", "(2,)")...
    done (took 1.055004886 seconds)
    (3/8) benchmarking ("matvec", "(4, 4)", "(4,)")...
    done (took 1.006297103 seconds)
    (4/8) benchmarking ("matvec", "(16, 16)", "(16,)")...
    done (took 1.007611684 seconds)
    (5/8) benchmarking ("matmat", "(2, 2)", "(2, 2)")...
    done (took 1.035071801 seconds)
    (6/8) benchmarking ("matvec", "(8, 8)", "(8,)")...
    done (took 1.007856197 seconds)
    (7/8) benchmarking ("matmat", "(16, 16)", "(16, 16)")...
    done (took 1.087997206 seconds)
    (8/8) benchmarking ("matmat", "(4, 4)", "(4, 4)")...
    done (took 1.021733909 seconds)
  done (took 9.234657261 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, "Float32")...
    done (took 1.019415137 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, "Float64")...
    done (took 1.010587 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, "Float64")...
    done (took 1.006910012 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, "Float32")...
    done (took 1.018794178 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, "Float64")...
    done (took 1.012549985 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, "Float32")...
    done (took 1.006844761 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, "Float32")...
    done (took 1.013727991 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, "Float64")...
    done (took 1.012040615 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, "Float64")...
    done (took 1.006376742 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, "Float32")...
    done (took 1.009239061 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, "Float64")...
    done (took 1.006695102 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, "Float64")...
    done (took 1.006468131 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, "Float64")...
    done (took 1.007885987 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, "Float32")...
    done (took 1.007486494 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, "Float32")...
    done (took 1.006610194 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, "Float32")...
    done (took 1.009419325 seconds)
  done (took 17.147831831 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sum", "(2, 2)")...
    done (took 1.008095273 seconds)
    (2/24) benchmarking ("sumabs", "(8, 8)")...
    done (took 1.020059249 seconds)
    (3/24) benchmarking ("minimum", "(2, 2)")...
    done (took 1.006820802 seconds)
    (4/24) benchmarking ("sumabs", "(2,)")...
    done (took 1.006939993 seconds)
    (5/24) benchmarking ("sum", "(4, 4)")...
    done (took 1.022471626 seconds)
    (6/24) benchmarking ("sum", "(2,)")...
    done (took 1.012212491 seconds)
    (7/24) benchmarking ("sum", "(8, 8)")...
    done (took 1.006951187 seconds)
    (8/24) benchmarking ("minimum", "(16, 16)")...
    done (took 1.031791706 seconds)
    (9/24) benchmarking ("sum", "(8,)")...
    done (took 1.014301304 seconds)
    (10/24) benchmarking ("sumabs", "(4, 4)")...
    done (took 1.008291551 seconds)
    (11/24) benchmarking ("sumabs", "(2, 2)")...
    done (took 1.019000839 seconds)
    (12/24) benchmarking ("minimum", "(4, 4)")...
    done (took 1.011124818 seconds)
    (13/24) benchmarking ("sumabs", "(16,)")...
    done (took 1.006609735 seconds)
    (14/24) benchmarking ("sumabs", "(8,)")...
    done (took 1.031500577 seconds)
    (15/24) benchmarking ("minimum", "(16,)")...
    done (took 1.012354167 seconds)
    (16/24) benchmarking ("minimum", "(2,)")...
    done (took 1.006609191 seconds)
    (17/24) benchmarking ("minimum", "(8, 8)")...
    done (took 1.05104639 seconds)
    (18/24) benchmarking ("minimum", "(4,)")...
    done (took 1.153118875 seconds)
    (19/24) benchmarking ("minimum", "(8,)")...
    done (took 1.043685533 seconds)
    (20/24) benchmarking ("sum", "(16,)")...
    done (took 1.031367943 seconds)
    (21/24) benchmarking ("sum", "(4,)")...
    done (took 1.006475208 seconds)
    (22/24) benchmarking ("sumabs", "(4,)")...
    done (took 1.007789606 seconds)
    (23/24) benchmarking ("sum", "(16, 16)")...
    done (took 1.070108723 seconds)
    (24/24) benchmarking ("sumabs", "(16, 16)")...
    done (took 1.010702307 seconds)
  done (took 25.592876152 seconds)
done (took 56.720398545 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.779191499 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.295057906 seconds)
  done (took 7.106759193 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.011038048 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.058864696 seconds)
  done (took 3.21144315 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.0310309 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.010560521 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.009592527 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.025335489 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.008753485 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.006481744 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.019034286 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.007560486 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.00595751 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.009733675 seconds)
  done (took 11.177099546 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.023522355 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.008488923 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.009266724 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.007400754 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.010820114 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.008819625 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.018640452 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.008724777 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.006234877 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.027421949 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.014018979 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.22948097 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.027758281 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.277217926 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.007361561 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.026305377 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.008310332 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.034694537 seconds)
  done (took 19.757126055 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.006027155 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.048492982 seconds)
  done (took 3.045054706 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.00823101 seconds)
    (2/7) benchmarking "second"...
    done (took 1.031994344 seconds)
    (3/7) benchmarking "month"...
    done (took 1.009354603 seconds)
    (4/7) benchmarking "year"...
    done (took 1.011661916 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.049957613 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.008750882 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.008442934 seconds)
  done (took 8.114568711 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.73447643 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.208348158 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.248981539 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.76536127 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 2.200636887 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 3.178412329 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.370891681 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 2.955185159 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 2.464618138 seconds)
  done (took 20.159285728 seconds)
done (took 73.559091359 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 5.098478462 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.006788169 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.825096349 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.169096675 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.150480953 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.487825184 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.053533222 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.524967418 seconds)
done (took 38.399142451 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 5.996228814 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.760961225 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.87215328 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.070572625 seconds)
  done (took 12.731289202 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 5.986351531 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.413762908 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.059057755 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.36146525 seconds)
  done (took 19.947312503 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.639523448 seconds)
    (2/2) benchmarking "read"...
    done (took 1.661856036 seconds)
  done (took 4.320252149 seconds)
done (took 43.983789458 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.080961507 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.074009478 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.078183741 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.081072056 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.085662861 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.048086928 seconds)
    (7/24) benchmarking ("2pow1023", "positive argument", "Float64")...
    done (took 1.108097575 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.16247487 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.054637337 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.077076181 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.094573758 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.055506986 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.111135238 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.04402336 seconds)
    (15/24) benchmarking ("2pow1023", "negative argument", "Float64")...
    done (took 1.006471813 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.061273888 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", "Float32")...
    done (took 1.007166673 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.077825495 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.061645064 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.078492701 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", "Float32")...
    done (took 1.007085037 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.098493876 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.053423387 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.080560189 seconds)
  done (took 26.715775003 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.102045851 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.078153624 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.10196878 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.095175295 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.22411427 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.101339387 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.100342529 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.058102535 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.107486711 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.066364778 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.054189791 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.117830407 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.055608659 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.117529744 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.057955894 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.122945962 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.10065569 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.057569371 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.065690992 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.122807157 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.095818736 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.079676647 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.118639233 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.051518187 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.127233587 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.048198754 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.07736624 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.079019746 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.042235477 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.144016461 seconds)
  done (took 33.768083249 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 2.925426119 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 3.406313328 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.010694674 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.133479898 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.006635497 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.00644435 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.056509374 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.008192444 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.007126298 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.034761691 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.006114143 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.00864046 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.016711814 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.011099913 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.007639706 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.054898038 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.210963438 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.006598581 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.019600794 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.013124943 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.054690187 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.00761072 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.020158413 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.008911255 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.007158329 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.010891526 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.009527708 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.006709672 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.01381651 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.007011915 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.049767303 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.0560652 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.01138213 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.143170853 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.076549367 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.014045566 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 2.682732201 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 3.315454057 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.049986773 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.007354937 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.006933264 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.026492406 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.008749586 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.081534925 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.022947371 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.007902846 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.011583267 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.04216423 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.009777541 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.009185035 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.028760092 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.030914408 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.007537998 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.008506739 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.050181693 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.007491052 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.007667683 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.053317805 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.006574247 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.009598207 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.00929285 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.053721926 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.083409392 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.008537517 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.45628203 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.081758786 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.007456117 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.053184621 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.053781862 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.2599495 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.021805455 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.252584881 seconds)
  done (took 84.2735894 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.025086123 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.27288286 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.058004652 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.07094064 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.006641431 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.015455049 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.146954281 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.006998862 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.083494246 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.342567807 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.05606238 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.272294516 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.063226439 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.213673818 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.008100325 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.060528912 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.118834401 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.00749816 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.01674857 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.214542331 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.009845911 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.168403082 seconds)
  done (took 25.22667073 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.074877459 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.049207831 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.053947052 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.024206007 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.034226733 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.02969086 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.048495885 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.024871526 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.081939197 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.048141013 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.048475962 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.097189199 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.025419948 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.055622841 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.07364751 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.098884497 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.04883765 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.14188692 seconds)
  done (took 20.04781849 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.240804683 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.243920847 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.106304226 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.052542533 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.280727953 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.24610599 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.120828678 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.230438131 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.052155493 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.177386635 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.233612318 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.149650472 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.24971248 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.066196892 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.055823442 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.262230026 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.115206348 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.053445803 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.143440318 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.121635673 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.219414455 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.134414963 seconds)
  done (took 26.543623014 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.047673668 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.066878477 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.098796593 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.091519208 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.007168611 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.023031947 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.070532246 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.058405427 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.047908493 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.048916967 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.057646518 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.026498441 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.108043414 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.076037766 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.12572565 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.051971231 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.065929159 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.118124409 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.055844365 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.007166463 seconds)
  done (took 22.241460119 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.019014753 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.008483686 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.011130883 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.040387497 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.008787253 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.008646329 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.055456111 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.089437339 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.148148895 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.320933766 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.008274258 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.008144076 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.017654702 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.06320947 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.051538566 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.046501175 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.03261622 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.008530602 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.007252835 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.024649055 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.278077528 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.007753552 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.018823356 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.007561508 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.007181288 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.009951607 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.007162325 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.007338432 seconds)
  done (took 30.329551636 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.074661555 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.051785217 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.05745196 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.14697663 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.139865813 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.047896422 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.155137023 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.14082189 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.055586465 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.074877695 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.105658658 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.058142537 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.070813731 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.075052429 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.045215661 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.124281359 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.054332723 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.14023911 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.135465836 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.048743351 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.104829498 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.085976368 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.10482015 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.048303419 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.082805279 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.10506318 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.091673665 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.237407889 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.078165025 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.058452881 seconds)
  done (took 33.790007353 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.035098063 seconds)
    (2/2) benchmarking "in"...
    done (took 1.037809509 seconds)
  done (took 3.102650944 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.016692626 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.119566357 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.008026323 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.235206235 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.176812421 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.204243382 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.202045814 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.110661968 seconds)
  done (took 10.060567355 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 2.956748089 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.204846149 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.013835802 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.010354014 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.010359173 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 3.241795489 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 4.003599947 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.043474941 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.011752537 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.948955628 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 3.906506591 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 5.321657266 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 2.68139122 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 3.519100573 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 3.426545233 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 5.059773407 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.173725971 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.008221869 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.010396282 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.007778944 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.019348913 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.01463708 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 4.058466672 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.190105452 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 2.027312901 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 2.236037572 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 3.011547106 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.147252395 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 3.533471081 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.207620183 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 2.580241154 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.214602953 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.018004898 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.008481904 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.008718521 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.037914866 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.025737131 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 3.670376334 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 3.653621465 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.202484954 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.009113002 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.049685052 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 5.186165112 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 2.389665691 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 5.409079828 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.054178064 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.008203583 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.007619683 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 2.411063852 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 3.021717699 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 3.267115153 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 2.047133825 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.212276099 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.01820612 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 5.09879044 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.037913686 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.009537526 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 2.533599575 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 4.282659621 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 4.615146506 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 2.364193849 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 3.273233177 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 5.130444158 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.193374263 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 2.266691174 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 6.178589536 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 3.993431155 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.057249425 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.009652614 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.007859511 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.036317758 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 2.049757698 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.413025373 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.009881646 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.009935623 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.015620364 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 3.495520165 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.197321878 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.024244859 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.022297135 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.014833742 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.014397124 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 2.463345133 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 3.953101972 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 3.063034374 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.212185194 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.022551558 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.008346988 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.773000158 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 2.264231705 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.076403601 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.0127654 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 2.431591881 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 3.575758778 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 2.516194486 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.094909969 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.924537359 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.238754767 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.008258901 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.019622569 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.008901606 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 2.433313956 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 3.318488649 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.014675629 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.017837297 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.024485791 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.009387507 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 2.866142306 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 3.589581158 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.079760396 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.019256317 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.718201421 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 2.242050275 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.019901499 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 2.70239529 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 6.847313728 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.156700444 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.013077963 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.009188118 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.042025322 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 2.256976236 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 5.585660663 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.26569202 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.009827604 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 3.004548296 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 3.914663821 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.012600534 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 3.50319348 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.214594645 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.028732741 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.010134916 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 5.332475038 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.129869116 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.016043734 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.008210507 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.012405913 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.01175736 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.008787228 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.012243794 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.011701149 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 2.255841686 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 3.692224052 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 5.520484893 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 2.393558029 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.199096791 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 5.351611756 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 3.565255151 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 3.016105764 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 5.38388091 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 4.70726469 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.099060554 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.011943583 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.019616506 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.015417471 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 3.124445032 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.210889563 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 2.85634814 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.206042563 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.009032958 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.024004588 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.007670005 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.79100165 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 4.5836381 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.21956285 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.015715017 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 2.867278188 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.237885663 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.009206216 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.012863493 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 2.695256995 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.26037055 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.858883687 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 2.943649011 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 3.173128339 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.030319835 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.00824642 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 2.449371156 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.197501064 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.008607486 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.0219272 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 2.674503629 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 6.321957788 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.155816355 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 3.469967467 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.153486774 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.017720867 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.008710167 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 3.533481241 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 2.430761541 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.217719338 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 2.694902126 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 3.210413218 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.989261548 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.366715201 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 2.004307161 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 2.233656405 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.969891066 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 2.231316105 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 3.41449376 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.049977471 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.013602557 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.008409235 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 2.884733051 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.204613539 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 2.312075617 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.136099139 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 2.22169774 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.22817228 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.009312748 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.008993458 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.011390463 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.014102335 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.012803712 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.012463431 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.009651649 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.012326251 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 2.854008196 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.209651654 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.900111269 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 3.365046919 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.230407649 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.021044021 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 3.422946561 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.095878114 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 5.056321088 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 5.612327925 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 3.35295052 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 2.086412871 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.217787238 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.035404136 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 2.821357153 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 4.039701053 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 3.259752373 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.23099352 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.018582828 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 2.621960836 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 2.444722878 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.223039081 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.01247868 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.008194019 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 2.555851792 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 3.318729977 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.013340576 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.010849866 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.016746052 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 3.203353632 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.220693421 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 3.451242808 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.185200421 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 2.873875878 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.212848448 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 2.298832904 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.112034173 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.055243804 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.012669901 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 4.593345768 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.191049959 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.010475792 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.010054079 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.056117672 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.009511045 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.010319004 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.028902829 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 2.349437633 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 3.265600438 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 3.178973737 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 3.251820806 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 2.556476537 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 2.184237672 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 2.194487452 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 3.155002431 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.213893381 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 2.957215299 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 2.318488449 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.429676319 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 3.5863156 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 4.883289664 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.158603565 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 3.483958427 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 2.257363677 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 4.36256018 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 3.48197709 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 3.856780205 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 2.87642577 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 3.31480076 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.217868251 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.060092586 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.055662711 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 5.121621326 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.984895178 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 2.234317137 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.013963011 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 2.85514551 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.207306671 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.009834964 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.013287679 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 2.235928208 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.219580864 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.016035441 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.014517881 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 2.310956836 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 3.439005655 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 4.046945653 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 3.399124179 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.211870165 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 3.006247423 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 2.828972809 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 2.473251799 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 4.915687055 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.090808642 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 2.836229583 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 3.199329329 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 2.628368327 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 6.743658793 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.889130636 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 4.414688838 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.104604747 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 2.753912779 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 3.193456512 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.013437863 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.848476938 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 3.375414816 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.229135057 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.035205112 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.010436519 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.623424143 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 2.233950165 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.053233859 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.010611289 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.010514456 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.036234419 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.009388313 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.010038085 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.070439162 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 2.094419888 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 4.587996017 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.210182565 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.013929885 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.018408337 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.009921964 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 2.043302305 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.238270188 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.01113648 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.031315085 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 2.96074445 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 3.331243815 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.213220024 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.013159793 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.013880029 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.013063816 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.009756325 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 3.825674085 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.790115141 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 2.390708004 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.05257252 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 3.514946671 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.128937499 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.022451205 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.01000972 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 4.860552172 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.169867557 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.052198403 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 2.249910796 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 2.695527111 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.264218664 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.013853572 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 2.051044641 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 2.223310382 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.013940873 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 2.28587352 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 4.983565365 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.110599232 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 2.609599771 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 2.591135345 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 2.98019711 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.994817226 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 2.217823145 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.014017139 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.98895386 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 2.238335175 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.016997014 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.852527401 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 2.615836719 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 4.826457786 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 3.203178349 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 3.545571466 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.219624531 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 3.632438409 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.211838273 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.010791942 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.034778814 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.01128797 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.025051727 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 2.406877675 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.076135575 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.060475784 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.011331688 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 4.617200683 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 2.39122354 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 2.091970682 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 4.67239337 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.172512744 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 4.626583349 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.066122176 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.027660228 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 3.780610984 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 4.250903989 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.169895149 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.021017597 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.010302683 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 2.137454988 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 3.867432313 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 4.051199365 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.235294956 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 2.994478454 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.223514292 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 3.141468432 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 2.600486506 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.122963242 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.012645628 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.03309502 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 5.197529548 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.075858864 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 2.463507791 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 2.001940939 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.218651704 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 4.545258449 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.141733867 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 2.557202126 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 5.090055364 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 3.687828429 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.196678879 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.011645063 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.010418796 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.946401594 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 3.360986707 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 3.696379751 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 2.768518718 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 4.813331225 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 4.193736116 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 2.235339388 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 3.519113676 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 2.806170513 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 3.191578123 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.939837873 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.235453792 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.010981702 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 4.917364675 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.882273909 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 3.519763385 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.221571837 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.022601409 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 2.826296772 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 3.043552118 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.228184452 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 5.223929735 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.040364633 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 2.04854745 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 4.475240124 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 2.860075458 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.246444257 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.010909845 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 2.889956013 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.235850318 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 4.551977042 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.149274539 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.058013388 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.027487642 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.713748217 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 2.218039208 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.01398837 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.013507144 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.012744121 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 4.857323399 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.103375863 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.011753703 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.031917833 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 2.582451878 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 2.877980409 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 3.000016533 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 4.466621947 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.219768012 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.015307754 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 3.528025794 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 4.792570114 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.134337918 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.03271004 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.015599379 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.011779787 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 2.844678479 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.248285017 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 3.307388805 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.351044483 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 2.609913186 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 2.267851306 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 2.236279787 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.060224969 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 2.620311126 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 4.464732933 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 3.262492417 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.015745164 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 3.158435842 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 4.814854696 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 3.680330431 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.204183276 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.011421117 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 3.548014105 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 4.856359993 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.152937722 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.018550228 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.027274837 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 2.819891473 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 3.255835668 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.019071715 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 3.409657404 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.239857448 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.018613674 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.011055544 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.035237947 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.011072324 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 2.344597661 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 2.547796342 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 3.289769179 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.068943522 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.172374797 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 3.236990768 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 2.190610527 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 2.248074499 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 2.617010008 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 5.363749389 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 3.788604273 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.214929576 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.013776937 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 3.175252159 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 6.125192099 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.25821571 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 2.229153041 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 5.786995962 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 4.673203269 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 4.850401433 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.128892466 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 2.037683004 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.21921882 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 2.335416769 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.168527511 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.015997005 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.019550771 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.012551748 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.980303046 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 2.218200495 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.019190992 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.029853952 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.030496754 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 2.85101067 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 2.535625613 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.067921268 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.011981147 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.012144807 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.011975457 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.016193483 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.011601673 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 3.583986507 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.996137856 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 2.632923817 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.150918446 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.012560601 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.014453055 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 2.927595574 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 2.882433338 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 4.526541847 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 3.253307028 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.05596579 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.017900737 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.014337562 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.042032476 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.030365246 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 3.775208325 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 2.813984163 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 3.236689904 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.229373922 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 2.136591893 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.427524936 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 3.167107429 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 3.246210982 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.227541127 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.027189425 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.014593394 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.011995757 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.014957266 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 4.863647876 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.916815121 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 2.230160967 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.016263775 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.020827066 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 2.806678544 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 3.268267513 seconds)
  done (took 1277.949849768 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.314704706 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.02659575 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.012566116 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.042836918 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.019512787 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.011737679 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.055631222 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.012232686 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.011850756 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.042983582 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.011842774 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.012026907 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.05865573 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.325325842 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.044391328 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.026632031 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.011656046 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.032122846 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.010914998 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.014238534 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.015087294 seconds)
  done (took 23.108928425 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.012242089 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.059293791 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.165223429 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.1268195 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.059761682 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.031158842 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.145009453 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.012667114 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.13934662 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.058308886 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.119158661 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.023551508 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.055238994 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.054515656 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.061453452 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.01194113 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.120579278 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.065182962 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.013398889 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.149536772 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.028039965 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.143962164 seconds)
  done (took 24.660708497 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.017145577 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.022918977 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 2.893649521 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.221974243 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.013283885 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.033644294 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.013309348 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.014843217 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.024024684 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 2.372313179 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 2.159421959 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 2.139630936 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 3.721292379 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 3.452020772 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 2.487358433 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.199473264 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.157729064 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.018481887 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.032268414 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.013196715 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.014073472 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 3.486304323 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.238656794 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.015632655 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.903215547 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.23996277 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.013277321 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.012592777 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.025749666 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 2.13115681 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 2.20287215 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.016468559 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 3.015475026 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 4.361339375 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 2.493097694 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 2.067498097 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 2.234896133 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.017043382 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.014095647 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.026044013 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 2.343439371 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 2.959789723 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.019562182 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 3.618684451 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.22810607 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.014226199 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 2.455975388 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 3.2982036 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.015894367 seconds)
  done (took 88.484891054 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.055770932 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.159476273 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.083732458 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.042922338 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.183724512 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.013583047 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.090778158 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.012359813 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.012068251 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.029053387 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.173787197 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.196007944 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.031227889 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.013155252 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.130497618 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.035673345 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.026443656 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.013741354 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.016009729 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.012376653 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.014079962 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.073864589 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.368147966 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.332156172 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.016892133 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.012623973 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.011742712 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.013241294 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.193202733 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.011964734 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.012617781 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.021906547 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.278065154 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.355659703 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.139022407 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.012599725 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.157058632 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.031813984 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.012653612 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.012105635 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.02833633 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.012633863 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.080879147 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.208672597 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.014607684 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.140436992 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.055305127 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.01753206 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.185863247 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.038574511 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.012791084 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.207286081 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.06125863 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.014489304 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.013564456 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.151966906 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.055165844 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.0122926 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.013429407 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.194761056 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.0134987 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.013007243 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.213201586 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.012293223 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.01460253 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.229232048 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.137109569 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.011660529 seconds)
  done (took 74.572390023 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.012619525 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.167220204 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.223428563 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.239525517 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.204456277 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.160367837 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.179930902 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.167561146 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.175736153 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.171269476 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.17309647 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.122176672 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.133483936 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.113644023 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.186549661 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.157407732 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.155611342 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.180700318 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.17352636 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.191688105 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.166874037 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.212778856 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.188920225 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.212946521 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.420380897 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.175461528 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.168702686 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.178418375 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.249213016 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.173627346 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.43584926 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.191696131 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.167258099 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.26135872 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.597512213 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.330738588 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.060375265 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.175738948 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.173598555 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.174327576 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.133804222 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.22289932 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.1660107 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.133848533 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.184675422 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.171380991 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.214345738 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.436091373 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.113973094 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.171604258 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.179990794 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.214697147 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.172688453 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.158738377 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.213748142 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.125024933 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.212312591 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.214198852 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.179729217 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.213032914 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.212773678 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.137117284 seconds)
  done (took 75.200091455 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.01291545 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.036484858 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.103316286 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.012526965 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.025154016 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.109171556 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.012759371 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.013068715 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.0328272 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.012891178 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.013268778 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.145253866 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 2.550473338 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.043018078 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.103136574 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 2.550173123 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.139303468 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.146259475 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.016856305 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.105801769 seconds)
  done (took 25.176681935 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.113891327 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.190206657 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.050468908 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.212810897 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.050505 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.187345656 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.073931887 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.050351328 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.051707608 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.067373164 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.208278508 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.208603408 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.068391714 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.212644874 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.19036932 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.197310873 seconds)
  done (took 19.127371262 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.121374816 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.012886467 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.012633986 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.012780611 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.079649431 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.01454627 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.015372199 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.022230513 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.012040347 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.53207361 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.029307671 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.101809983 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.060942517 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.18774414 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.08767932 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.116211624 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.034951134 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.013678233 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.01298963 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.030624016 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.806211253 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.015576469 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.098647152 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.013082845 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.100949128 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.862697871 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.014333413 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.109245117 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.020273504 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.01448633 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.120883493 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.601049922 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.012655409 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.07257036 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.047772993 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.017433333 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.014310852 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.013341135 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.101754469 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.013586624 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.023749314 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.127863135 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.014079438 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.031016822 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.01250457 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.013444056 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.028022757 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.546969287 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.015632119 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.133005745 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.013151034 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.013392545 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.016339292 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.552320224 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.012728584 seconds)
  done (took 62.130889938 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.060712484 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.075191206 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.019591459 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.013562061 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.075323362 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.065117502 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.078858151 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.029690975 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.063746154 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.037327767 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.085558543 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.030564022 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.081275028 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.074360094 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.084275283 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.080561186 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.013097881 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.085681796 seconds)
  done (took 20.049008445 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.243387097 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.316825324 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.175262667 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.065802637 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.069459081 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.272808399 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.018331654 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.013306583 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.061137237 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.243436905 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.06479152 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.233113921 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.013234062 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.141633879 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.316136018 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.063857547 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.181912453 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.023283062 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.064512316 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.013069394 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.247825255 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.013387372 seconds)
  done (took 25.89107869 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#3", "BigInt", "+")...
    done (took 1.088223344 seconds)
    (2/6) benchmarking ("#3", "UInt64", "+")...
    done (took 1.07443315 seconds)
    (3/6) benchmarking ("#4", "UInt64", "+")...
    done (took 1.035343092 seconds)
    (4/6) benchmarking ("#3", "Int64", "+")...
    done (took 1.028879581 seconds)
    (5/6) benchmarking ("#4", "Int64", "+")...
    done (took 1.017441868 seconds)
    (6/6) benchmarking ("#4", "BigInt", "+")...
    done (took 1.094588841 seconds)
  done (took 7.331911115 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.10553219 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.088373425 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.066135625 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.068642706 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.122023492 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.12400571 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.103859267 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.110815194 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.090848127 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.365708724 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.115701858 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.117156343 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.100010837 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.160095501 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.106359344 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.100282839 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.114302281 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.119804999 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.080460939 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.116320196 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.145767888 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.101659224 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.120661557 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.136861102 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.126513143 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.160634237 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.117561359 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.354934052 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.10567132 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.140469767 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.091090403 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.124731658 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.140073081 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.346447323 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.06643653 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.110818458 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.114036859 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.115008878 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.102011741 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.154299782 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.062841999 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.108770997 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.096752886 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.118042206 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.112802709 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.11788474 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.117661927 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.130055646 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.120393376 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.351094839 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.096687814 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.163725866 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.092444689 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.100465241 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.091979359 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.344410219 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.355561733 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.152690007 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.093422354 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.373954316 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.156665146 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.111335728 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.159373685 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.356139796 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.108494866 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.155833025 seconds)
  done (took 76.666060269 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.17479141 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.060410969 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.108918758 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.40133533 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.155253045 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.113095594 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.139660912 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.109564354 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.108269002 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.10597133 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.112536058 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.113883842 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.201273657 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.160649158 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.119331189 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.160116255 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.108723458 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.15846338 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.076066758 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.351586653 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.110933471 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.165818053 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.158051785 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.16017746 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.360788207 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.101962919 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.123226767 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.115793253 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.108892628 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.122839699 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.117395116 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.115422399 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.159259608 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.061997936 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.152282039 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.123602815 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.113995215 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.111396374 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.117759204 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.102725924 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.160107993 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.128524532 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.110674326 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.107758797 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.364280041 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.112518696 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.108684933 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.093651128 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.108067036 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.078130355 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.363732887 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.344224466 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.359746712 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.191586297 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.117331864 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.130000503 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.12318474 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.108660942 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.136947537 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.105296272 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.153340122 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.151158941 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.361929781 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.110392783 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.155329248 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.160379696 seconds)
  done (took 77.187141093 seconds)
done (took 2194.633905038 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 5.998025358 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.241078971 seconds)
  done (took 13.233755349 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose", "(600, 600)")...
    done (took 1.021081267 seconds)
    (2/16) benchmarking ("adjoint", "(600, 400)")...
    done (took 1.01573752 seconds)
    (3/16) benchmarking ("adjoint!", "(600, 600)")...
    done (took 1.199051805 seconds)
    (4/16) benchmarking ("adjoint", "(20000, 20000)")...
    done (took 1.018402297 seconds)
    (5/16) benchmarking ("transpose!", "(20000, 10000)")...
    done (took 6.021671555 seconds)
    (6/16) benchmarking ("adjoint!", "(20000, 20000)")...
    done (took 6.125923072 seconds)
    (7/16) benchmarking ("transpose!", "(20000, 20000)")...
    done (took 6.050611031 seconds)
    (8/16) benchmarking ("transpose", "(600, 400)")...
    done (took 1.036251053 seconds)
    (9/16) benchmarking ("transpose", "(20000, 20000)")...
    done (took 1.033284192 seconds)
    (10/16) benchmarking ("transpose!", "(600, 400)")...
    done (took 1.121317293 seconds)
    (11/16) benchmarking ("adjoint", "(600, 600)")...
    done (took 1.01487789 seconds)
    (12/16) benchmarking ("transpose!", "(600, 600)")...
    done (took 1.220955419 seconds)
    (13/16) benchmarking ("adjoint!", "(600, 400)")...
    done (took 1.138838066 seconds)
    (14/16) benchmarking ("transpose", "(20000, 10000)")...
    done (took 1.014156668 seconds)
    (15/16) benchmarking ("adjoint!", "(20000, 10000)")...
    done (took 6.078026874 seconds)
    (16/16) benchmarking ("adjoint", "(20000, 10000)")...
    done (took 1.062892195 seconds)
  done (took 38.195403 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 6.003006074 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 2.81380296 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 6.028166728 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 3.01604589 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 6.08285094 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.535107921 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.54472776 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 5.649315739 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 2.166142108 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 2.535482106 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.198817811 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 6.039161661 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 3.354447592 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.950141972 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 6.15147569 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.287501148 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.707888786 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.866387222 seconds)
  done (took 62.924348107 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", "(20000, 20000)")...
    done (took 6.010654535 seconds)
    (2/2) benchmarking ("unary minus", "(600, 600)")...
    done (took 1.18900183 seconds)
  done (took 8.238345361 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 5.998191347 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.046784875 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.048031347 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.028329127 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.041885669 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.053432171 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.018292518 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.036532052 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.088189687 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.089223608 seconds)
  done (took 61.453204328 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 4.652121731 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 3.277995287 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 3.989654825 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 4.038014605 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.110995547 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.018079796 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 3.451515193 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.251441236 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.005177317 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.448285766 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 5.889245074 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 3.716713599 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 2.830138457 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 6.038930391 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.277155411 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.413715449 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.254521998 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.097050702 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.09919753 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 2.280540657 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 2.399693337 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.550552055 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.291884853 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.171804356 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.576706764 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 1.971352705 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 3.163053154 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 2.945930668 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.169991953 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.09823602 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 3.366169244 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.657798167 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 5.892580668 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.602902465 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.480996798 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.013219919 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 4.108931173 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 2.670034638 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.197171717 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.170129421 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 2.556510741 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 2.211970163 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.075409012 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.477052191 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.350796578 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.5782097 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.870304296 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 3.662003348 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 5.743001482 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.4760971 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 3.979622649 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 5.870426167 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.391569224 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 1.880504751 seconds)
  done (took 158.823222353 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 5.997541989 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.608011 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.251406798 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 5.999012933 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.371026432 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.271906123 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 5.996016022 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.699014394 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.014991633 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.295479274 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.394196004 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.158874888 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 5.995811653 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.034089469 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.057798571 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.052883293 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.494016754 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.836281709 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.01092612 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.025196006 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.433825675 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.321829914 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.203773487 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.000847811 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.365245216 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.292292301 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.40118948 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.150524292 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.371764409 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.047066705 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.522459231 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.007502375 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.056958177 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.072238057 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.681551699 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.339182055 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.453487022 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 5.999060739 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.023178397 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.000854719 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 1.75815662 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.333465951 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.537616384 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.231907308 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.39182447 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.278794064 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 1.814847265 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.015390548 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 1.979049957 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.249800638 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.287466155 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.314301192 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.43513543 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.0360238 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.073182192 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.021707929 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.027394515 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.478608138 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.401951634 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.1316103 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 5.997457316 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 5.997290008 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.022942275 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.333060003 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.003657475 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.196263305 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.011394652 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.056722666 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.19293262 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.124160973 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.337196663 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.308201186 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.293224574 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.506793435 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.695535522 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.417563693 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.639876163 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.329198162 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.004688821 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.033419011 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.506257682 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.057204188 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.39641721 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.324223176 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.299027002 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.389544293 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 1.842369037 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.028349368 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.348556417 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.384541261 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.319270715 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.415326603 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 3.536337468 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 4.660363617 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.013267879 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.02870437 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.085664181 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.242590972 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 5.998403353 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.960814433 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.40214105 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.713585334 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.428229649 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.387784875 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.17568354 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 5.998754693 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 1.703673259 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.0315643 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.36020755 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.38711137 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.010835486 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.014009354 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.356781978 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 1.921463864 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 5.995366487 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.790839069 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.678672006 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.01680427 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.326571505 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.025704979 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.38105473 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 5.999163112 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.310458732 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.865623144 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.398307998 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.348515944 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.405006282 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.001070772 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.373469507 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.319065619 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.707558289 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.389190262 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 5.997747382 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.024694235 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.417887978 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.024645689 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.063362785 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.279373369 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 5.99644949 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.25911789 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 5.999046703 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.373608697 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.278116035 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 3.436358531 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 5.999601017 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.344783369 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.290590878 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.635401479 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.013454486 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.201243069 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 5.996867402 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.078136476 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.235797853 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.012120601 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.08029011 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.642592625 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.035697482 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.205048091 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.346302162 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.515072645 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.527475049 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 1.657795549 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.000776448 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.596681993 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.227151327 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.638115785 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.012392314 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.410343999 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 5.999260427 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.059918186 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.066964428 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.315710075 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.351581456 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 5.994932798 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.025550021 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 1.923530102 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 5.995707137 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 5.997905637 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.298417026 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.020979551 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.038880649 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.416082132 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.000423298 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.572949817 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.022679551 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 4.125772957 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.828970555 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.004320897 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.008630505 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.001436658 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.02328077 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.031051325 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.543978965 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.299353746 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.682023263 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.206711851 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.354281753 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 1.316946246 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.306995114 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.410303505 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.013201534 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.345503677 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.015661345 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.760613921 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.008282223 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 4.364592385 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.286710088 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.007360433 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.385081976 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.345355123 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 1.991768255 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.562076155 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.037734645 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.062729835 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.088856666 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.252931603 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.457158392 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.011644789 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.025376341 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.486228654 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.179612592 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.260520707 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.003698583 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.548495717 seconds)
  done (took 758.314844431 seconds)
done (took 1102.181384027 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", "(1000, 1000)", 3)...
    done (took 6.017092962 seconds)
    (2/4) benchmarking ("Float64", "(1000000,)", 1)...
    done (took 6.041026168 seconds)
    (3/4) benchmarking ("Float64", "(1000, 1000)", 2)...
    done (took 6.063303776 seconds)
    (4/4) benchmarking ("Float64", "(1000000,)", 2)...
    done (took 6.070954813 seconds)
  done (took 25.188047763 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.029239996 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 2.073295254 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.317569633 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.954725212 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.276302867 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 2.548225478 seconds)
  done (took 11.233036806 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", "(1000000,)", 1)...
    done (took 5.996290224 seconds)
    (2/3) benchmarking ("Float64", "(1000, 1000)", 2)...
    done (took 6.00404032 seconds)
    (3/3) benchmarking ("Float64", "(1000000,)", 2)...
    done (took 6.028963351 seconds)
  done (took 19.093302902 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ("(10000000,)", 1)...
    done (took 1.846893741 seconds)
    (2/4) benchmarking ("(1000, 1000)", 2)...
    done (took 1.499220496 seconds)
    (3/4) benchmarking ("(1000, 1000)", 1)...
    done (took 1.171363156 seconds)
    (4/4) benchmarking ("(10000000,)", 2)...
    done (took 1.553853725 seconds)
  done (took 7.109113657 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.044403561 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.043768367 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.021954568 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.096070862 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.018364821 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.114228465 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.06034678 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.049132134 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.06319656 seconds)
  done (took 10.512241207 seconds)
  (6/6) benchmarking "26942"...
  done (took 6.026456151 seconds)
done (took 80.180107009 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/341) benchmarking ("collect", "all", "Int64", 0)...
    done (took 1.182491791 seconds)
    (2/341) benchmarking ("map", "identity", "Int8", 0)...
    done (took 1.134283192 seconds)
    (3/341) benchmarking ("map", "*", "Int64", "(false, false)")...
    done (took 1.307124293 seconds)
    (4/341) benchmarking ("map", "identity", "Float64", 0)...
    done (took 1.209307586 seconds)
    (5/341) benchmarking ("sort", "Float64", 0)...
    done (took 5.998082288 seconds)
    (6/341) benchmarking ("perf_sum4", "BigInt", 1)...
    done (took 6.005294024 seconds)
    (7/341) benchmarking ("skipmissing", "sum", "Union{Nothing, BigInt}", 0)...
    done (took 8.067513339 seconds)
    (8/341) benchmarking ("collect", "all", "Int8", 0)...
    done (took 3.606759858 seconds)
    (9/341) benchmarking ("map", "*", "Complex{Float64}", "(false, true)")...
    done (took 2.201115266 seconds)
    (10/341) benchmarking ("collect", "all", "Float32", 1)...
    done (took 1.309306703 seconds)
    (11/341) benchmarking ("perf_sum3", "Float64", 1)...
    done (took 1.298112076 seconds)
    (12/341) benchmarking ("perf_sum", "Complex{Float64}", 1)...
    done (took 1.175028193 seconds)
    (13/341) benchmarking ("broadcast", "*", "Bool", "(false, true)")...
    done (took 1.493513154 seconds)
    (14/341) benchmarking ("broadcast", "*", "Int64", "(false, true)")...
    done (took 1.595006412 seconds)
    (15/341) benchmarking ("perf_binaryop", "*", "Float32", "(true, true)")...
    done (took 1.50004047 seconds)
    (16/341) benchmarking ("map", "identity", "Float32", 0)...
    done (took 1.126841838 seconds)
    (17/341) benchmarking ("perf_sum2", "Float32", 0)...
    done (took 1.229794589 seconds)
    (18/341) benchmarking ("perf_sum", "Int64", 0)...
    done (took 1.030572087 seconds)
    (19/341) benchmarking ("broadcast", "identity", "Int8", 1)...
    done (took 1.211509706 seconds)
    (20/341) benchmarking ("perf_sum4", "BigInt", 0)...
    done (took 6.032080966 seconds)
    (21/341) benchmarking ("perf_sum3", "Complex{Float64}", 0)...
    done (took 3.944880806 seconds)
    (22/341) benchmarking ("perf_sum2", "BigFloat", 1)...
    done (took 6.00688727 seconds)
    (23/341) benchmarking ("collect", "all", "Float32", 0)...
    done (took 1.269133692 seconds)
    (24/341) benchmarking ("collect", "filter", "Int64", 1)...
    done (took 2.726553951 seconds)
    (25/341) benchmarking ("perf_sum", "Int8", 0)...
    done (took 1.047007861 seconds)
    (26/341) benchmarking ("broadcast", "identity", "Float32", 1)...
    done (took 1.295327818 seconds)
    (27/341) benchmarking ("broadcast", "identity", "BigFloat", 1)...
    done (took 1.786067198 seconds)
    (28/341) benchmarking ("broadcast", "*", "BigInt", "(false, true)")...
    done (took 7.335079459 seconds)
    (29/341) benchmarking ("skipmissing", "collect", "Float64", 0)...
    done (took 2.118450683 seconds)
    (30/341) benchmarking ("broadcast", "*", "Float32", "(false, false)")...
    done (took 1.302495645 seconds)
    (31/341) benchmarking ("broadcast", "identity", "Float32", 0)...
    done (took 1.124106314 seconds)
    (32/341) benchmarking ("broadcast", "abs", "Float64", 1)...
    done (took 1.41248132 seconds)
    (33/341) benchmarking ("perf_binaryop", "*", "Int64", "(false, true)")...
    done (took 1.631409106 seconds)
    (34/341) benchmarking ("perf_simplecopy", "Float32", 1)...
    done (took 1.148031763 seconds)
    (35/341) benchmarking ("perf_binaryop", "*", "Complex{Float64}", "(false, false)")...
    done (took 2.028421953 seconds)
    (36/341) benchmarking ("map", "abs", "BigFloat", 0)...
    done (took 6.016904862 seconds)
    (37/341) benchmarking ("perf_sum3", "BigFloat", 1)...
    done (took 6.144649485 seconds)
    (38/341) benchmarking ("broadcast", "identity", "BigInt", 1)...
    done (took 1.789164715 seconds)
    (39/341) benchmarking ("perf_sum2", "Bool", 1)...
    done (took 1.083201719 seconds)
    (40/341) benchmarking ("skipmissing", "collect", "Union{Missing, Complex{Float64}}", 1)...
    done (took 2.312558517 seconds)
    (41/341) benchmarking ("perf_binaryop", "*", "Int64", "(false, false)")...
    done (took 1.507410321 seconds)
    (42/341) benchmarking ("broadcast", "abs", "Bool", 1)...
    done (took 1.244603017 seconds)
    (43/341) benchmarking ("map", "*", "Int8", "(true, true)")...
    done (took 1.418616263 seconds)
    (44/341) benchmarking ("sort", "Union{Missing, Int8}", 1)...
    done (took 6.043331835 seconds)
    (45/341) benchmarking ("map", "*", "Bool", "(false, false)")...
    done (took 1.397759103 seconds)
    (46/341) benchmarking ("perf_sum2", "Complex{Float64}", 1)...
    done (took 1.244985312 seconds)
    (47/341) benchmarking ("perf_sum2", "BigInt", 1)...
    done (took 7.761079019 seconds)
    (48/341) benchmarking ("sort", "Union{Nothing, Float32}", 0)...
    done (took 6.156117505 seconds)
    (49/341) benchmarking ("map", "*", "BigFloat", "(false, false)")...
    done (took 6.006507058 seconds)
    (50/341) benchmarking ("skipmissing", "collect", "Union{Nothing, BigFloat}", 0)...
    done (took 2.680580185 seconds)
    (51/341) benchmarking ("broadcast", "*", "Float32", "(false, true)")...
    done (took 1.487226947 seconds)
    (52/341) benchmarking ("skipmissing", "collect", "BigInt", 0)...
    done (took 2.257891796 seconds)
    (53/341) benchmarking ("map", "abs", "BigInt", 1)...
    done (took 6.001079823 seconds)
    (54/341) benchmarking ("skipmissing", "sum", "Union{Missing, BigInt}", 1)...
    done (took 7.665287144 seconds)
    (55/341) benchmarking ("collect", "filter", "Int8", 0)...
    done (took 4.535983533 seconds)
    (56/341) benchmarking ("perf_simplecopy", "Complex{Float64}", 1)...
    done (took 1.662320786 seconds)
    (57/341) benchmarking ("sort", "Union{Missing, Bool}", 1)...
    done (took 6.051644207 seconds)
    (58/341) benchmarking ("broadcast", "identity", "Int8", 0)...
    done (took 1.211446014 seconds)
    (59/341) benchmarking ("skipmissing", "collect", "Int8", 0)...
    done (took 1.675211175 seconds)
    (60/341) benchmarking ("broadcast", "*", "Complex{Float64}", "(true, true)")...
    done (took 2.051798969 seconds)
    (61/341) benchmarking ("skipmissing", "sum", "Union{Missing, Bool}", 1)...
    done (took 1.107165591 seconds)
    (62/341) benchmarking ("perf_countequals", "Int8")...
    done (took 1.31564639 seconds)
    (63/341) benchmarking ("map", "abs", "BigInt", 0)...
    done (took 6.003114315 seconds)
    (64/341) benchmarking ("map", "*", "Complex{Float64}", "(false, false)")...
    done (took 2.617154873 seconds)
    (65/341) benchmarking ("perf_sum", "Complex{Float64}", 0)...
    done (took 1.173448076 seconds)
    (66/341) benchmarking ("skipmissing", "collect", "Bool", 0)...
    done (took 1.683841337 seconds)
    (67/341) benchmarking ("broadcast", "*", "Bool", "(false, false)")...
    done (took 1.51937166 seconds)
    (68/341) benchmarking ("sort", "Bool", 0)...
    done (took 1.286439218 seconds)
    (69/341) benchmarking ("perf_countnothing", "Float64", 1)...
    done (took 1.11549437 seconds)
    (70/341) benchmarking ("sort", "Union{Nothing, Int8}", 0)...
    done (took 5.996139338 seconds)
    (71/341) benchmarking ("collect", "filter", "BigFloat", 0)...
    done (took 2.52080097 seconds)
    (72/341) benchmarking ("perf_sum4", "Int64", 0)...
    done (took 1.039136045 seconds)
    (73/341) benchmarking ("skipmissing", "sum", "Float32", 0)...
    done (took 1.056362874 seconds)
    (74/341) benchmarking ("broadcast", "*", "Complex{Float64}", "(false, false)")...
    done (took 1.615184903 seconds)
    (75/341) benchmarking ("skipmissing", "sum", "Union{Missing, Float32}", 1)...
    done (took 1.197994373 seconds)
    (76/341) benchmarking ("sort", "Union{Nothing, BigInt}", 0)...
    done (took 5.997497998 seconds)
    (77/341) benchmarking ("collect", "all", "Bool", 0)...
    done (took 1.149599292 seconds)
    (78/341) benchmarking ("perf_countnothing", "BigFloat", 1)...
    done (took 1.089812383 seconds)
    (79/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(false, false)")...
    done (took 5.994724653 seconds)
    (80/341) benchmarking ("skipmissing", "sum", "Union{Nothing, BigFloat}", 0)...
    done (took 6.219193603 seconds)
    (81/341) benchmarking ("collect", "all", "Complex{Float64}", 1)...
    done (took 1.911581896 seconds)
    (82/341) benchmarking ("broadcast", "abs", "BigFloat", 1)...
    done (took 6.004897791 seconds)
    (83/341) benchmarking ("perf_sum4", "BigFloat", 0)...
    done (took 6.208738123 seconds)
    (84/341) benchmarking ("broadcast", "*", "BigFloat", "(false, false)")...
    done (took 6.04792545 seconds)
    (85/341) benchmarking ("perf_simplecopy", "Int8", 0)...
    done (took 1.299395396 seconds)
    (86/341) benchmarking ("perf_sum", "BigFloat", 1)...
    done (took 6.004897182 seconds)
    (87/341) benchmarking ("broadcast", "*", "Int64", "(true, true)")...
    done (took 1.794992251 seconds)
    (88/341) benchmarking ("collect", "all", "BigFloat", 1)...
    done (took 1.820366312 seconds)
    (89/341) benchmarking ("perf_sum3", "Int8", 1)...
    done (took 1.169705627 seconds)
    (90/341) benchmarking ("skipmissing", "collect", "Union{Missing, Int8}", 1)...
    done (took 1.891619064 seconds)
    (91/341) benchmarking ("perf_binaryop", "*", "Int8", "(true, true)")...
    done (took 1.501509156 seconds)
    (92/341) benchmarking ("map", "*", "Float32", "(true, true)")...
    done (took 1.539740594 seconds)
    (93/341) benchmarking ("map", "*", "BigInt", "(false, true)")...
    done (took 6.005985612 seconds)
    (94/341) benchmarking ("map", "identity", "Bool", 1)...
    done (took 3.009756 seconds)
    (95/341) benchmarking ("broadcast", "abs", "Complex{Float64}", 0)...
    done (took 3.301935799 seconds)
    (96/341) benchmarking ("broadcast", "*", "BigInt", "(true, true)")...
    done (took 7.283670266 seconds)
    (97/341) benchmarking ("map", "identity", "BigFloat", 1)...
    done (took 1.974979114 seconds)
    (98/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(false, true)")...
    done (took 6.046377646 seconds)
    (99/341) benchmarking ("perf_sum2", "BigInt", 0)...
    done (took 6.211753193 seconds)
    (100/341) benchmarking ("broadcast", "*", "BigInt", "(false, false)")...
    done (took 8.241667559 seconds)
    (101/341) benchmarking ("perf_binaryop", "*", "BigInt", "(true, true)")...
    done (took 7.393628731 seconds)
    (102/341) benchmarking ("map", "*", "Bool", "(true, true)")...
    done (took 2.207312027 seconds)
    (103/341) benchmarking ("broadcast", "*", "Float64", "(true, true)")...
    done (took 1.591581281 seconds)
    (104/341) benchmarking ("skipmissing", "collect", "Union{Missing, BigInt}", 1)...
    done (took 2.327416047 seconds)
    (105/341) benchmarking ("map", "*", "Int64", "(true, true)")...
    done (took 1.68909881 seconds)
    (106/341) benchmarking ("broadcast", "identity", "BigInt", 0)...
    done (took 1.532959099 seconds)
    (107/341) benchmarking ("map", "abs", "Int8", 1)...
    done (took 1.266047572 seconds)
    (108/341) benchmarking ("map", "identity", "Int64", 0)...
    done (took 1.163639386 seconds)
    (109/341) benchmarking ("map", "*", "Float64", "(false, false)")...
    done (took 1.469990964 seconds)
    (110/341) benchmarking ("skipmissing", "collect", "Complex{Float64}", 0)...
    done (took 2.562605754 seconds)
    (111/341) benchmarking ("collect", "all", "BigFloat", 0)...
    done (took 1.459490663 seconds)
    (112/341) benchmarking ("collect", "all", "Int64", 1)...
    done (took 1.402780824 seconds)
    (113/341) benchmarking ("map", "abs", "Int8", 0)...
    done (took 1.155901474 seconds)
    (114/341) benchmarking ("map", "*", "BigInt", "(true, true)")...
    done (took 7.397684068 seconds)
    (115/341) benchmarking ("map", "abs", "Complex{Float64}", 0)...
    done (took 3.476838923 seconds)
    (116/341) benchmarking ("perf_binaryop", "*", "Float32", "(false, true)")...
    done (took 1.508363888 seconds)
    (117/341) benchmarking ("collect", "filter", "Bool", 1)...
    done (took 2.48703396 seconds)
    (118/341) benchmarking ("perf_countnothing", "BigFloat", 0)...
    done (took 1.142338235 seconds)
    (119/341) benchmarking ("perf_simplecopy", "Bool", 0)...
    done (took 1.086350751 seconds)
    (120/341) benchmarking ("map", "abs", "Float64", 0)...
    done (took 1.158820844 seconds)
    (121/341) benchmarking ("perf_sum", "Float32", 1)...
    done (took 1.232272448 seconds)
    (122/341) benchmarking ("map", "abs", "Bool", 0)...
    done (took 1.16008408 seconds)
    (123/341) benchmarking ("perf_sum", "Float64", 1)...
    done (took 1.208039668 seconds)
    (124/341) benchmarking ("sort", "BigInt", 0)...
    done (took 5.996216615 seconds)
    (125/341) benchmarking ("perf_sum2", "Int64", 0)...
    done (took 1.062785036 seconds)
    (126/341) benchmarking ("sort", "Union{Missing, Float64}", 1)...
    done (took 5.995655431 seconds)
    (127/341) benchmarking ("perf_countequals", "Float32")...
    done (took 1.389124885 seconds)
    (128/341) benchmarking ("perf_sum", "BigInt", 1)...
    done (took 7.834765432 seconds)
    (129/341) benchmarking ("perf_sum4", "Bool", 1)...
    done (took 1.227418306 seconds)
    (130/341) benchmarking ("sort", "Int8", 0)...
    done (took 5.879104754 seconds)
    (131/341) benchmarking ("perf_sum2", "Float32", 1)...
    done (took 1.194482726 seconds)
    (132/341) benchmarking ("map", "*", "Complex{Float64}", "(true, true)")...
    done (took 2.264419232 seconds)
    (133/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Float32}", 0)...
    done (took 2.658280349 seconds)
    (134/341) benchmarking ("skipmissing", "collect", "Union{Missing, Float64}", 1)...
    done (took 2.103534324 seconds)
    (135/341) benchmarking ("perf_binaryop", "*", "Bool", "(true, true)")...
    done (took 1.404644265 seconds)
    (136/341) benchmarking ("perf_simplecopy", "Bool", 1)...
    done (took 1.101804905 seconds)
    (137/341) benchmarking ("perf_sum", "Float32", 0)...
    done (took 1.196397461 seconds)
    (138/341) benchmarking ("map", "*", "BigInt", "(false, false)")...
    done (took 5.995368678 seconds)
    (139/341) benchmarking ("perf_sum2", "Int8", 0)...
    done (took 2.707470787 seconds)
    (140/341) benchmarking ("broadcast", "*", "Float64", "(false, false)")...
    done (took 1.304522216 seconds)
    (141/341) benchmarking ("perf_sum", "BigInt", 0)...
    done (took 6.020603135 seconds)
    (142/341) benchmarking ("perf_simplecopy", "Int64", 0)...
    done (took 3.751619408 seconds)
    (143/341) benchmarking ("perf_sum2", "Float64", 0)...
    done (took 1.195039742 seconds)
    (144/341) benchmarking ("perf_sum3", "Bool", 0)...
    done (took 1.141661439 seconds)
    (145/341) benchmarking ("perf_countequals", "Int64")...
    done (took 1.324728459 seconds)
    (146/341) benchmarking ("perf_sum3", "Int8", 0)...
    done (took 1.153927505 seconds)
    (147/341) benchmarking ("perf_sum3", "BigInt", 1)...
    done (took 7.7296375 seconds)
    (148/341) benchmarking ("map", "identity", "Complex{Float64}", 0)...
    done (took 1.532252063 seconds)
    (149/341) benchmarking ("collect", "all", "Complex{Float64}", 0)...
    done (took 1.314979149 seconds)
    (150/341) benchmarking ("perf_sum4", "Float64", 1)...
    done (took 1.04044855 seconds)
    (151/341) benchmarking ("collect", "filter", "Bool", 0)...
    done (took 1.865240755 seconds)
    (152/341) benchmarking ("perf_sum4", "Int8", 0)...
    done (took 1.038999437 seconds)
    (153/341) benchmarking ("perf_countequals", "Bool")...
    done (took 1.315229745 seconds)
    (154/341) benchmarking ("skipmissing", "collect", "Union{Missing, Int64}", 1)...
    done (took 2.195269264 seconds)
    (155/341) benchmarking ("perf_sum3", "BigFloat", 0)...
    done (took 5.998893942 seconds)
    (156/341) benchmarking ("skipmissing", "collect", "Union{Missing, BigFloat}", 1)...
    done (took 2.486913016 seconds)
    (157/341) benchmarking ("perf_sum4", "Float32", 1)...
    done (took 1.046030349 seconds)
    (158/341) benchmarking ("perf_binaryop", "*", "Float64", "(false, false)")...
    done (took 1.437148963 seconds)
    (159/341) benchmarking ("skipmissing", "collect", "Union{Nothing, BigInt}", 0)...
    done (took 2.296785201 seconds)
    (160/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Complex{Float64}}", 0)...
    done (took 1.204035629 seconds)
    (161/341) benchmarking ("map", "*", "Int64", "(false, true)")...
    done (took 1.627968407 seconds)
    (162/341) benchmarking ("broadcast", "abs", "Int8", 1)...
    done (took 1.247871336 seconds)
    (163/341) benchmarking ("perf_simplecopy", "Complex{Float64}", 0)...
    done (took 1.570259256 seconds)
    (164/341) benchmarking ("collect", "all", "BigInt", 0)...
    done (took 1.479295868 seconds)
    (165/341) benchmarking ("perf_sum", "BigFloat", 0)...
    done (took 6.003633021 seconds)
    (166/341) benchmarking ("map", "*", "Int8", "(false, false)")...
    done (took 1.495768577 seconds)
    (167/341) benchmarking ("sort", "Union{Missing, BigInt}", 1)...
    done (took 6.019035078 seconds)
    (168/341) benchmarking ("perf_sum4", "Complex{Float64}", 1)...
    done (took 1.340308641 seconds)
    (169/341) benchmarking ("sort", "Float32", 0)...
    done (took 5.996299695 seconds)
    (170/341) benchmarking ("collect", "all", "Float64", 0)...
    done (took 1.209691341 seconds)
    (171/341) benchmarking ("sort", "Union{Missing, Int64}", 1)...
    done (took 6.013437124 seconds)
    (172/341) benchmarking ("map", "identity", "Int8", 1)...
    done (took 1.278940284 seconds)
    (173/341) benchmarking ("collect", "filter", "Float32", 1)...
    done (took 2.579009599 seconds)
    (174/341) benchmarking ("sort", "BigFloat", 0)...
    done (took 6.017565224 seconds)
    (175/341) benchmarking ("perf_countnothing", "Bool", 0)...
    done (took 1.05106267 seconds)
    (176/341) benchmarking ("broadcast", "abs", "Int8", 0)...
    done (took 1.166087651 seconds)
    (177/341) benchmarking ("broadcast", "abs", "BigInt", 1)...
    done (took 5.997689573 seconds)
    (178/341) benchmarking ("perf_sum2", "Int8", 1)...
    done (took 2.526440145 seconds)
    (179/341) benchmarking ("map", "*", "Float64", "(false, true)")...
    done (took 1.648860257 seconds)
    (180/341) benchmarking ("perf_countnothing", "Bool", 1)...
    done (took 1.063630117 seconds)
    (181/341) benchmarking ("map", "abs", "BigFloat", 1)...
    done (took 5.996678414 seconds)
    (182/341) benchmarking ("sort", "Union{Nothing, BigFloat}", 0)...
    done (took 6.181353303 seconds)
    (183/341) benchmarking ("broadcast", "abs", "Bool", 0)...
    done (took 1.312632455 seconds)
    (184/341) benchmarking ("broadcast", "identity", "Int64", 1)...
    done (took 1.445399084 seconds)
    (185/341) benchmarking ("perf_sum2", "BigFloat", 0)...
    done (took 6.005912523 seconds)
    (186/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Int8}", 0)...
    done (took 1.349832403 seconds)
    (187/341) benchmarking ("perf_binaryop", "*", "Complex{Float64}", "(false, true)")...
    done (took 2.096132023 seconds)
    (188/341) benchmarking ("broadcast", "*", "BigFloat", "(true, true)")...
    done (took 6.01036044 seconds)
    (189/341) benchmarking ("map", "*", "Float32", "(false, false)")...
    done (took 1.529504777 seconds)
    (190/341) benchmarking ("collect", "filter", "Complex{Float64}", 0)...
    done (took 2.33998437 seconds)
    (191/341) benchmarking ("perf_simplecopy", "Float32", 0)...
    done (took 1.156014113 seconds)
    (192/341) benchmarking ("broadcast", "*", "BigFloat", "(false, true)")...
    done (took 6.005007561 seconds)
    (193/341) benchmarking ("perf_sum2", "Int64", 1)...
    done (took 1.225922612 seconds)
    (194/341) benchmarking ("perf_simplecopy", "BigFloat", 0)...
    done (took 1.383389493 seconds)
    (195/341) benchmarking ("skipmissing", "sum", "Complex{Float64}", 0)...
    done (took 1.079949837 seconds)
    (196/341) benchmarking ("perf_sum3", "Float32", 1)...
    done (took 1.270881177 seconds)
    (197/341) benchmarking ("skipmissing", "sum", "Bool", 0)...
    done (took 1.045260159 seconds)
    (198/341) benchmarking ("broadcast", "abs", "BigInt", 0)...
    done (took 5.999016335 seconds)
    (199/341) benchmarking ("perf_binaryop", "*", "Bool", "(false, false)")...
    done (took 1.97473303 seconds)
    (200/341) benchmarking ("skipmissing", "collect", "Float32", 0)...
    done (took 1.814238166 seconds)
    (201/341) benchmarking ("broadcast", "*", "Int8", "(true, true)")...
    done (took 1.403854297 seconds)
    (202/341) benchmarking ("sort", "Union{Missing, Float32}", 1)...
    done (took 6.010620045 seconds)
    (203/341) benchmarking ("perf_binaryop", "*", "Float32", "(false, false)")...
    done (took 1.418628743 seconds)
    (204/341) benchmarking ("broadcast", "identity", "Complex{Float64}", 0)...
    done (took 1.319377348 seconds)
    (205/341) benchmarking ("map", "identity", "Float64", 1)...
    done (took 1.416550101 seconds)
    (206/341) benchmarking ("perf_sum4", "Int8", 1)...
    done (took 1.039456972 seconds)
    (207/341) benchmarking ("map", "*", "Float32", "(false, true)")...
    done (took 1.431921955 seconds)
    (208/341) benchmarking ("map", "identity", "Bool", 0)...
    done (took 1.156505941 seconds)
    (209/341) benchmarking ("skipmissing", "sum", "Union{Missing, Int8}", 1)...
    done (took 1.07078772 seconds)
    (210/341) benchmarking ("perf_binaryop", "*", "BigInt", "(false, true)")...
    done (took 6.037158681 seconds)
    (211/341) benchmarking ("collect", "filter", "BigInt", 0)...
    done (took 3.176273931 seconds)
    (212/341) benchmarking ("perf_simplecopy", "Float64", 1)...
    done (took 1.273699337 seconds)
    (213/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Complex{Float64}}", 0)...
    done (took 2.9599941 seconds)
    (214/341) benchmarking ("broadcast", "abs", "Int64", 1)...
    done (took 1.421031503 seconds)
    (215/341) benchmarking ("collect", "filter", "Float32", 0)...
    done (took 1.954800697 seconds)
    (216/341) benchmarking ("perf_binaryop", "*", "Complex{Float64}", "(true, true)")...
    done (took 2.044641744 seconds)
    (217/341) benchmarking ("skipmissing", "sum", "BigFloat", 0)...
    done (took 6.013106957 seconds)
    (218/341) benchmarking ("skipmissing", "sum", "Union{Missing, BigFloat}", 1)...
    done (took 6.148774151 seconds)
    (219/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Int64}", 0)...
    done (took 1.304208851 seconds)
    (220/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Float64}", 0)...
    done (took 1.177356787 seconds)
    (221/341) benchmarking ("broadcast", "abs", "Float32", 0)...
    done (took 1.235903916 seconds)
    (222/341) benchmarking ("map", "identity", "BigFloat", 0)...
    done (took 1.584625681 seconds)
    (223/341) benchmarking ("sort", "Union{Nothing, Float64}", 0)...
    done (took 6.006163745 seconds)
    (224/341) benchmarking ("perf_sum4", "Float32", 0)...
    done (took 1.061143571 seconds)
    (225/341) benchmarking ("broadcast", "identity", "Bool", 0)...
    done (took 1.267851269 seconds)
    (226/341) benchmarking ("perf_sum", "Int64", 1)...
    done (took 1.03695271 seconds)
    (227/341) benchmarking ("skipmissing", "sum", "Float64", 0)...
    done (took 1.054496285 seconds)
    (228/341) benchmarking ("broadcast", "abs", "Float64", 0)...
    done (took 1.185931875 seconds)
    (229/341) benchmarking ("perf_simplecopy", "BigInt", 0)...
    done (took 1.390211282 seconds)
    (230/341) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.915202777 seconds)
    (231/341) benchmarking ("perf_countequals", "Float64")...
    done (took 1.280067019 seconds)
    (232/341) benchmarking ("skipmissing", "collect", "Int64", 0)...
    done (took 2.036849531 seconds)
    (233/341) benchmarking ("perf_sum3", "BigInt", 0)...
    done (took 7.764053457 seconds)
    (234/341) benchmarking ("collect", "all", "Int8", 1)...
    done (took 1.393613341 seconds)
    (235/341) benchmarking ("perf_sum", "Bool", 0)...
    done (took 1.109451051 seconds)
    (236/341) benchmarking ("perf_countnothing", "Float32", 1)...
    done (took 1.044153546 seconds)
    (237/341) benchmarking ("perf_simplecopy", "Int64", 1)...
    done (took 1.235889144 seconds)
    (238/341) benchmarking ("collect", "all", "Float64", 1)...
    done (took 1.445844464 seconds)
    (239/341) benchmarking ("broadcast", "*", "Int8", "(false, false)")...
    done (took 1.372789619 seconds)
    (240/341) benchmarking ("perf_countnothing", "Complex{Float64}", 1)...
    done (took 1.090457515 seconds)
    (241/341) benchmarking ("perf_countnothing", "Complex{Float64}", 0)...
    done (took 1.044312431 seconds)
    (242/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(true, true)")...
    done (took 6.01319664 seconds)
    (243/341) benchmarking ("sort", "Union{Nothing, Int64}", 0)...
    done (took 6.177888447 seconds)
    (244/341) benchmarking ("map", "abs", "Float32", 1)...
    done (took 1.308482154 seconds)
    (245/341) benchmarking ("skipmissing", "sum", "Union{Missing, Float64}", 1)...
    done (took 1.200074612 seconds)
    (246/341) benchmarking ("perf_sum4", "Complex{Float64}", 0)...
    done (took 1.255960215 seconds)
    (247/341) benchmarking ("map", "identity", "Float32", 1)...
    done (took 1.317589512 seconds)
    (248/341) benchmarking ("map", "*", "Int8", "(false, true)")...
    done (took 1.462558999 seconds)
    (249/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Bool}", 0)...
    done (took 1.183273287 seconds)
    (250/341) benchmarking ("broadcast", "abs", "Complex{Float64}", 1)...
    done (took 3.358479505 seconds)
    (251/341) benchmarking ("perf_sum4", "Float64", 0)...
    done (took 1.042922899 seconds)
    (252/341) benchmarking ("perf_sum3", "Int64", 0)...
    done (took 1.187859298 seconds)
    (253/341) benchmarking ("map", "*", "BigFloat", "(false, true)")...
    done (took 5.998069996 seconds)
    (254/341) benchmarking ("broadcast", "*", "Bool", "(true, true)")...
    done (took 1.663071066 seconds)
    (255/341) benchmarking ("broadcast", "*", "Float32", "(true, true)")...
    done (took 1.551654181 seconds)
    (256/341) benchmarking ("map", "abs", "Int64", 0)...
    done (took 1.222170946 seconds)
    (257/341) benchmarking ("perf_sum", "Bool", 1)...
    done (took 1.077513393 seconds)
    (258/341) benchmarking ("map", "abs", "Float32", 0)...
    done (took 1.161645359 seconds)
    (259/341) benchmarking ("collect", "filter", "Float64", 0)...
    done (took 2.549186518 seconds)
    (260/341) benchmarking ("perf_sum", "Int8", 1)...
    done (took 1.044325235 seconds)
    (261/341) benchmarking ("perf_sum2", "Float64", 1)...
    done (took 1.185204119 seconds)
    (262/341) benchmarking ("perf_sum3", "Complex{Float64}", 1)...
    done (took 1.237696754 seconds)
    (263/341) benchmarking ("collect", "filter", "Complex{Float64}", 1)...
    done (took 2.830518443 seconds)
    (264/341) benchmarking ("collect", "filter", "Float64", 1)...
    done (took 2.95872715 seconds)
    (265/341) benchmarking ("map", "*", "Float64", "(true, true)")...
    done (took 1.676487551 seconds)
    (266/341) benchmarking ("skipmissing", "sum", "Int8", 0)...
    done (took 1.052516081 seconds)
    (267/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Int8}", 0)...
    done (took 2.431290621 seconds)
    (268/341) benchmarking ("perf_binaryop", "*", "BigInt", "(false, false)")...
    done (took 6.056695002 seconds)
    (269/341) benchmarking ("perf_sum3", "Float64", 0)...
    done (took 2.047756816 seconds)
    (270/341) benchmarking ("broadcast", "identity", "Float64", 0)...
    done (took 1.139080563 seconds)
    (271/341) benchmarking ("map", "identity", "Int64", 1)...
    done (took 1.407611649 seconds)
    (272/341) benchmarking ("perf_countnothing", "Float64", 0)...
    done (took 1.063644129 seconds)
    (273/341) benchmarking ("sort", "Int64", 0)...
    done (took 5.998544064 seconds)
    (274/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Float64}", 0)...
    done (took 2.79180844 seconds)
    (275/341) benchmarking ("perf_countnothing", "BigInt", 0)...
    done (took 1.100374421 seconds)
    (276/341) benchmarking ("map", "*", "Bool", "(false, true)")...
    done (took 1.399664489 seconds)
    (277/341) benchmarking ("collect", "filter", "BigInt", 1)...
    done (took 2.416101567 seconds)
    (278/341) benchmarking ("broadcast", "*", "Float64", "(false, true)")...
    done (took 1.598823978 seconds)
    (279/341) benchmarking ("skipmissing", "sum", "Union{Missing, Complex{Float64}}", 1)...
    done (took 1.193954688 seconds)
    (280/341) benchmarking ("perf_sum4", "Bool", 0)...
    done (took 1.066468195 seconds)
    (281/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Int64}", 0)...
    done (took 2.667432573 seconds)
    (282/341) benchmarking ("perf_simplecopy", "BigFloat", 1)...
    done (took 1.459321802 seconds)
    (283/341) benchmarking ("broadcast", "abs", "BigFloat", 0)...
    done (took 6.00391473 seconds)
    (284/341) benchmarking ("map", "abs", "Bool", 1)...
    done (took 1.320871298 seconds)
    (285/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Float32}", 0)...
    done (took 1.189544042 seconds)
    (286/341) benchmarking ("collect", "filter", "BigFloat", 1)...
    done (took 2.395429039 seconds)
    (287/341) benchmarking ("perf_sum2", "Bool", 0)...
    done (took 1.100554529 seconds)
    (288/341) benchmarking ("perf_sum4", "Int64", 1)...
    done (took 1.049429864 seconds)
    (289/341) benchmarking ("perf_countnothing", "Int64", 0)...
    done (took 1.04377032 seconds)
    (290/341) benchmarking ("collect", "filter", "Int8", 1)...
    done (took 2.455202413 seconds)
    (291/341) benchmarking ("perf_simplecopy", "Float64", 0)...
    done (took 1.270903333 seconds)
    (292/341) benchmarking ("perf_binaryop", "*", "Float64", "(true, true)")...
    done (took 1.531176643 seconds)
    (293/341) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.467915114 seconds)
    (294/341) benchmarking ("perf_binaryop", "*", "Int8", "(false, true)")...
    done (took 1.490288204 seconds)
    (295/341) benchmarking ("broadcast", "identity", "BigFloat", 0)...
    done (took 1.59365502 seconds)
    (296/341) benchmarking ("perf_sum2", "Complex{Float64}", 0)...
    done (took 1.24688857 seconds)
    (297/341) benchmarking ("perf_countnothing", "Int64", 1)...
    done (took 1.091843959 seconds)
    (298/341) benchmarking ("perf_countnothing", "BigInt", 1)...
    done (took 1.088180828 seconds)
    (299/341) benchmarking ("perf_binaryop", "*", "Bool", "(false, true)")...
    done (took 1.427386815 seconds)
    (300/341) benchmarking ("broadcast", "*", "Int8", "(false, true)")...
    done (took 1.416972543 seconds)
    (301/341) benchmarking ("broadcast", "*", "Complex{Float64}", "(false, true)")...
    done (took 2.04466293 seconds)
    (302/341) benchmarking ("skipmissing", "sum", "Union{Missing, Int64}", 1)...
    done (took 1.058472 seconds)
    (303/341) benchmarking ("broadcast", "*", "Int64", "(false, false)")...
    done (took 1.346501757 seconds)
    (304/341) benchmarking ("map", "abs", "Float64", 1)...
    done (took 1.40414626 seconds)
    (305/341) benchmarking ("perf_sum3", "Float32", 0)...
    done (took 1.21368573 seconds)
    (306/341) benchmarking ("skipmissing", "collect", "Union{Missing, Float32}", 1)...
    done (took 2.288392468 seconds)
    (307/341) benchmarking ("broadcast", "abs", "Int64", 0)...
    done (took 1.197651255 seconds)
    (308/341) benchmarking ("sort", "Union{Missing, BigFloat}", 1)...
    done (took 5.998271655 seconds)
    (309/341) benchmarking ("broadcast", "identity", "Bool", 1)...
    done (took 1.272317569 seconds)
    (310/341) benchmarking ("map", "abs", "Int64", 1)...
    done (took 1.458338381 seconds)
    (311/341) benchmarking ("perf_simplecopy", "BigInt", 1)...
    done (took 1.51867763 seconds)
    (312/341) benchmarking ("perf_sum", "Float64", 0)...
    done (took 1.198925728 seconds)
    (313/341) benchmarking ("perf_simplecopy", "Int8", 1)...
    done (took 1.084801341 seconds)
    (314/341) benchmarking ("perf_countnothing", "Float32", 0)...
    done (took 1.058575963 seconds)
    (315/341) benchmarking ("map", "identity", "BigInt", 0)...
    done (took 1.583702698 seconds)
    (316/341) benchmarking ("sort", "Union{Nothing, Bool}", 0)...
    done (took 6.007733165 seconds)
    (317/341) benchmarking ("perf_binaryop", "*", "Int64", "(true, true)")...
    done (took 1.691664952 seconds)
    (318/341) benchmarking ("collect", "all", "BigInt", 1)...
    done (took 1.883767534 seconds)
    (319/341) benchmarking ("map", "abs", "Complex{Float64}", 1)...
    done (took 3.372283525 seconds)
    (320/341) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.413650269 seconds)
    (321/341) benchmarking ("map", "*", "BigFloat", "(true, true)")...
    done (took 6.024590056 seconds)
    (322/341) benchmarking ("map", "identity", "Complex{Float64}", 1)...
    done (took 1.977143357 seconds)
    (323/341) benchmarking ("broadcast", "identity", "Complex{Float64}", 1)...
    done (took 1.740358013 seconds)
    (324/341) benchmarking ("collect", "all", "Bool", 1)...
    done (took 1.236126716 seconds)
    (325/341) benchmarking ("map", "identity", "BigInt", 1)...
    done (took 1.811405579 seconds)
    (326/341) benchmarking ("skipmissing", "sum", "Int64", 0)...
    done (took 1.071042023 seconds)
    (327/341) benchmarking ("perf_binaryop", "*", "Float64", "(false, true)")...
    done (took 1.517439422 seconds)
    (328/341) benchmarking ("perf_countnothing", "Int8", 0)...
    done (took 1.058891526 seconds)
    (329/341) benchmarking ("perf_sum4", "BigFloat", 1)...
    done (took 6.044815906 seconds)
    (330/341) benchmarking ("perf_countnothing", "Int8", 1)...
    done (took 1.081146947 seconds)
    (331/341) benchmarking ("perf_sum3", "Int64", 1)...
    done (took 1.219318606 seconds)
    (332/341) benchmarking ("broadcast", "abs", "Float32", 1)...
    done (took 1.337225407 seconds)
    (333/341) benchmarking ("perf_binaryop", "*", "Int8", "(false, false)")...
    done (took 1.470322613 seconds)
    (334/341) benchmarking ("skipmissing", "collect", "Union{Missing, Bool}", 1)...
    done (took 1.866582757 seconds)
    (335/341) benchmarking ("broadcast", "identity", "Int64", 0)...
    done (took 1.190706141 seconds)
    (336/341) benchmarking ("perf_sum3", "Bool", 1)...
    done (took 1.175192369 seconds)
    (337/341) benchmarking ("skipmissing", "sum", "BigInt", 0)...
    done (took 6.06064545 seconds)
    (338/341) benchmarking ("broadcast", "identity", "Float64", 1)...
    done (took 3.894174748 seconds)
    (339/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Bool}", 0)...
    done (took 2.293787875 seconds)
    (340/341) benchmarking ("skipmissing", "collect", "BigFloat", 0)...
    done (took 2.237195924 seconds)
    (341/341) benchmarking ("collect", "filter", "Int64", 0)...
    done (took 2.078268095 seconds)
  done (took 864.876833419 seconds)
done (took 866.062728359 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.2852158 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.318945915 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 2.459342377 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.314557843 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.138505209 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.412153658 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.125902457 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.807268543 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.351043695 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.396011414 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 2.018054922 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.428467258 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 2.366251837 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.897675646 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 2.0426813 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.265453697 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 1.397580974 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.898258129 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.265135698 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.220511355 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.264748833 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.893656062 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.348063061 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.419260264 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 2.479951936 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 2.019612779 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.743283318 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.269594663 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.127764356 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.624463134 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.978225405 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.16188151 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 1.62365511 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.56727676 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.539032213 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.28193992 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.167588418 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.200618335 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 2.484947937 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.161880847 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 1.689483277 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 2.041621806 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 2.292863487 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.999851341 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 2.017595998 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.270082825 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 2.180112579 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.217216406 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.29465143 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.27532821 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 1.408452798 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.109427343 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.627240949 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 2.137688399 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.171721775 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 2.204536389 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 2.600742718 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.244715045 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.269569861 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.226231318 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 1.558069449 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.515846555 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.786312908 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.266794995 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.159210676 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 1.596081706 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.567263812 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.622746054 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 1.541773254 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.229358026 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 1.420404021 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.168113555 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.846143176 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.113989523 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.170830071 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 1.399020217 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.582984525 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 2.122431857 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.19561343 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.997678211 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.220663218 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.303722355 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 2.150184758 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 2.200369082 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.247564564 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.437678689 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.122681539 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 2.237028104 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.208295051 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.280991774 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.158314903 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.178581102 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 2.404181947 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.888230634 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.196015227 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 2.772975385 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.619333253 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.758083762 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 2.286527891 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.129893065 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 1.848414221 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.235560924 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.327452919 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.3378494 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 2.16949434 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.117468322 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 1.463358491 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 2.086109921 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.309654197 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.358578856 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.927701574 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 1.419163098 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.769507289 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.308699844 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.278710742 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 2.743011677 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.960630523 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 1.405982293 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 1.405252587 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.150273424 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 2.515144289 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.881014904 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.312466035 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 2.438245277 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.349382221 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 1.494975312 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.734606936 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.248527721 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.131286076 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.133685977 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.151265148 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.873842672 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 2.416524159 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.514275194 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.29623124 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.150124844 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 2.245003562 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.233683244 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.265270323 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.341551617 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.157847768 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.150606832 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 2.153469097 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.178030459 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.538901836 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.532743819 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.294423413 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.336011163 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.291018086 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.15562256 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.569285351 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 1.549548788 seconds)
done (took 239.982074506 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.613499176 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 5.483361422 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.800659874 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.413085276 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.595173402 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.633163678 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.130771249 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.66532321 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.149705657 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.619889154 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.332890268 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 2.109054827 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 5.400467767 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.290832039 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.588054773 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.362367596 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.150298802 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.557135002 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.732719564 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.63385878 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.033478761 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.353838649 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.260073448 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.65777044 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 5.996731975 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.050880709 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.596804651 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.223566587 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.567747641 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.004189257 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 1.993074474 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.577223559 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.579290698 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 5.002451222 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 2.396407099 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.98951971 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.633072927 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 2.048075719 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.653598059 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.909398717 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.533328189 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 3.865453093 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 1.985577522 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.007861731 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.229256262 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.673942377 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.12042247 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 3.179079775 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.028842981 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 2.050710688 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.565603602 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 2.112338299 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 2.172113938 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.645767645 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.316000716 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 5.206319448 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.733310854 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.745012949 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.574907184 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.639348025 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.569777795 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.629791522 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.621606747 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.297604527 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 1.997950317 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.596455126 seconds)
  done (took 136.884878716 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.477546263 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.42456903 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.70295472 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 2.609197283 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.685004056 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.498457311 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 2.653292482 seconds)
  done (took 14.046486605 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 2.292765446 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.112245234 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.680354582 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.677481378 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.113286529 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.226379797 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.025429117 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.206668074 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.984841528 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.376884374 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.210943915 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.046624485 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.927285924 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 1.980031499 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.656866534 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.190352475 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.161509934 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 2.25667476 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.180692533 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.734239119 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.989539912 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.981960598 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.337261883 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.179641447 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.21705622 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 2.172848344 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.84259206 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.017516636 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.114327224 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.067024573 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.091449281 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.550164234 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.105202778 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 1.964386748 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.105318085 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.156696038 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.105234369 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.129099205 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.231285563 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.023178913 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.121628382 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.087422874 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.289344227 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.090311535 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.062256888 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.336421333 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.100749251 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.122913975 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.058571305 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.086083555 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.34484353 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.083448049 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.10878779 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.936064058 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.445460178 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.981879719 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.17798911 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.078048891 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.086601714 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.084120422 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.71697965 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.652854664 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.060644785 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.654311763 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.017757269 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.085511726 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.057695825 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.062429776 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.135450849 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.078755851 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.65961045 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.129612993 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.261441483 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.297030322 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.039420217 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 2.049393213 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 2.054364929 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.037093662 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 1.924186276 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 2.209551047 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.074424891 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 2.644392316 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 2.230865667 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.934324669 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.100764426 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.151391402 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.221035721 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.129280842 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 3.015114061 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 2.791826376 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.108813129 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.439370097 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.070548917 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.115360757 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.109283206 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.160108946 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.339072922 seconds)
  done (took 143.197172916 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 3.022138747 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 3.152150133 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 4.085411685 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.384937082 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 2.564725949 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 2.771361142 seconds)
  done (took 17.977542787 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 2.682131885 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 2.006892917 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.136182463 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.109397752 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.187110591 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.072596329 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.066313206 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 2.401339805 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 2.369099487 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.088153122 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.117839634 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.117780304 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.106996947 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.236892443 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.067279875 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.092334533 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.067746347 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.162854481 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.112944022 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.226606548 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 1.234356533 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.145816722 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.223985083 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 2.114718662 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 2.234857998 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.087111196 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 2.756592546 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.092830156 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.082035068 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 2.807391849 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.293313838 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.077891915 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.993335872 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 3.72321427 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.924824181 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 2.036893243 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 2.372496781 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.145504574 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.155713934 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.076945899 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.147693169 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.21436953 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.155385097 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.112773494 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 2.536443431 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 3.089401461 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 2.30683406 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.524325426 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.091361807 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.132476406 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.136638784 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.108907124 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.072600032 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.131950677 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 3.781169324 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 2.795947066 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 2.21124649 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.075681927 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.145516016 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 2.044012411 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 2.295257973 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.075625916 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 2.562593373 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 2.144648168 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.984923386 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.120319709 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 2.056139899 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 2.474423061 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.222823023 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.109137818 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.141349879 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.111885821 seconds)
  done (took 117.325555683 seconds)
done (took 430.432770262 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.473155706 seconds)
  done (took 7.47273022 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.024163814 seconds)
  done (took 7.259896562 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 5.997516029 seconds)
  done (took 7.050921344 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.008720815 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.054219517 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.006368675 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.022575301 seconds)
  done (took 25.156971463 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.143276475 seconds)
  done (took 7.14028122 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 5.995783368 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.061003658 seconds)
  done (took 13.144267646 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.220494774 seconds)
  done (took 7.261917069 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.434447226 seconds)
  done (took 7.499232728 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.0137733 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.039975408 seconds)
  done (took 13.142406539 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 5.994647311 seconds)
  done (took 6.995065052 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.110909124 seconds)
  done (took 10.298460419 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.019913003 seconds)
  done (took 7.137289975 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 5.994539384 seconds)
  done (took 7.076248725 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.123925273 seconds)
  done (took 7.177332268 seconds)
done (took 134.824726069 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.006811429 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.033419767 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.0154076 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.013970719 seconds)
  done (took 25.067956365 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.070940792 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.081511908 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.07164637 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.070561196 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.088705972 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.070804365 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.340150877 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.69691107 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.245850258 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.0638409 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.11936299 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.384105408 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.128381429 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.319559128 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.406070204 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.071458297 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.112254371 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.071125362 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.319703841 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.107295595 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.83610439 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.089164634 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.064089115 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.875297571 seconds)
  done (took 30.707677199 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.276050386 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.444106762 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.238507301 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.489701643 seconds)
  done (took 6.443702781 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.423482083 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.088393273 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.101955789 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.207652666 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.220838952 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.102030889 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.040271472 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.036152351 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.025891695 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.085388553 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.217592924 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.121893163 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.220994872 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.016152804 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.254490142 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.015777756 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.032987612 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.090629037 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.232156802 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.227059019 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.28235525 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.43903123 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.087274361 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.099656654 seconds)
  done (took 28.679112431 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.613368313 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 2.075770549 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 2.597712461 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 2.12078088 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.568634665 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.974692413 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 2.506822616 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.741929161 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.319531829 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 2.169930569 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.892703789 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 2.564047512 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.272270955 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 2.163682347 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.583106241 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.21639826 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.218429795 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 2.039619024 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.502417699 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 2.493027328 seconds)
  done (took 38.631794068 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.000603253 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.713120391 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.31787634 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.210101297 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 5.995644372 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.085289577 seconds)
  done (took 26.319460573 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 3.51364007 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.183960316 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.37700702 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.657991765 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.205115517 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.510731295 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.818282316 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.209249695 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.159970611 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.659878151 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 2.447949753 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.272696636 seconds)
  done (took 21.074785425 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 5.99820418 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.02407214 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.002236721 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.179490384 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.909825898 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 2.004979999 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 2.519618255 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.014659108 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 2.117896711 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.240014317 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 2.026134269 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.196135371 seconds)
  done (took 39.23739896 seconds)
  (9/13) benchmarking "index"...
    (1/608) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.108861861 seconds)
    (2/608) benchmarking ("sumrange", "Array{Int64,2}")...
    done (took 5.995871783 seconds)
    (3/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.166872766 seconds)
    (4/608) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.693068403 seconds)
    (5/608) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.389330497 seconds)
    (6/608) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.652912091 seconds)
    (7/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int64,Array{Int64,2}}")...
    done (took 1.093719897 seconds)
    (8/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int32,Array{Int32,2}}")...
    done (took 3.141022366 seconds)
    (9/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.203959057 seconds)
    (10/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.996933837 seconds)
    (11/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.123628241 seconds)
    (12/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float64,Array{Float64,2}}")...
    done (took 5.997315391 seconds)
    (13/608) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.201734953 seconds)
    (14/608) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.908062573 seconds)
    (15/608) benchmarking ("sumrange_view", "Array{Float64,2}")...
    done (took 1.024841386 seconds)
    (16/608) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.747336449 seconds)
    (17/608) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.459794067 seconds)
    (18/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.518011265 seconds)
    (19/608) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.020830486 seconds)
    (20/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.077811356 seconds)
    (21/608) benchmarking ("sumrange", "BitArray{2}")...
    done (took 1.805931013 seconds)
    (22/608) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.478312503 seconds)
    (23/608) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.359710874 seconds)
    (24/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.073910108 seconds)
    (25/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int32,Array{Int32,2}}")...
    done (took 6.012203786 seconds)
    (26/608) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.539333772 seconds)
    (27/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int32,Array{Int32,2}}")...
    done (took 3.927049193 seconds)
    (28/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.072478264 seconds)
    (29/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.121331074 seconds)
    (30/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.197054327 seconds)
    (31/608) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.997594529 seconds)
    (32/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.579137323 seconds)
    (33/608) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.135749637 seconds)
    (34/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.63275214 seconds)
    (35/608) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.493567809 seconds)
    (36/608) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.113250936 seconds)
    (37/608) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.025234344 seconds)
    (38/608) benchmarking ("sumvector", "Base.ReinterpretArray{Float32,2,Int32,Array{Int32,2}}")...
    done (took 1.56518338 seconds)
    (39/608) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.148727266 seconds)
    (40/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.01349303 seconds)
    (41/608) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.924477143 seconds)
    (42/608) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.202176829 seconds)
    (43/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float64,Array{Float64,2}}")...
    done (took 5.235031902 seconds)
    (44/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float64,Array{Float64,2}}")...
    done (took 5.999426678 seconds)
    (45/608) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.149827794 seconds)
    (46/608) benchmarking ("sumeach", "Array{Float64,2}")...
    done (took 4.400740665 seconds)
    (47/608) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.18527386 seconds)
    (48/608) benchmarking ("sumvector", "Array{Int64,2}")...
    done (took 1.707834476 seconds)
    (49/608) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.079604153 seconds)
    (50/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float32,Array{Float32,2}}")...
    done (took 2.731336826 seconds)
    (51/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int64,Array{Int64,2}}")...
    done (took 1.064883356 seconds)
    (52/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.221033468 seconds)
    (53/608) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.068394531 seconds)
    (54/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int64,Array{Int64,2}}")...
    done (took 5.326838964 seconds)
    (55/608) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.562596827 seconds)
    (56/608) benchmarking ("sumrange", "Base.ReinterpretArray{Float32,2,Int32,Array{Int32,2}}")...
    done (took 6.074580852 seconds)
    (57/608) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.821783461 seconds)
    (58/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.270558517 seconds)
    (59/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float64,Array{Float64,2}}")...
    done (took 5.233153118 seconds)
    (60/608) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.049202997 seconds)
    (61/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.995573809 seconds)
    (62/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.426340309 seconds)
    (63/608) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.041609829 seconds)
    (64/608) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.224328406 seconds)
    (65/608) benchmarking ("sumvector", "100000:-1:1")...
    done (took 3.74158194 seconds)
    (66/608) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 6.241522603 seconds)
    (67/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.02668159 seconds)
    (68/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{Float32,2,Int32,Array{Int32,2}}")...
    done (took 5.679058619 seconds)
    (69/608) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.419832863 seconds)
    (70/608) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.049314297 seconds)
    (71/608) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.167755385 seconds)
    (72/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.557081988 seconds)
    (73/608) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.866524894 seconds)
    (74/608) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.86609235 seconds)
    (75/608) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.025351679 seconds)
    (76/608) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.056751407 seconds)
    (77/608) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.669184795 seconds)
    (78/608) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.302034113 seconds)
    (79/608) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.112475966 seconds)
    (80/608) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 4.488771553 seconds)
    (81/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.79709503 seconds)
    (82/608) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.546463273 seconds)
    (83/608) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.695386943 seconds)
    (84/608) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.207583304 seconds)
    (85/608) benchmarking ("mapr_access", "Array{Int64,2}")...
    done (took 2.972482754 seconds)
    (86/608) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.170976965 seconds)
    (87/608) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.169977815 seconds)
    (88/608) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.471978538 seconds)
    (89/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.522091942 seconds)
    (90/608) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.115595155 seconds)
    (91/608) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.894400927 seconds)
    (92/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float64,Array{Float64,2}}")...
    done (took 1.070412319 seconds)
    (93/608) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.616912535 seconds)
    (94/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Float32,2,Int32,Array{Int32,2}}")...
    done (took 6.017178565 seconds)
    (95/608) benchmarking ("sum", "3dsubarray")...
    done (took 1.279335757 seconds)
    (96/608) benchmarking ("sumlogical_view", "Array{Float64,2}")...
    done (took 5.678900595 seconds)
    (97/608) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.911465411 seconds)
    (98/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.848296979 seconds)
    (99/608) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.689993115 seconds)
    (100/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float32,Array{Float32,2}}")...
    done (took 1.944855173 seconds)
    (101/608) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.435239413 seconds)
    (102/608) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.076135053 seconds)
    (103/608) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 4.399450622 seconds)
    (104/608) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.301889222 seconds)
    (105/608) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.605348443 seconds)
    (106/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.393842606 seconds)
    (107/608) benchmarking "5d"...
    done (took 3.992205138 seconds)
    (108/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.404193242 seconds)
    (109/608) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.398540735 seconds)
    (110/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int32,Array{Int32,2}}")...
    done (took 1.586393546 seconds)
    (111/608) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.055498595 seconds)
    (112/608) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.985074436 seconds)
    (113/608) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.137079464 seconds)
    (114/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.11719009 seconds)
    (115/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.026258321 seconds)
    (116/608) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.08562201 seconds)
    (117/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int64,Array{Int64,2}}")...
    done (took 5.996088934 seconds)
    (118/608) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.080251895 seconds)
    (119/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.292137385 seconds)
    (120/608) benchmarking ("sumelt", "BitArray{2}")...
    done (took 5.997405455 seconds)
    (121/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.033588771 seconds)
    (122/608) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 5.647712381 seconds)
    (123/608) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.171963837 seconds)
    (124/608) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.048987855 seconds)
    (125/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.120401499 seconds)
    (126/608) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.474459956 seconds)
    (127/608) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.127159462 seconds)
    (128/608) benchmarking ("sumrange", "Array{Float64,2}")...
    done (took 6.020459893 seconds)
    (129/608) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.555300267 seconds)
    (130/608) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.202968073 seconds)
    (131/608) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.025768466 seconds)
    (132/608) benchmarking ("sumvector_view", "Array{Float64,2}")...
    done (took 1.127437438 seconds)
    (133/608) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 1.806339601 seconds)
    (134/608) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.213478507 seconds)
    (135/608) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.042733726 seconds)
    (136/608) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.122613545 seconds)
    (137/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.995523682 seconds)
    (138/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.077938459 seconds)
    (139/608) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.535940744 seconds)
    (140/608) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.163701509 seconds)
    (141/608) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.285103432 seconds)
    (142/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.118456493 seconds)
    (143/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.556341682 seconds)
    (144/608) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.403509849 seconds)
    (145/608) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.060407645 seconds)
    (146/608) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.100348152 seconds)
    (147/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.717143536 seconds)
    (148/608) benchmarking ("sumcartesian_view", "Array{Float64,2}")...
    done (took 2.453737475 seconds)
    (149/608) benchmarking ("sumelt", "Array{Float64,2}")...
    done (took 4.424716832 seconds)
    (150/608) benchmarking ("sumvector", "BitArray{2}")...
    done (took 1.510078715 seconds)
    (151/608) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.227148044 seconds)
    (152/608) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.810583004 seconds)
    (153/608) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.165763761 seconds)
    (154/608) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.023698003 seconds)
    (155/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.027057709 seconds)
    (156/608) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.295946371 seconds)
    (157/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int32,Array{Int32,2}}")...
    done (took 1.718738261 seconds)
    (158/608) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.262140268 seconds)
    (159/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.781439673 seconds)
    (160/608) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.038441439 seconds)
    (161/608) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.9965479 seconds)
    (162/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.110322723 seconds)
    (163/608) benchmarking "ind2sub"...
    done (took 6.017356115 seconds)
    (164/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.446926196 seconds)
    (165/608) benchmarking ("sumlinear_view", "Array{Float64,2}")...
    done (took 6.065867852 seconds)
    (166/608) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.209708803 seconds)
    (167/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float32,Array{Float32,2}}")...
    done (took 6.031443284 seconds)
    (168/608) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.762285866 seconds)
    (169/608) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.856172609 seconds)
    (170/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float64,Array{Float64,2}}")...
    done (took 6.001521715 seconds)
    (171/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.304572683 seconds)
    (172/608) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.04552469 seconds)
    (173/608) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.903609833 seconds)
    (174/608) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.400082419 seconds)
    (175/608) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.917220728 seconds)
    (176/608) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.901290711 seconds)
    (177/608) benchmarking ("sumcolon", "Array{Float64,2}")...
    done (took 6.028471639 seconds)
    (178/608) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.442460337 seconds)
    (179/608) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.089654183 seconds)
    (180/608) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.23836304 seconds)
    (181/608) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.570716921 seconds)
    (182/608) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.012953206 seconds)
    (183/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.038467356 seconds)
    (184/608) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.07050965 seconds)
    (185/608) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.044741631 seconds)
    (186/608) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.105489616 seconds)
    (187/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int32,Array{Int32,2}}")...
    done (took 1.042563478 seconds)
    (188/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.047522467 seconds)
    (189/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float32,Array{Float32,2}}")...
    done (took 4.055900761 seconds)
    (190/608) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.751411504 seconds)
    (191/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.613306974 seconds)
    (192/608) benchmarking ("sumelt", "1:100000")...
    done (took 1.04796829 seconds)
    (193/608) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.361362653 seconds)
    (194/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int64,Array{Int64,2}}")...
    done (took 5.996641286 seconds)
    (195/608) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.601412556 seconds)
    (196/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.669139354 seconds)
    (197/608) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.07690538 seconds)
    (198/608) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 2.782091075 seconds)
    (199/608) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.879329558 seconds)
    (200/608) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.558431041 seconds)
    (201/608) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.022605091 seconds)
    (202/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.003135548 seconds)
    (203/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.891056538 seconds)
    (204/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float32,Array{Float32,2}}")...
    done (took 3.13212068 seconds)
    (205/608) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.093357072 seconds)
    (206/608) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.03714356 seconds)
    (207/608) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 3.741643744 seconds)
    (208/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int64,Array{Int64,2}}")...
    done (took 6.228807836 seconds)
    (209/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float64,Array{Float64,2}}")...
    done (took 1.13179413 seconds)
    (210/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.039912642 seconds)
    (211/608) benchmarking ("sumelt_boundscheck", "Array{Int64,2}")...
    done (took 3.590028375 seconds)
    (212/608) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.330864184 seconds)
    (213/608) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.222846578 seconds)
    (214/608) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.385735028 seconds)
    (215/608) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.059432155 seconds)
    (216/608) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.388332115 seconds)
    (217/608) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.039313635 seconds)
    (218/608) benchmarking ("sumcolon_view", "Array{Float64,2}")...
    done (took 1.03596734 seconds)
    (219/608) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.522071707 seconds)
    (220/608) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.213059033 seconds)
    (221/608) benchmarking ("sumelt", "Base.ReinterpretArray{Float32,2,Int32,Array{Int32,2}}")...
    done (took 5.996871749 seconds)
    (222/608) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.051165093 seconds)
    (223/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.524561975 seconds)
    (224/608) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.154168764 seconds)
    (225/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float64,Array{Float64,2}}")...
    done (took 6.000819786 seconds)
    (226/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int32,Array{Int32,2}}")...
    done (took 5.865048605 seconds)
    (227/608) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 4.450612745 seconds)
    (228/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float32,Array{Float32,2}}")...
    done (took 1.602624775 seconds)
    (229/608) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 6.126069012 seconds)
    (230/608) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.066522917 seconds)
    (231/608) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 6.085100609 seconds)
    (232/608) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.451099688 seconds)
    (233/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.00651793 seconds)
    (234/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Int32,3,Float64,Array{Float64,3}}")...
    done (took 1.317507086 seconds)
    (235/608) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.034544175 seconds)
    (236/608) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.028634342 seconds)
    (237/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.579726922 seconds)
    (238/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int32,Array{Int32,2}}")...
    done (took 3.008196383 seconds)
    (239/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.523092147 seconds)
    (240/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Float32,2,Int32,Array{Int32,2}}")...
    done (took 4.514398465 seconds)
    (241/608) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.006558813 seconds)
    (242/608) benchmarking ("sumlogical_view", "Array{Int64,2}")...
    done (took 5.656941878 seconds)
    (243/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.825502916 seconds)
    (244/608) benchmarking ("sumeach", "1:100000")...
    done (took 1.152559821 seconds)
    (245/608) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.069530532 seconds)
    (246/608) benchmarking ("sumvector", "1:100000")...
    done (took 3.622757215 seconds)
    (247/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int64,Array{Int64,2}}")...
    done (took 6.233935791 seconds)
    (248/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.09699389 seconds)
    (249/608) benchmarking ("sumlogical", "1:100000")...
    done (took 2.136101887 seconds)
    (250/608) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.342508935 seconds)
    (251/608) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.115339988 seconds)
    (252/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.034552781 seconds)
    (253/608) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.181209997 seconds)
    (254/608) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.039126 seconds)
    (255/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.387274903 seconds)
    (256/608) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.023572274 seconds)
    (257/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Int32,3,Float64,Array{Float64,3}}")...
    done (took 1.267785837 seconds)
    (258/608) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.501124153 seconds)
    (259/608) benchmarking ("sumvector", "Array{Float64,2}")...
    done (took 1.861284175 seconds)
    (260/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Float32,2,Int32,Array{Int32,2}}")...
    done (took 4.588996068 seconds)
    (261/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.029065497 seconds)
    (262/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.639057681 seconds)
    (263/608) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.11130856 seconds)
    (264/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.541095282 seconds)
    (265/608) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.267378827 seconds)
    (266/608) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.559737559 seconds)
    (267/608) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.857901562 seconds)
    (268/608) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.05447368 seconds)
    (269/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.547382806 seconds)
    (270/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float32,Array{Float32,2}}")...
    done (took 4.194037872 seconds)
    (271/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float32,Array{Float32,2}}")...
    done (took 1.073226464 seconds)
    (272/608) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.038112935 seconds)
    (273/608) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.627560179 seconds)
    (274/608) benchmarking "4d"...
    done (took 2.869785576 seconds)
    (275/608) benchmarking ("sumlinear_view", "Array{Int64,2}")...
    done (took 6.215133639 seconds)
    (276/608) benchmarking ("sumlogical", "Base.ReinterpretArray{Float32,2,Int32,Array{Int32,2}}")...
    done (took 5.212479378 seconds)
    (277/608) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.090712661 seconds)
    (278/608) benchmarking ("sumeach", "Base.ReinterpretArray{Int32,3,Float64,Array{Float64,3}}")...
    done (took 1.204452523 seconds)
    (279/608) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.05243153 seconds)
    (280/608) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.076469667 seconds)
    (281/608) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.026468505 seconds)
    (282/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.55938613 seconds)
    (283/608) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.091776474 seconds)
    (284/608) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.658555382 seconds)
    (285/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int32,Array{Int32,2}}")...
    done (took 4.406536576 seconds)
    (286/608) benchmarking ("sumeach", "Array{Int64,2}")...
    done (took 1.981167666 seconds)
    (287/608) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.604030862 seconds)
    (288/608) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.622943975 seconds)
    (289/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float64,Array{Float64,2}}")...
    done (took 6.126544869 seconds)
    (290/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int32,Array{Int32,2}}")...
    done (took 4.119186845 seconds)
    (291/608) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.633588518 seconds)
    (292/608) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.937603064 seconds)
    (293/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.877517971 seconds)
    (294/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.191183852 seconds)
    (295/608) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.290260027 seconds)
    (296/608) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.313164281 seconds)
    (297/608) benchmarking ("sumvector_view", "Array{Int64,2}")...
    done (took 1.116864966 seconds)
    (298/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float32,Array{Float32,2}}")...
    done (took 6.029344957 seconds)
    (299/608) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.632081305 seconds)
    (300/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.138283744 seconds)
    (301/608) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.418154812 seconds)
    (302/608) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.054990646 seconds)
    (303/608) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.093001068 seconds)
    (304/608) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 1.581829811 seconds)
    (305/608) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.044393859 seconds)
    (306/608) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.299201873 seconds)
    (307/608) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.557504704 seconds)
    (308/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Int32,3,Float64,Array{Float64,3}}")...
    done (took 1.271865302 seconds)
    (309/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float32,Array{Float32,2}}")...
    done (took 2.817745526 seconds)
    (310/608) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 5.636919235 seconds)
    (311/608) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.308169045 seconds)
    (312/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.220926407 seconds)
    (313/608) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.060165146 seconds)
    (314/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.996762367 seconds)
    (315/608) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.443263882 seconds)
    (316/608) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.468807416 seconds)
    (317/608) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.104180207 seconds)
    (318/608) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.837460083 seconds)
    (319/608) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.401889191 seconds)
    (320/608) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.115598532 seconds)
    (321/608) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.657965737 seconds)
    (322/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int64,Array{Int64,2}}")...
    done (took 6.289459494 seconds)
    (323/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int32,Array{Int32,2}}")...
    done (took 6.013869675 seconds)
    (324/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.57568211 seconds)
    (325/608) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.000755258 seconds)
    (326/608) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.537345181 seconds)
    (327/608) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.10227261 seconds)
    (328/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.210037039 seconds)
    (329/608) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.292335544 seconds)
    (330/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.073426026 seconds)
    (331/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.115099624 seconds)
    (332/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float64,Array{Float64,2}}")...
    done (took 4.749439358 seconds)
    (333/608) benchmarking ("sumelt_boundscheck", "Array{Float64,2}")...
    done (took 4.422303185 seconds)
    (334/608) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.203354547 seconds)
    (335/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.007783889 seconds)
    (336/608) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.354527471 seconds)
    (337/608) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.612244355 seconds)
    (338/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.113351404 seconds)
    (339/608) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.136587977 seconds)
    (340/608) benchmarking ("sumcartesian_view", "Array{Int64,2}")...
    done (took 1.968033589 seconds)
    (341/608) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.407180927 seconds)
    (342/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float32,Array{Float32,2}}")...
    done (took 1.090720373 seconds)
    (343/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Int32,3,Float64,Array{Float64,3}}")...
    done (took 1.140437202 seconds)
    (344/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.069442306 seconds)
    (345/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float64,Array{Float64,2}}")...
    done (took 5.996930405 seconds)
    (346/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.149578093 seconds)
    (347/608) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.037785976 seconds)
    (348/608) benchmarking ("sumcolon", "Base.ReinterpretArray{Float32,2,Int32,Array{Int32,2}}")...
    done (took 5.996821847 seconds)
    (349/608) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.681693401 seconds)
    (350/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int64,Array{Int64,2}}")...
    done (took 6.025073582 seconds)
    (351/608) benchmarking ("sumcolon", "1:100000")...
    done (took 2.388843609 seconds)
    (352/608) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.568966996 seconds)
    (353/608) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.02837995 seconds)
    (354/608) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.276510387 seconds)
    (355/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.029220411 seconds)
    (356/608) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.49498646 seconds)
    (357/608) benchmarking "3d"...
    done (took 2.181850892 seconds)
    (358/608) benchmarking ("sum", "3darray")...
    done (took 3.112016846 seconds)
    (359/608) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.017745989 seconds)
    (360/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Int32,3,Float64,Array{Float64,3}}")...
    done (took 1.194750652 seconds)
    (361/608) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.401333967 seconds)
    (362/608) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.084285988 seconds)
    (363/608) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.159660269 seconds)
    (364/608) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.603820688 seconds)
    (365/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float64,Array{Float64,2}}")...
    done (took 1.746006571 seconds)
    (366/608) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 1.85172062 seconds)
    (367/608) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.025205996 seconds)
    (368/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.425182554 seconds)
    (369/608) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.406950427 seconds)
    (370/608) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 6.003961905 seconds)
    (371/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Int32,3,Float64,Array{Float64,3}}")...
    done (took 1.162574155 seconds)
    (372/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.005245984 seconds)
    (373/608) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.897384784 seconds)
    (374/608) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.375749109 seconds)
    (375/608) benchmarking ("sumlogical", "Array{Int64,2}")...
    done (took 6.083759765 seconds)
    (376/608) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.141209956 seconds)
    (377/608) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.043706214 seconds)
    (378/608) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.269297779 seconds)
    (379/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Float32,2,Int32,Array{Int32,2}}")...
    done (took 5.723170486 seconds)
    (380/608) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.766015528 seconds)
    (381/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.531601906 seconds)
    (382/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.54153534 seconds)
    (383/608) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.161793316 seconds)
    (384/608) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.314206807 seconds)
    (385/608) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.019283547 seconds)
    (386/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Float32,2,Int32,Array{Int32,2}}")...
    done (took 5.234135888 seconds)
    (387/608) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.051375629 seconds)
    (388/608) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.085336663 seconds)
    (389/608) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.672259312 seconds)
    (390/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float64,Array{Float64,2}}")...
    done (took 6.251885702 seconds)
    (391/608) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 5.333333253 seconds)
    (392/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.825592768 seconds)
    (393/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.342450121 seconds)
    (394/608) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.596626452 seconds)
    (395/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.360528163 seconds)
    (396/608) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.682957757 seconds)
    (397/608) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.689421132 seconds)
    (398/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.01959613 seconds)
    (399/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.247139366 seconds)
    (400/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.783354625 seconds)
    (401/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.755621188 seconds)
    (402/608) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.331805444 seconds)
    (403/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float32,Array{Float32,2}}")...
    done (took 5.996437785 seconds)
    (404/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{Float32,2,Int32,Array{Int32,2}}")...
    done (took 1.062123525 seconds)
    (405/608) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 5.997123397 seconds)
    (406/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Float32,2,Int32,Array{Int32,2}}")...
    done (took 6.052932846 seconds)
    (407/608) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.043814681 seconds)
    (408/608) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.672100907 seconds)
    (409/608) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.143879519 seconds)
    (410/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.774660558 seconds)
    (411/608) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.087517141 seconds)
    (412/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.798475732 seconds)
    (413/608) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.04987047 seconds)
    (414/608) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.096466816 seconds)
    (415/608) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.053506301 seconds)
    (416/608) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.028495194 seconds)
    (417/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.029063675 seconds)
    (418/608) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.031995413 seconds)
    (419/608) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.733478407 seconds)
    (420/608) benchmarking ("sumelt", "Array{Int64,2}")...
    done (took 2.231299773 seconds)
    (421/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.998862112 seconds)
    (422/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float64,Array{Float64,2}}")...
    done (took 5.999994194 seconds)
    (423/608) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.08270073 seconds)
    (424/608) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.115592134 seconds)
    (425/608) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.310047326 seconds)
    (426/608) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.21357431 seconds)
    (427/608) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.069357488 seconds)
    (428/608) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.516343201 seconds)
    (429/608) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.729305648 seconds)
    (430/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.689940872 seconds)
    (431/608) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.149679285 seconds)
    (432/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.040901526 seconds)
    (433/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int64,Array{Int64,2}}")...
    done (took 5.740399558 seconds)
    (434/608) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.274519277 seconds)
    (435/608) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.403755003 seconds)
    (436/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int64,Array{Int64,2}}")...
    done (took 6.046315159 seconds)
    (437/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.188083532 seconds)
    (438/608) benchmarking ("sumlogical", "Array{Float64,2}")...
    done (took 6.001556507 seconds)
    (439/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int64,Array{Int64,2}}")...
    done (took 6.26025021 seconds)
    (440/608) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.33773788 seconds)
    (441/608) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.954287975 seconds)
    (442/608) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.911619103 seconds)
    (443/608) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.583845124 seconds)
    (444/608) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.061578648 seconds)
    (445/608) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.691996333 seconds)
    (446/608) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.330779464 seconds)
    (447/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int64,Array{Int64,2}}")...
    done (took 6.028026096 seconds)
    (448/608) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.208638285 seconds)
    (449/608) benchmarking ("sumeach_view", "Array{Float64,2}")...
    done (took 6.093803857 seconds)
    (450/608) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.907278257 seconds)
    (451/608) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.00211725 seconds)
    (452/608) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.016777194 seconds)
    (453/608) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.637004091 seconds)
    (454/608) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 4.871144413 seconds)
    (455/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float32,Array{Float32,2}}")...
    done (took 3.266164536 seconds)
    (456/608) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.072076446 seconds)
    (457/608) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.199299194 seconds)
    (458/608) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.403860037 seconds)
    (459/608) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.495878641 seconds)
    (460/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.908486866 seconds)
    (461/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int64,Array{Int64,2}}")...
    done (took 6.016788171 seconds)
    (462/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.099150418 seconds)
    (463/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.126786732 seconds)
    (464/608) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.892020154 seconds)
    (465/608) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.938607379 seconds)
    (466/608) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.998726444 seconds)
    (467/608) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.024471356 seconds)
    (468/608) benchmarking ("sumcolon_view", "Array{Int64,2}")...
    done (took 1.048440537 seconds)
    (469/608) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.043099652 seconds)
    (470/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float32,Array{Float32,2}}")...
    done (took 1.096194473 seconds)
    (471/608) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.517435292 seconds)
    (472/608) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 2.626472189 seconds)
    (473/608) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.044426433 seconds)
    (474/608) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.575421114 seconds)
    (475/608) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.06777185 seconds)
    (476/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int32,Array{Int32,2}}")...
    done (took 5.9970881 seconds)
    (477/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.108961002 seconds)
    (478/608) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.223104732 seconds)
    (479/608) benchmarking "sub2ind"...
    done (took 6.443171855 seconds)
    (480/608) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.039765785 seconds)
    (481/608) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.667652452 seconds)
    (482/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.647939266 seconds)
    (483/608) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.991846424 seconds)
    (484/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.02483409 seconds)
    (485/608) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.522690884 seconds)
    (486/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.638262284 seconds)
    (487/608) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.649029272 seconds)
    (488/608) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.100685395 seconds)
    (489/608) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.049084856 seconds)
    (490/608) benchmarking ("mapr_access", "Array{Float64,2}")...
    done (took 2.883027622 seconds)
    (491/608) benchmarking "6d"...
    done (took 3.518692246 seconds)
    (492/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int64,Array{Int64,2}}")...
    done (took 1.651856271 seconds)
    (493/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.348683845 seconds)
    (494/608) benchmarking ("sumrange", "1:100000")...
    done (took 2.438116106 seconds)
    (495/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int64,Array{Int64,2}}")...
    done (took 1.087547378 seconds)
    (496/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.813816031 seconds)
    (497/608) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.031573784 seconds)
    (498/608) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.276110587 seconds)
    (499/608) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 5.998616536 seconds)
    (500/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.055001135 seconds)
    (501/608) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.539363412 seconds)
    (502/608) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.639308284 seconds)
    (503/608) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.001896337 seconds)
    (504/608) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.230662684 seconds)
    (505/608) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.051908071 seconds)
    (506/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float64,Array{Float64,2}}")...
    done (took 1.062960116 seconds)
    (507/608) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.04305312 seconds)
    (508/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.28496147 seconds)
    (509/608) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.367484785 seconds)
    (510/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float64,Array{Float64,2}}")...
    done (took 6.060614956 seconds)
    (511/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.343868137 seconds)
    (512/608) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.063414379 seconds)
    (513/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.000322081 seconds)
    (514/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.60302165 seconds)
    (515/608) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.583762601 seconds)
    (516/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{Float32,2,Int32,Array{Int32,2}}")...
    done (took 1.191110591 seconds)
    (517/608) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.040044677 seconds)
    (518/608) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.430434629 seconds)
    (519/608) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.205851482 seconds)
    (520/608) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.077580643 seconds)
    (521/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.274445333 seconds)
    (522/608) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.046860429 seconds)
    (523/608) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.707146807 seconds)
    (524/608) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 5.99745053 seconds)
    (525/608) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.468161136 seconds)
    (526/608) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.830216772 seconds)
    (527/608) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.071627619 seconds)
    (528/608) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.012293127 seconds)
    (529/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.540687852 seconds)
    (530/608) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.642413861 seconds)
    (531/608) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 1.931541951 seconds)
    (532/608) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.36666399 seconds)
    (533/608) benchmarking ("sumelt", "Base.ReinterpretArray{Int32,3,Float64,Array{Float64,3}}")...
    done (took 1.230814827 seconds)
    (534/608) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.306543973 seconds)
    (535/608) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.03246411 seconds)
    (536/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int32,Array{Int32,2}}")...
    done (took 1.718804017 seconds)
    (537/608) benchmarking ("sumrange_view", "Array{Int64,2}")...
    done (took 1.027373721 seconds)
    (538/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.022666016 seconds)
    (539/608) benchmarking ("sumcolon", "Array{Int64,2}")...
    done (took 6.13724596 seconds)
    (540/608) benchmarking ("sumcartesian", "Array{Int64,2}")...
    done (took 4.829479598 seconds)
    (541/608) benchmarking ("mapr_access", "Base.ReinterpretArray{Float32,2,Int32,Array{Int32,2}}")...
    done (took 6.034749726 seconds)
    (542/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float32,Array{Float32,2}}")...
    done (took 2.72957085 seconds)
    (543/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.999749068 seconds)
    (544/608) benchmarking ("sumlinear", "1:100000")...
    done (took 1.068861107 seconds)
    (545/608) benchmarking ("sumvector_view", "1:100000")...
    done (took 2.462772707 seconds)
    (546/608) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.299696935 seconds)
    (547/608) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.738392077 seconds)
    (548/608) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.030266683 seconds)
    (549/608) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.891596985 seconds)
    (550/608) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.046980498 seconds)
    (551/608) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 1.401677494 seconds)
    (552/608) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.568013887 seconds)
    (553/608) benchmarking ("sumeach_view", "Array{Int64,2}")...
    done (took 6.126780242 seconds)
    (554/608) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.386222845 seconds)
    (555/608) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 4.389554768 seconds)
    (556/608) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.277858648 seconds)
    (557/608) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.020729136 seconds)
    (558/608) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.4300247 seconds)
    (559/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.004328219 seconds)
    (560/608) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.890267778 seconds)
    (561/608) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.082765269 seconds)
    (562/608) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.031659985 seconds)
    (563/608) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.998665741 seconds)
    (564/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int64,Array{Int64,2}}")...
    done (took 6.044917951 seconds)
    (565/608) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.18922148 seconds)
    (566/608) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 6.034938936 seconds)
    (567/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.206583122 seconds)
    (568/608) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 3.78609978 seconds)
    (569/608) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.26734686 seconds)
    (570/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float64,Array{Float64,2}}")...
    done (took 5.977821906 seconds)
    (571/608) benchmarking ("sumlinear", "Array{Float64,2}")...
    done (took 4.713770721 seconds)
    (572/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float32,Array{Float32,2}}")...
    done (took 3.868632924 seconds)
    (573/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int32,Array{Int32,2}}")...
    done (took 1.111604592 seconds)
    (574/608) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 5.668607999 seconds)
    (575/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.244714057 seconds)
    (576/608) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.067509027 seconds)
    (577/608) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.053333361 seconds)
    (578/608) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.026629005 seconds)
    (579/608) benchmarking "2d"...
    done (took 1.998526072 seconds)
    (580/608) benchmarking ("sumeach", "Base.ReinterpretArray{Float32,2,Int32,Array{Int32,2}}")...
    done (took 4.436925853 seconds)
    (581/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float32,Array{Float32,2}}")...
    done (took 6.025856796 seconds)
    (582/608) benchmarking "7d"...
    done (took 1.580961786 seconds)
    (583/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.547506909 seconds)
    (584/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.023165347 seconds)
    (585/608) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.115870051 seconds)
    (586/608) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.129880768 seconds)
    (587/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int32,Array{Int32,2}}")...
    done (took 3.815450699 seconds)
    (588/608) benchmarking ("sumlinear", "Array{Int64,2}")...
    done (took 1.974277403 seconds)
    (589/608) benchmarking ("sumcartesian", "Array{Float64,2}")...
    done (took 4.594306891 seconds)
    (590/608) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.002553377 seconds)
    (591/608) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.407046611 seconds)
    (592/608) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.048969429 seconds)
    (593/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.868955811 seconds)
    (594/608) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.483495898 seconds)
    (595/608) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.067443907 seconds)
    (596/608) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.159335906 seconds)
    (597/608) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.165366273 seconds)
    (598/608) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.269701768 seconds)
    (599/608) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.198701352 seconds)
    (600/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.748502144 seconds)
    (601/608) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.310510643 seconds)
    (602/608) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.997988056 seconds)
    (603/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int32,Array{Int32,2}}")...
    done (took 1.651912639 seconds)
    (604/608) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.170580527 seconds)
    (605/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int32,Array{Int32,2}}")...
    done (took 1.060047554 seconds)
    (606/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{Float32,2,Int32,Array{Int32,2}}")...
    done (took 1.048432583 seconds)
    (607/608) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.585945078 seconds)
    (608/608) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.510512106 seconds)
  done (took 2010.28141079 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.000103595 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.032070952 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.137248372 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.155103399 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.121793076 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.124946695 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.114642646 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.147923986 seconds)
  done (took 49.844534725 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 5.998075623 seconds)
    (2/17) benchmarking "4467"...
    done (took 6.026352485 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 6.185080475 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.302660499 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 5.729850136 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.169935541 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.075244827 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.005147719 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 6.042993065 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 5.962717998 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.19454079 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.019235277 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.177315097 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 5.963097403 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.306942979 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.078016879 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 6.099165547 seconds)
  done (took 94.36680829 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 5.997889234 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.356005214 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.079492865 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.00258695 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 6.205464585 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.163830772 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.824406514 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.299027944 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.067682353 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.435547546 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 6.464050039 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.037781569 seconds)
  done (took 76.171526047 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 2.634756483 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 2.793607036 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 2.747398374 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 2.765292388 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 2.875958246 seconds)
  done (took 14.819081431 seconds)
done (took 2462.70396186 seconds)
(18/20) benchmarking "misc"...
  (1/15) benchmarking "fastmath many args"...
  done (took 1.260585046 seconds)
  (2/15) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 4.155838507 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.060947274 seconds)
  done (took 7.25174294 seconds)
  (3/15) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.134844178 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.160898791 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.253944126 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.090780595 seconds)
  done (took 5.664395352 seconds)
  (4/15) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 1.422488786 seconds)
    (2/2) benchmarking "Float64"...
    done (took 1.567867665 seconds)
  done (took 3.988470856 seconds)
  (5/15) benchmarking "perf highdim generator"...
  done (took 1.576131259 seconds)
  (6/15) benchmarking "18129"...
  done (took 6.016436872 seconds)
  (7/15) benchmarking "20517"...
  done (took 1.65071627 seconds)
  (8/15) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 5.997789246 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.007815042 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.006559862 seconds)
  done (took 19.028930846 seconds)
  (9/15) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.044184043 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.066536755 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.048109662 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.041961987 seconds)
  done (took 5.220755525 seconds)
  (10/15) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.003290729 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.265069704 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.063009558 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 2.139457152 seconds)
  done (took 18.488781568 seconds)
  (11/15) benchmarking "foldl"...
    (1/3) benchmarking "foldl(+, filter(...))"...
    done (took 1.299739949 seconds)
    (2/3) benchmarking "foldl(+, filter(...); init = 0.0)"...
    done (took 1.282972531 seconds)
    (3/3) benchmarking "foldl(+, flatten(filter(...)))"...
    done (took 1.789996061 seconds)
  done (took 5.384795737 seconds)
  (12/15) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.966064759 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.436126388 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.94351865 seconds)
  done (took 6.343258026 seconds)
  (13/15) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.503195037 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.075834268 seconds)
  done (took 5.590134796 seconds)
  (14/15) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.212336243 seconds)
  done (took 2.214561782 seconds)
  (15/15) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.36089395 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.553701523 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 1.969480814 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 1.993704769 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.151570112 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 1.723252271 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 1.510451706 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 1.280019203 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 1.746844834 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 1.656780742 seconds)
  done (took 17.952264456 seconds)
done (took 108.747931647 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.984116764 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.122812301 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.109566146 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.417557972 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.462938925 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.05430859 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.707910679 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.249534019 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.548028847 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.302343525 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.762754765 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.15373178 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.041241993 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.224996014 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.116908327 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.163494411 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.05159565 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.22462346 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.523663517 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 3.763737078 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.763258694 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.398350657 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.573851531 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.486332082 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.045414657 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.090379048 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.255040054 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.217002035 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 3.711066449 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.344235978 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.049422682 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 3.962240438 seconds)
  done (took 151.897202577 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.99726769 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.013456756 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.030543309 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.040674727 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.087631925 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.0701028 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.048429745 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.035433985 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.015980014 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.016374046 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.042828088 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.028826621 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.042275397 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.063966258 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.104365812 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.066594253 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.032742026 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.015519242 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.010683888 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.010751953 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.028676511 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.041537822 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.063484443 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.057659909 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.067826802 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.031348601 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.031491567 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.011329873 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.013808516 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.019120551 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.040886642 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.038702433 seconds)
  done (took 194.236463424 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.004142483 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.066175515 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.04663944 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.017952608 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.011280519 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.014472041 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.027719671 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.040671614 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.063251762 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.101831428 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.048984504 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.030416189 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.020459477 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.008900154 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.011761256 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.022897334 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.057956011 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.061963142 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.055575906 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.049921733 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.033064935 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.00864139 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.012433817 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.011103169 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.02129382 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.058829479 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.078066381 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.05523936 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.049233319 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.03075659 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.026665199 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.009950413 seconds)
  done (took 194.246912007 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.357128053 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.082585908 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.837796895 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.452609333 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.873367201 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.045951818 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.638079287 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.378679603 seconds)
  done (took 14.678443637 seconds)
done (took 556.064089987 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.132472721 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.927549018 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.336078119 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.387625875 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 2.886015582 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.426518237 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.336816002 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.541285648 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 1.942699169 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.48317948 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 1.852880528 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.295210178 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 1.973191247 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.37508715 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.236544097 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.598733702 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 1.688619706 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 1.814089622 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.285295942 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.862343441 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.328030078 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.262823833 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.574072876 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 1.997919137 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 1.997772809 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.202944135 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.404248455 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 1.713966753 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.358572279 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.268274328 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.479004414 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 2.727602192 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.263639163 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.220796939 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.590855868 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.433369635 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 2.660188853 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 2.745161065 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.227313847 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 1.883778979 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.648248381 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 1.845817681 seconds)
  done (took 80.239459632 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.051079905 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.075200167 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.212392626 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.140926854 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.856349439 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.158419614 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.261610756 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.261682853 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.151692303 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.246833961 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.289569512 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.905578871 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.29837567 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.811318298 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.274965728 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.288217771 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.114448416 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.807233847 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.293943469 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.264828572 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.112130836 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.20607925 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.0971515 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.240565035 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.076423187 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.113616498 seconds)
  done (took 34.660438508 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.138084911 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.25338218 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.395334389 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.576260875 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.362059551 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 2.373503233 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.40730425 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.353430032 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 3.307236251 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 2.856700107 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.140044416 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 3.915691574 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.379936015 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.454023625 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 5.168206762 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.417783687 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.289376103 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.252587117 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.227380408 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 3.686963059 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.687441931 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.281775635 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.405700678 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 3.68604104 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.913854036 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 3.600549897 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 2.841120837 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.808268863 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 4.988435272 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.289497649 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.334128052 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.216928059 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.564492268 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.369190221 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.297061011 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 2.617818993 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.099912032 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.153667537 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 2.210140182 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.249974986 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.305864431 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 3.468513971 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.580329067 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.686503323 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 3.569637967 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.169701546 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.605968567 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.146616567 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.309168854 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 2.988638643 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.434778336 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 4.302116392 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 2.816352409 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.356641658 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.313383563 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.802185219 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.324970524 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.444127096 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 2.445939317 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 3.30858814 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.19578503 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.525882698 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.232083014 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 3.507056717 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.248018141 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.416926572 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 3.676877707 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 3.725780338 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.606775722 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 4.926083147 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 1.738299752 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.149010222 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.088505812 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.129099196 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.219063938 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.655145986 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 3.667284158 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.386787026 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.5501047 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.383757032 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 2.777802699 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.605737653 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.559262104 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 2.40858105 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 4.108520639 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 3.953016864 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.192193176 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.422848607 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.221396518 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.638530494 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.711368862 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.503978223 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.956573878 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 3.650710282 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 3.83407242 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.647136883 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.055768305 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.060757747 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.360465311 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.707884929 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.148281866 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 3.769591875 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 1.904700332 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 3.87442201 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.85372826 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 2.281900848 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.479742978 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 3.559638297 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.443293976 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.040712405 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 3.699368659 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 3.611303209 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.956278109 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 2.581428464 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.062738998 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.70127454 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.151995873 seconds)
  done (took 247.480069814 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.001180224 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.010742301 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.003707155 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.052683355 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.06032169 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.788674886 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.170505076 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.050423893 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.755440688 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.131941376 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.001302171 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.00762338 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.002740753 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.054725961 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 4.090408668 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 4.066146721 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 4.157056613 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.039529181 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.042835276 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.022289186 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.933840019 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.009046078 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.001069163 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.013925295 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.051086359 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.059737614 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.068204622 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.090932157 seconds)
  done (took 153.74721237 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.083574332 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.56410347 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.121758235 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.175079136 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.120774673 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.086866324 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.724159421 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.236705783 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.15437548 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.097797555 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.093755572 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.46553597 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.365024371 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.950970755 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.236629491 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.27983613 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.002604104 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.291939547 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.117061751 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.082366198 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.344797724 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.48859006 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.460674221 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.551743575 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.295811833 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.475350647 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.190582556 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.158414742 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.292526401 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.682508491 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.146991976 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.554429999 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.327313417 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.092078536 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.702388279 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.598810235 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.802378637 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.818540244 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.34471822 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.039116707 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.044086417 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.3691223 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.61888485 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.138582987 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.080472975 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.924909724 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.116685986 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.403534739 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.114359129 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.038749038 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.201684183 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.199591718 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.444493137 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.409930611 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.343497904 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.280648387 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.711981422 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 6.065325093 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.145185827 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.536156654 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.080456399 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.69645141 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 2.703305534 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.19090935 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.09023172 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.966115034 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.255257493 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.738609319 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.868530793 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.162943313 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.582199248 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.429668748 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.060859948 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.403935377 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.282118026 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.729608618 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.867799038 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.216196202 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.259951169 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.146277897 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.401809911 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.077114371 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.688309843 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.270904469 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.05065374 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.803786057 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.6298481 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.061531165 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.147092814 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.220084837 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.28408002 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.348722644 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.769332269 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.252400632 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.142648343 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.497722524 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.444561336 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.102866 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.262752798 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.07557515 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.235244136 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.351106036 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.096781439 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.523521938 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.66336568 seconds)
  done (took 154.116923211 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 1.937753067 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.130946709 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.23033914 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.097524255 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.503669768 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.330614723 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.44803381 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.124669954 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.554092101 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 1.485576348 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.299267671 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.131821856 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 3.614474238 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.92507795 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.105348528 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.394352732 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.120603905 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.14747563 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.418533239 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.715853335 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 2.675663771 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 1.902970052 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.502678832 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 1.637540555 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.531063985 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 1.653732282 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 1.923709561 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.368147906 seconds)
  done (took 48.92521822 seconds)
done (took 720.169561012 seconds)
SAVING RESULT...
DONE!
