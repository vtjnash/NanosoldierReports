cset: moving following pidspec: 21196
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.973082146 seconds)
loading group "string"... done (took 0.787193715 seconds)
loading group "linalg"... done (took 9.63119001 seconds)
loading group "parallel"... done (took 0.232273037 seconds)
loading group "find"... done (took 3.534794242 seconds)
loading group "tuple"... done (took 2.346012215 seconds)
loading group "dates"... done (took 1.84408777 seconds)
loading group "micro"... done (took 0.220068938 seconds)
loading group "io"... done (took 1.594556982 seconds)
loading group "scalar"... done (took 61.096734102 seconds)
loading group "sparse"... done (took 18.335755508 seconds)
loading group "broadcast"... done (took 1.499642608 seconds)
loading group "union"... done (took 16.849224601 seconds)
loading group "simd"... done (took 8.004114622 seconds)
loading group "random"... done (took 14.310885353 seconds)
loading group "problem"... done (took 2.233871663 seconds)
loading group "array"... done (took 42.784252144 seconds)
loading group "misc"... done (took 2.473407121 seconds)
loading group "sort"... done (took 5.755502273 seconds)
loading group "collection"... done (took 26.007399421 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.625269374 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.148555138 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.154271096 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.13668686 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.187364541 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.148053004 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.148057979 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.101997127 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.603197284 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.154343389 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.143557947 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.501631304 seconds)
done (took 6.604740661 seconds)
(2/20) benchmarking "string"...
  (1/7) benchmarking "join"...
  done (took 0.341664965 seconds)
  (2/7) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.099197088 seconds)
    (2/2) benchmarking "String"...
    done (took 0.089785972 seconds)
  done (took 1.384218641 seconds)
  (3/7) benchmarking "==(::SubString, ::String)"...
    (1/3) benchmarking "equal"...
    done (took 0.096150652 seconds)
    (2/3) benchmarking "different length"...
    done (took 0.081704145 seconds)
    (3/3) benchmarking "different"...
    done (took 0.082755837 seconds)
  done (took 1.379879049 seconds)
  (4/7) benchmarking "replace"...
  done (took 0.072687993 seconds)
  (5/7) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.146021515 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.076416184 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.074840916 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.075900054 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.075481556 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.074163758 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.074215485 seconds)
  done (took 1.717709595 seconds)
  (6/7) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.08263309 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.076907878 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.073770996 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.075369607 seconds)
  done (took 1.467066986 seconds)
  (7/7) benchmarking "==(::AbstractString, ::AbstractString)"...
    (1/4) benchmarking "identical"...
    done (took 0.075106905 seconds)
    (2/4) benchmarking "equal"...
    done (took 0.07248908 seconds)
    (3/4) benchmarking "different length"...
    done (took 0.072667195 seconds)
    (4/4) benchmarking "different"...
    done (took 0.071944981 seconds)
  done (took 1.412484042 seconds)
done (took 8.930592026 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 1.039162807 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.259657236 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.330932368 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.477172958 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.155571894 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.220758753 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 1.128834113 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 3.617885891 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.250510733 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.111308681 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.131741624 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.396332375 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.158710684 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 1.14016698 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.096297542 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.113997753 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.224405674 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 3.831854806 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.088806075 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.11586815 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.125325501 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.177429583 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.101260483 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.093029833 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.241772175 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.084588694 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.169436083 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.109114196 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.079859251 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.254482117 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.254306898 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 1.173235819 seconds)
  done (took 17.957460607 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.116479862 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.110072694 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.078714881 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.174877264 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.115285768 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.080354703 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.086935895 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.077565595 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.100890942 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.167406391 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.105204323 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.12555333 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.075400421 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.078052249 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.093284549 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.272561247 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.092720028 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.092482939 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.077174339 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.090144814 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.136811991 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.090569978 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.089966465 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.089668309 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.172750968 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.265619776 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.136397416 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.157092288 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.079808103 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.091468121 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.159785592 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.17278392 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.076849765 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.075484151 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.152616853 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.12346115 seconds)
  done (took 5.479337848 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.28676065 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/118) benchmarking ("cumsum!", "Int32", 1024)...
    done (took 0.140033987 seconds)
    (2/118) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.178064638 seconds)
    (3/118) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.101076976 seconds)
    (4/118) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.161973526 seconds)
    (5/118) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.074259924 seconds)
    (6/118) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.132425166 seconds)
    (7/118) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.079171692 seconds)
    (8/118) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.096566653 seconds)
    (9/118) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.282322695 seconds)
    (10/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.863894291 seconds)
    (11/118) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.715999891 seconds)
    (12/118) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.155926015 seconds)
    (13/118) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.126262601 seconds)
    (14/118) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.081540074 seconds)
    (15/118) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.081155081 seconds)
    (16/118) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.076649514 seconds)
    (17/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.711359166 seconds)
    (18/118) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.114901087 seconds)
    (19/118) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.130503383 seconds)
    (20/118) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.095204936 seconds)
    (21/118) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.086209755 seconds)
    (22/118) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.079185553 seconds)
    (23/118) benchmarking ("cumsum!", "Float64", 1024)...
    done (took 0.076533341 seconds)
    (24/118) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.081583147 seconds)
    (25/118) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.073766533 seconds)
    (26/118) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.07969244 seconds)
    (27/118) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.101687287 seconds)
    (28/118) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.625512545 seconds)
    (29/118) benchmarking ("3-arg mul!", 3)...
    done (took 0.110047718 seconds)
    (30/118) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.148283498 seconds)
    (31/118) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.079998298 seconds)
    (32/118) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.115566701 seconds)
    (33/118) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.196921669 seconds)
    (34/118) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.079973561 seconds)
    (35/118) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.139125077 seconds)
    (36/118) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.257012734 seconds)
    (37/118) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.114097861 seconds)
    (38/118) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.168481014 seconds)
    (39/118) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.079261063 seconds)
    (40/118) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.075952925 seconds)
    (41/118) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.192716372 seconds)
    (42/118) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.276414224 seconds)
    (43/118) benchmarking ("5-arg mul!", 2)...
    done (took 0.641262514 seconds)
    (44/118) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.076149782 seconds)
    (45/118) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.099208653 seconds)
    (46/118) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.148247658 seconds)
    (47/118) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.138751208 seconds)
    (48/118) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.07405939 seconds)
    (49/118) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.073596601 seconds)
    (50/118) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.209448143 seconds)
    (51/118) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.077584716 seconds)
    (52/118) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.098447481 seconds)
    (53/118) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 3.088894825 seconds)
    (54/118) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.238469922 seconds)
    (55/118) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.077424221 seconds)
    (56/118) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.342364226 seconds)
    (57/118) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.113661508 seconds)
    (58/118) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.082209508 seconds)
    (59/118) benchmarking ("cumsum!", "Int32", 256)...
    done (took 0.075142825 seconds)
    (60/118) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.073299825 seconds)
    (61/118) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.863704887 seconds)
    (62/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.147068358 seconds)
    (63/118) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.080426135 seconds)
    (64/118) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.0814729 seconds)
    (65/118) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.079655801 seconds)
    (66/118) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.080331086 seconds)
    (67/118) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.739153344 seconds)
    (68/118) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.078423087 seconds)
    (69/118) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.964550957 seconds)
    (70/118) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.082817799 seconds)
    (71/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.091988509 seconds)
    (72/118) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.085864403 seconds)
    (73/118) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.081894014 seconds)
    (74/118) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.092226892 seconds)
    (75/118) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.09148338 seconds)
    (76/118) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.111475333 seconds)
    (77/118) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.078960557 seconds)
    (78/118) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.085931905 seconds)
    (79/118) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.085554889 seconds)
    (80/118) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.079991201 seconds)
    (81/118) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.078848789 seconds)
    (82/118) benchmarking ("3-arg mul!", 2)...
    done (took 0.075827245 seconds)
    (83/118) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.119145316 seconds)
    (84/118) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.468087886 seconds)
    (85/118) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.080098179 seconds)
    (86/118) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.084851396 seconds)
    (87/118) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.076912826 seconds)
    (88/118) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.111955804 seconds)
    (89/118) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.13004523 seconds)
    (90/118) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.080070958 seconds)
    (91/118) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.077161434 seconds)
    (92/118) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.135484095 seconds)
    (93/118) benchmarking ("cumsum!", "Int64", 1024)...
    done (took 0.089263995 seconds)
    (94/118) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.269109034 seconds)
    (95/118) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.075434479 seconds)
    (96/118) benchmarking ("cumsum!", "Float64", 256)...
    done (took 0.072940875 seconds)
    (97/118) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.076581096 seconds)
    (98/118) benchmarking ("log", "Hermitian", 256)...
    done (took 0.147659566 seconds)
    (99/118) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.083986906 seconds)
    (100/118) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.155380577 seconds)
    (101/118) benchmarking ("cumsum!", "Float32", 256)...
    done (took 0.106707671 seconds)
    (102/118) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.075507811 seconds)
    (103/118) benchmarking ("cumsum!", "Int64", 256)...
    done (took 0.073413039 seconds)
    (104/118) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.726023893 seconds)
    (105/118) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.124336539 seconds)
    (106/118) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.079725467 seconds)
    (107/118) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.140912845 seconds)
    (108/118) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.092544628 seconds)
    (109/118) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081344658 seconds)
    (110/118) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.541926526 seconds)
    (111/118) benchmarking ("cumsum!", "Float32", 1024)...
    done (took 0.073792076 seconds)
    (112/118) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.074511822 seconds)
    (113/118) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.081622084 seconds)
    (114/118) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.075611894 seconds)
    (115/118) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.0804553 seconds)
    (116/118) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.075182158 seconds)
    (117/118) benchmarking ("5-arg mul!", 3)...
    done (took 0.173580414 seconds)
    (118/118) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.088349201 seconds)
  done (took 29.031065377 seconds)
done (took 54.875197932 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.199179911 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.091758485 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.093046346 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.093374163 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.093624372 seconds)
  done (took 1.735290457 seconds)
done (took 2.994190093 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/41) benchmarking ("> q0.5", "Array{Int64,1}")...
    done (took 0.152052116 seconds)
    (2/41) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.114757736 seconds)
    (3/41) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.0732682 seconds)
    (4/41) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.113684229 seconds)
    (5/41) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.073590238 seconds)
    (6/41) benchmarking ("> q0.95", "Array{Float32,1}")...
    done (took 0.115447722 seconds)
    (7/41) benchmarking ("> q0.99", "Array{Int64,1}")...
    done (took 0.07902702 seconds)
    (8/41) benchmarking ("> q0.5", "Array{Float64,1}")...
    done (took 0.115339319 seconds)
    (9/41) benchmarking ("> q0.8", "Array{Float32,1}")...
    done (took 0.078000525 seconds)
    (10/41) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.113932307 seconds)
    (11/41) benchmarking ("> q0.95", "Array{Bool,1}")...
    done (took 0.119175108 seconds)
    (12/41) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.073678584 seconds)
    (13/41) benchmarking ("> q0.8", "Array{UInt64,1}")...
    done (took 0.120935022 seconds)
    (14/41) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.111969461 seconds)
    (15/41) benchmarking ("> q0.99", "Array{Bool,1}")...
    done (took 0.077744798 seconds)
    (16/41) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.111266789 seconds)
    (17/41) benchmarking ("> q0.99", "Array{UInt8,1}")...
    done (took 0.114040796 seconds)
    (18/41) benchmarking ("> q0.99", "Array{UInt64,1}")...
    done (took 0.078907429 seconds)
    (19/41) benchmarking ("> q0.8", "Array{Int64,1}")...
    done (took 0.078704118 seconds)
    (20/41) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.091149387 seconds)
    (21/41) benchmarking ("> q0.8", "Array{UInt8,1}")...
    done (took 0.078008232 seconds)
    (22/41) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.113048719 seconds)
    (23/41) benchmarking ("> q0.8", "Array{Int8,1}")...
    done (took 0.113606928 seconds)
    (24/41) benchmarking ("> q0.5", "Array{UInt8,1}")...
    done (took 0.079576477 seconds)
    (25/41) benchmarking ("> q0.95", "Array{UInt64,1}")...
    done (took 0.079070766 seconds)
    (26/41) benchmarking ("> q0.5", "Array{Int8,1}")...
    done (took 0.078012642 seconds)
    (27/41) benchmarking ("> q0.95", "Array{Int8,1}")...
    done (took 0.079388077 seconds)
    (28/41) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.073699019 seconds)
    (29/41) benchmarking ("> q0.99", "Array{Float64,1}")...
    done (took 0.077785848 seconds)
    (30/41) benchmarking ("> q0.5", "Array{UInt64,1}")...
    done (took 0.079350977 seconds)
    (31/41) benchmarking ("> q0.95", "Array{Int64,1}")...
    done (took 0.079152024 seconds)
    (32/41) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.111161812 seconds)
    (33/41) benchmarking ("> q0.99", "Array{Int8,1}")...
    done (took 0.07928318 seconds)
    (34/41) benchmarking ("> q0.5", "Array{Float32,1}")...
    done (took 0.078014975 seconds)
    (35/41) benchmarking ("> q0.95", "Array{Float64,1}")...
    done (took 0.077761227 seconds)
    (36/41) benchmarking ("> q0.95", "Array{UInt8,1}")...
    done (took 0.077665584 seconds)
    (37/41) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.072609115 seconds)
    (38/41) benchmarking ("> q0.5", "Array{Bool,1}")...
    done (took 0.077714167 seconds)
    (39/41) benchmarking ("> q0.8", "Array{Bool,1}")...
    done (took 0.079744005 seconds)
    (40/41) benchmarking ("> q0.8", "Array{Float64,1}")...
    done (took 0.077931246 seconds)
    (41/41) benchmarking ("> q0.99", "Array{Float32,1}")...
    done (took 0.077788568 seconds)
  done (took 4.963412842 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.093825074 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.091478478 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.079768126 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.098339525 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.070720346 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.093229675 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.092145142 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.110920709 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.091516533 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.082041731 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.070330874 seconds)
  done (took 2.177510482 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.092743847 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.092161083 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.076451191 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.090066487 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.070640136 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.09125178 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.091130094 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.095313853 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.090800889 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.083316215 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.069932147 seconds)
  done (took 2.142440394 seconds)
done (took 10.500487895 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/2) benchmarking "longtuple"...
    done (took 0.11426578 seconds)
    (2/2) benchmarking "11899"...
    done (took 0.084296423 seconds)
  done (took 1.40933827 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", "(8, 8)", "(8, 8)")...
    done (took 0.574241325 seconds)
    (2/8) benchmarking ("matvec", "(2, 2)", "(2,)")...
    done (took 0.186328318 seconds)
    (3/8) benchmarking ("matvec", "(4, 4)", "(4,)")...
    done (took 0.096046164 seconds)
    (4/8) benchmarking ("matvec", "(16, 16)", "(16,)")...
    done (took 0.253721897 seconds)
    (5/8) benchmarking ("matmat", "(2, 2)", "(2, 2)")...
    done (took 0.088691898 seconds)
    (6/8) benchmarking ("matvec", "(8, 8)", "(8,)")...
    done (took 0.119339849 seconds)
    (7/8) benchmarking ("matmat", "(16, 16)", "(16, 16)")...
    done (took 7.609192964 seconds)
    (8/8) benchmarking ("matmat", "(4, 4)", "(4, 4)")...
    done (took 0.115098303 seconds)
  done (took 10.273820209 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, "Float32")...
    done (took 0.144975247 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, "Float64")...
    done (took 0.077401404 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, "Float64")...
    done (took 0.079310973 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, "Float32")...
    done (took 0.079144866 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, "Float64")...
    done (took 0.07812836 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, "Float32")...
    done (took 0.078203576 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, "Float32")...
    done (took 0.076895723 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, "Float64")...
    done (took 0.079773143 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, "Float64")...
    done (took 0.077128371 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, "Float32")...
    done (took 0.078230384 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, "Float64")...
    done (took 0.077688347 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, "Float64")...
    done (took 0.078923484 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, "Float64")...
    done (took 0.077541365 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, "Float32")...
    done (took 0.077927146 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, "Float32")...
    done (took 0.076552861 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, "Float32")...
    done (took 0.078972758 seconds)
  done (took 2.61430971 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sum", "(2, 2)")...
    done (took 0.08341876 seconds)
    (2/24) benchmarking ("sumabs", "(8, 8)")...
    done (took 0.079544071 seconds)
    (3/24) benchmarking ("minimum", "(2, 2)")...
    done (took 0.081140288 seconds)
    (4/24) benchmarking ("sumabs", "(2,)")...
    done (took 0.070858145 seconds)
    (5/24) benchmarking ("sum", "(4, 4)")...
    done (took 0.082910145 seconds)
    (6/24) benchmarking ("sum", "(2,)")...
    done (took 0.082152147 seconds)
    (7/24) benchmarking ("sum", "(8, 8)")...
    done (took 0.08544319 seconds)
    (8/24) benchmarking ("minimum", "(16, 16)")...
    done (took 0.091094259 seconds)
    (9/24) benchmarking ("sum", "(8,)")...
    done (took 0.087552097 seconds)
    (10/24) benchmarking ("sumabs", "(4, 4)")...
    done (took 0.086956274 seconds)
    (11/24) benchmarking ("sumabs", "(2, 2)")...
    done (took 0.08374368 seconds)
    (12/24) benchmarking ("minimum", "(4, 4)")...
    done (took 0.086827768 seconds)
    (13/24) benchmarking ("sumabs", "(16,)")...
    done (took 0.08843755 seconds)
    (14/24) benchmarking ("sumabs", "(8,)")...
    done (took 0.084404889 seconds)
    (15/24) benchmarking ("minimum", "(16,)")...
    done (took 0.087134793 seconds)
    (16/24) benchmarking ("minimum", "(2,)")...
    done (took 0.07258815 seconds)
    (17/24) benchmarking ("minimum", "(8, 8)")...
    done (took 0.082360652 seconds)
    (18/24) benchmarking ("minimum", "(4,)")...
    done (took 0.082427958 seconds)
    (19/24) benchmarking ("minimum", "(8,)")...
    done (took 0.083911473 seconds)
    (20/24) benchmarking ("sum", "(16,)")...
    done (took 0.083714712 seconds)
    (21/24) benchmarking ("sum", "(4,)")...
    done (took 0.083297581 seconds)
    (22/24) benchmarking ("sumabs", "(4,)")...
    done (took 0.079997877 seconds)
    (23/24) benchmarking ("sum", "(16, 16)")...
    done (took 0.087514869 seconds)
    (24/24) benchmarking ("sumabs", "(16, 16)")...
    done (took 0.083670295 seconds)
  done (took 3.198281688 seconds)
done (took 18.696486322 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.13085969 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.086517298 seconds)
  done (took 1.398839939 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.087199632 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.086037689 seconds)
  done (took 1.3597361 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.085640367 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.069188317 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.091517301 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.080599731 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.071039188 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.070619109 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.088993756 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.07120845 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.07014444 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.0703945 seconds)
  done (took 1.981224973 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.073789577 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.079463013 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.075501129 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.074801717 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.078425982 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.07114621 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.076194144 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.072749442 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.08070918 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.071312519 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.074940002 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.091817781 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.075163895 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.093444984 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.077220539 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.074700233 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.076874311 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.073748694 seconds)
  done (took 2.583688696 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.0722997 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.070509929 seconds)
  done (took 1.400413635 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.074724001 seconds)
    (2/7) benchmarking "second"...
    done (took 0.070601408 seconds)
    (3/7) benchmarking "month"...
    done (took 0.072380038 seconds)
    (4/7) benchmarking "year"...
    done (took 0.072463467 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.070213783 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.069623249 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.071280582 seconds)
  done (took 1.692697061 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.451326102 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.135410489 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.375211499 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.080212969 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.089318447 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.2731587 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.073926675 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.078796244 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.078918082 seconds)
  done (took 2.896307869 seconds)
done (took 14.511990024 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.092005496 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.095253238 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.11089285 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.480999921 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.091695828 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.076830972 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.161531444 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.199446877 seconds)
done (took 2.513184042 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.28809105 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.92552073 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.557028328 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.235362941 seconds)
  done (took 2.935572055 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.393920699 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.091256369 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.090080897 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.076598005 seconds)
  done (took 1.887602186 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.077909286 seconds)
    (2/2) benchmarking "read"...
    done (took 0.078470573 seconds)
  done (took 1.400847989 seconds)
done (took 7.833138387 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.074624015 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.072502935 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.073114888 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.071678916 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.072465792 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.0717526 seconds)
    (7/24) benchmarking ("2pow1023", "positive argument", "Float64")...
    done (took 0.076035914 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.072302157 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.072046832 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.07214876 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.085366011 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072030586 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.072680271 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072690558 seconds)
    (15/24) benchmarking ("2pow1023", "negative argument", "Float64")...
    done (took 0.073708962 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073295579 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", "Float32")...
    done (took 0.07215371 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.072275252 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073629246 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072240578 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", "Float32")...
    done (took 0.071846191 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071888291 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.072266042 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.072711372 seconds)
  done (took 2.95091804 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.092794301 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.074080505 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.075240297 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.075210621 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.076002135 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.075467547 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.075665194 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.074153158 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.075802075 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.074098926 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.076543946 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.076480116 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.073824545 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.076592425 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.075323887 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.078557257 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.077140402 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074917956 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.075610063 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.076950392 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.076322664 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074752936 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.076849548 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.076570069 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.07753929 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.078535363 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.074525984 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.074973723 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.076332579 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.076821863 seconds)
  done (took 3.518736956 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.077693341 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.069158007 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.068587137 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.077657036 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.068487439 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.069596895 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.068509521 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.068363241 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.069368256 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.067992069 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.069081056 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.068146867 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.068053281 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.068668178 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.068558781 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.073194999 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.088286974 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.068388699 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.069172106 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.068907472 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.076091448 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.069381243 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.069306387 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.069163579 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.06933956 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.068592727 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.069705829 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.069264384 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.069534939 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.06903292 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.073359105 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.073987217 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.070404364 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.075776538 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.075684543 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.068889149 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.074417313 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.068910339 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.069233127 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.068300967 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.068287185 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.069038277 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.068814123 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.07864336 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.068816148 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.069806201 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.068877053 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.06985745 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.069089327 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.070616444 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.068158492 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.06851726 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.070616335 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.069752814 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.074275408 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.069398357 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.069375513 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.068484202 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.070157005 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.068239505 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.069442982 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.068490827 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.072174601 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.069526529 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.088936589 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.080277753 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.069351648 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.069875161 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.07025544 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.073215967 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.070079349 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.086282323 seconds)
  done (took 6.348096253 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.099883913 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.099527519 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.076421647 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.075606509 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069806668 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.069414203 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.077998802 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070720824 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074555228 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.0918579 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.0695221 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.074117922 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087732309 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.073718693 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.069781933 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.074046779 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.077704362 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069483497 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.068884444 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.0732145 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.068980684 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.077114779 seconds)
  done (took 2.938140058 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.167494975 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.07617494 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.120077769 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.080792222 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.078177277 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.080051461 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.075693261 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.076744738 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079613444 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.07596612 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075953389 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.075297922 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.079249187 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077125094 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.077294554 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.076704048 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.075276434 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.07712643 seconds)
  done (took 2.747677171 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.087860383 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.074317164 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.097132179 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.074181838 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.075953926 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.074164456 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.078509881 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.079012779 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.075262964 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.074634597 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.079094616 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074391451 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.074701117 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075574045 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074002163 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.074452128 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.075115019 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075891882 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079034104 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.078254511 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.078424362 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.079777946 seconds)
  done (took 2.930776261 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.088681796 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.073545886 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.093059287 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.075540289 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.069032691 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.068876857 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.076508876 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.073971683 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.075283283 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.073928077 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.074133748 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.06899808 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.076380185 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.075463318 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.076762426 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.074893654 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.073621518 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.074746598 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07380145 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.069272427 seconds)
  done (took 2.727367406 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.092914384 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07213688 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.071877746 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.077818931 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072145932 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.072097827 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.078477579 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.072316829 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.072697294 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.095863367 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.072607674 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.07266923 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079171314 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.076219807 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.072360744 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.078469813 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.078428874 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.078511167 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.072506218 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.072853445 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.096420055 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.073152827 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.07954291 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.072850341 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.07271907 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.072805226 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.072734602 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.076670755 seconds)
  done (took 3.3744174 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.074494864 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.071461419 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.071777351 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.071805006 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.072099466 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.072792811 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.072130661 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.072068581 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.0731589 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.073188229 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.072052527 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.071950255 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.072976871 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.07180736 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.072868426 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.072084497 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072062565 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.073502412 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.072621977 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073506061 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.071848248 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071979437 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.073287897 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.072272123 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072155527 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.0716863 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072042834 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.072040353 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071776812 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.073923199 seconds)
  done (took 3.425430541 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.085116354 seconds)
    (2/2) benchmarking "in"...
    done (took 0.081638196 seconds)
  done (took 1.458721915 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.072355764 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.086319602 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.067912976 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.083698278 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.083823205 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.078124259 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.083237848 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.082592747 seconds)
  done (took 1.863106748 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.100314297 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.085537759 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.072195722 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.083150454 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.082392338 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.091541346 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.144220017 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.071982842 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.082927085 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.072820972 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.091044031 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.074189103 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.082971775 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.077259843 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.097167445 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.10191161 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.080493917 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.088976121 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.083830052 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.079097111 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.078707601 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.093272133 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.084422402 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.069818134 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.077797383 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.103611982 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.093735197 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.071408463 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.079669873 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.086082047 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.083748582 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.069017516 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.0721709 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.083088815 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.071239061 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.083485096 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.093727291 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.080679445 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.087355595 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.073846108 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.082070866 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.070421751 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.083964347 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.085898585 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.091429165 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.076156032 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.074453238 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.070809122 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.074205296 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.080364376 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.072808085 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.078707368 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.070499123 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.087988808 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.082420964 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.091317035 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.073246056 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.081119261 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.080783405 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.081582319 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.086473559 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.081733058 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.084251426 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.072659368 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.091289711 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.084160901 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.086947566 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.07088437 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.069700123 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.070994208 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.08932802 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.106990672 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.084241285 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.07461577 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.073867092 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.070834069 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.081168066 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.073743647 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.083643135 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.086543111 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.073243937 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.078483597 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.086841617 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.077724024 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.080861266 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.079498046 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.07072847 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.077455213 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.073658732 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.096009768 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.07095956 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.069917684 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.080416099 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.092580997 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.080528194 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.07185535 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.073672293 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.085945079 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.070465364 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.073716409 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.073198315 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.080139176 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.088047001 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.076872726 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.077268231 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.088352199 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.082919723 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.079273136 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.080785619 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.07032732 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.07361309 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.075232737 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.086260387 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.069776018 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.080789714 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.077314692 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.07273021 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.0865331 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.070890005 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.072454 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.086949858 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.086113733 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.071171258 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.069257112 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.08023285 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.072361556 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.075028895 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.088751004 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.071435055 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.070803964 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.07070174 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.081954579 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.072518556 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.081780295 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.07836192 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.083108551 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.070600321 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.071630429 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.079027568 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.257037227 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.08083934 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.078709472 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.082556389 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.078281381 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.070492786 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.085243949 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.080085531 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.074796539 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.081690187 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.075555703 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.068548784 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.07371931 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.078779036 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.070434188 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.078993129 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.073134836 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.078263487 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.071207127 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.069494984 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.076224803 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.072190608 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.073365778 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.076758379 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.069914931 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.08800054 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.080269763 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.068887743 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.068118242 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.077942452 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.074077012 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.070166543 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.073833159 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.081432741 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.071952908 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.069025526 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.07024566 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.078202553 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.078164586 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.075781201 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071371938 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.08082425 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.090658782 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.070550272 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.079069487 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.07549043 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.075685901 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.074484809 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.088310033 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.085940361 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.078968303 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.083294592 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.069193899 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.082099463 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.085780706 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.075770592 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.070962444 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.075228219 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.075473571 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.085742132 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.075253181 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.071921929 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.069812982 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.0782775 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.077562338 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.079659213 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.071285171 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.074464632 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.07718395 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.069851719 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.077545904 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.071928375 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.088391956 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.080627411 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.069680725 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.073578176 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.07098863 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.083904523 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.069492601 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.072805568 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.074442282 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.072061567 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.070809633 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.078848754 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.068428155 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.089304973 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.086962108 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.078059017 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.074296319 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.072240844 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.085177008 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.079929896 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.094714096 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.093101438 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.096059638 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.097897435 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.081653735 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.088807631 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.107909894 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.079438529 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.076109806 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.090943494 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.077764844 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.077943135 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.079716061 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.078417429 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.088180997 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.089036574 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.09414276 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.079213959 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.088084869 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.078474976 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.083323076 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.077411194 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.090279313 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.089586851 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.086402158 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.095909367 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.080999365 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.080407771 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.089680897 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.079908213 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.077141651 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.074623691 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.081787598 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.07431399 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.080524008 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.076532965 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.080833123 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.07630791 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.071643633 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.080719288 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.073625981 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.080229588 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.084257995 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.073604168 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.081342912 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.082051014 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.074263626 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.081122388 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.078076769 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.076873013 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.082180702 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.080640652 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.082132374 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.082073099 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.265488646 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.085431179 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.071627315 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.085564586 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.07682667 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.06918458 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.076083747 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.078565613 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.075186581 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.071191799 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.071063842 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.07714253 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.070276997 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.078369617 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.08480076 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.072477181 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.089248357 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.083306755 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.077554341 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.078462868 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.076584274 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.07718794 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.0736806 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.075618163 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.071210976 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.077598388 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.070498881 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.079750241 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.078387446 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.076157643 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.077590464 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.07136785 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.076826825 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.077341569 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.068176185 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.073464458 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.073860432 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.070554513 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.084958939 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.070992034 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.076336703 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.069754652 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071176413 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.069571689 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.067635889 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.080109162 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.078334959 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.072204442 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.08406642 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.075229412 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.079269343 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.09040867 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.069856044 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.070630449 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.071864824 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.074670907 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.08702506 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.072791521 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.088487062 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.079107833 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.075527458 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.070475393 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.072365817 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.070658025 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.069463532 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.069845541 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.081185111 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.075546902 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.070695374 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.07253089 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.079338737 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.072389306 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.085939947 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.070870961 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.076645201 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.071872333 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.068933424 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.074535251 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.07419673 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.082357775 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.079147753 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.073942226 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.069318916 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.071264128 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.076577587 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.078611273 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.07125919 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.079075786 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.085796983 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.071818688 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.079945707 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.074494886 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.06934164 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.080396431 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.075482513 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.076790723 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.077552905 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.082928202 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.084293301 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.075129365 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.091607534 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.07262587 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.07955325 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.072667167 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.071645265 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.073549877 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.072383729 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.071825175 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.074999993 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.074267846 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.088388556 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.070210476 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.079141784 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.078360783 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.076453765 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.083639327 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.073192944 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.079022033 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.077353378 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.073670952 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.078876466 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.087200138 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.075912748 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.081175404 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.073303972 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.078947775 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.083900818 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.075434004 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.086256473 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.078971289 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.073192427 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.079527108 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.07425116 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.072500659 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.072549424 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.072091358 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.084223808 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.07320512 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.075659407 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.076001081 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.071161961 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.078414531 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.075997664 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093233271 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.083248247 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.083745096 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.074097696 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.072523566 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.250881782 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.073804138 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.078624855 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.080867723 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.082285319 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.079001458 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.075325209 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.070930152 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.088582852 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.083497898 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.080336462 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.072984213 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.081199753 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.072514974 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.080462218 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.076496069 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.076613875 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.072477312 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.080496341 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.077212811 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.073948627 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.082052499 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.07967121 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071491285 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.076977014 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.077723187 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.076357179 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.068595371 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.071070368 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.077961556 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.08061569 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.078575542 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.073844496 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.088318879 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.072537375 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.076595683 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.073072619 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.069908648 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.081082147 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.068811001 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.07777227 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.073570095 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.07202542 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.069678147 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.074222374 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.073895493 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.079114663 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.074126527 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.069354551 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.089880927 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.091129029 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.080634951 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.072464845 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.071652636 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.070088256 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.070662938 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.076271714 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.074439964 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.082581692 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.089441123 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.075079006 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.074650722 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.069715148 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.071857826 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.080576627 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.082858746 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.070231762 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.069661122 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.074658112 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.078909201 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.086446675 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.070468695 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.071632382 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07982524 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.079161606 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.069617387 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.076044054 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.070328369 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.081424583 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.091657291 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.072178701 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.078558652 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.083177034 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.08628475 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.071676975 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.070440791 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.072049823 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.078406387 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.077761709 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.07240681 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.074265874 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.095492303 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.081090912 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.07434438 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.070321089 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.079321948 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.074713197 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.087336707 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.073098934 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.072048184 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.081177564 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.080038396 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.079000089 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.083281628 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.08421234 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.080723667 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.080083647 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.072182082 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.077357108 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.071482591 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.075640819 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.075622246 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.080095648 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.08183895 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.084676946 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.079936114 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.095939586 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.093617781 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.07932203 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.073074211 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.079583117 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.075739894 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.069624962 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.072490966 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.070061278 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.070209439 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.070980278 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.071836775 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.079210373 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.082809738 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.077413324 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.072800423 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.072389104 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.069713557 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.083525078 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.080531355 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.079287424 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.069799119 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.073235419 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.080428232 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.08324585 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.07861851 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.07994229 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.08752552 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.087367088 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.088631997 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.077235509 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.092959894 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.282618846 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.083277369 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.078864235 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.075582375 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.075747983 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.084011572 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.079718143 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.076447002 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.084120072 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.085495254 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.076947287 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.073156438 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.070540802 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.081413121 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.069054382 seconds)
  done (took 48.654678129 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.1135873 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071293319 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.068740773 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.068611116 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.078098885 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.074931701 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072511096 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.072438358 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.072548349 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.074552326 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.071553315 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.071888452 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.078634805 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.087432722 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.082424276 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.078515086 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.070723263 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.072016015 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.070508121 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.071724433 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.079484515 seconds)
  done (took 2.928327901 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.078877014 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.085207081 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.081322626 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.088522543 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.078329131 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.07446725 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.082293772 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074265626 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.082730103 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080001136 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.084132241 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074331993 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.079863328 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.080153136 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080197718 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.078507669 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.084900026 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.079500802 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.075227785 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.085247067 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.076170026 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.084031565 seconds)
  done (took 3.105451739 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.073650217 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.070271938 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.077522233 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.068171702 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.069560646 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.068467795 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.073537059 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.068419697 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.073243555 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.073681513 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.073313453 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.073488256 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.079860609 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.073064709 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.07912243 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.0732497 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.12597701 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.078963517 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.074903518 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.075892245 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.073076876 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.084984755 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.074406467 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.074756842 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.088933522 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.079821319 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.077792493 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.071014516 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.07256476 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.07386828 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.071461476 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.069091529 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.080883778 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.077932099 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.07401505 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.073706424 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.07071858 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.070908764 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.069409676 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.069297431 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.079085473 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.06992705 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.07253241 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.079107611 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.070001449 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.071298835 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.081396981 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.072181952 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.070067482 seconds)
  done (took 5.051140769 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.367900566 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.125974779 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.076010259 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.104880323 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.084223497 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.083013897 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.076028645 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.109237133 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.071710707 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.072312112 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.08514719 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.086734197 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.073991714 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.075356863 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.077391489 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.074267692 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.074779144 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.07199164 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.077342334 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.072620194 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.076277602 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.077664159 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.084325607 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.086619246 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.075069331 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.073054676 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.073829943 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.074291988 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.084482149 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.076546123 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.074561275 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.076607449 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.085208039 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.076415286 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.072209979 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.072447805 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.086180476 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.073207042 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.072945594 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.071035933 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.07250208 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.074496997 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.077832177 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.086267596 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.073193581 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.07837124 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.072938009 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.070534502 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.084778546 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.07274325 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.077273527 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.086081483 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.076886744 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.075795853 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.076290829 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.085617448 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.074711719 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.073162204 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.074921992 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.086353216 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.073525115 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.074515041 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.085786042 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.072881195 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.076921146 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.085979988 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.080247237 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.074343211 seconds)
  done (took 7.144158454 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.083466313 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.10731224 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.085827638 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.086550539 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.080814219 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.081269325 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.080921299 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.080939335 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.082397148 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.086171507 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.08119161 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.128822348 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.078623353 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.086453701 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.081638754 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.081285132 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.081315727 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.081888201 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.081745265 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081506872 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.082255159 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.089568466 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.081700946 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.087837667 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.08491928 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.077516699 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.081285594 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.081795918 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.087841853 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.081330999 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.084975867 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.081508357 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.081510452 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.088492747 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.085047927 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.081401431 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.071899022 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.08268266 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.082789447 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.082821956 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.079194249 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.087883996 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.0820545 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.078314013 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.082778399 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.081606796 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.087796431 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.084905279 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.083885278 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.085684994 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.082926241 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.08809545 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082721818 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.081958505 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.087717527 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.090432777 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.088455014 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.088010213 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.084237836 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.088710555 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.088917694 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.091041766 seconds)
  done (took 6.650992559 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.087969231 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.077665732 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.090084888 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.068990429 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.070167585 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.079504722 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.069379258 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.069040887 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.077550902 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.077588897 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079701308 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.079978919 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082311753 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.079524621 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.079909393 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083828634 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.079922796 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.07980724 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.077785918 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.084707769 seconds)
  done (took 2.94296251 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.087919818 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.089929525 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.075011574 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.079770364 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.101094234 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.081018342 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.075430462 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076500531 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.076841083 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076267542 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.082274036 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.081273507 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075868511 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.080406607 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.080994349 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.079766015 seconds)
  done (took 2.634525241 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.078331661 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.077198981 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.085643 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.076476061 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.078728961 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.072399521 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.072247466 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.070819328 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.07139546 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.087562972 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.073179163 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.086557709 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.071927979 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.071463833 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.071149637 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.078439597 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.071235268 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.072060693 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.0713196 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.085485065 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.08034251 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.072596963 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.075777398 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.071424151 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.077901415 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.079388542 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.073000981 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.075381003 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.071386098 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.071721106 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.077399488 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.078391741 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.071436595 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.07202664 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.070351739 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.0711428 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.072324388 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.071531877 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.078348702 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.072009576 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.070467395 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.077567073 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.07201663 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.071766677 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.07029858 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.072377866 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.070074415 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.078143572 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.071741087 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.083149991 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.071781036 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.073635675 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.071596063 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.078918309 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.078361573 seconds)
  done (took 5.436299419 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.090805719 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.075613792 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.06908448 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.069271444 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.07519883 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.077392971 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.075269678 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.075488111 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.076210106 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.06965946 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.076111622 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.075339169 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.076334518 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.075664845 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.076051191 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.076183118 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.069681097 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.075421865 seconds)
  done (took 2.697354973 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.083985593 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.076143348 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.082566848 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.074933214 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.074650103 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.074437384 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069834645 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.069500412 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069883758 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.075117474 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075928312 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.074418979 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070826639 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.07643825 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.076128648 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07482993 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.075480692 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071838963 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.075693744 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070360136 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.074289821 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.069972141 seconds)
  done (took 2.961654752 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.108475888 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.095591075 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.159915406 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.089840346 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.100605406 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.082837299 seconds)
  done (took 1.958356834 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113050182 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116619226 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.079048587 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078794209 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.084964887 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.082299882 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.082319026 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.083004246 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.087801758 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08812245 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.082943296 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.087665002 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088761518 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090794275 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084800804 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08179218 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080236798 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079531229 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077088795 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088375966 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078834553 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083160639 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079043585 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078600825 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07871122 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086948626 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090927976 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08461131 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078741766 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.084908512 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082625944 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078806008 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084213489 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.085474612 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076842441 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084943144 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079046542 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088503153 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081190283 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086209638 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.07568585 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.0813803 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084184577 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08384597 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.083690587 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079029846 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084048149 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078912441 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079085563 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090264567 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081419242 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08510141 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083963309 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085436591 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084375362 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09024433 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084293535 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.084835038 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082557862 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.083889811 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.084870265 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082334351 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084748554 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085535959 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082181774 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084823574 seconds)
  done (took 6.909342607 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117767284 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.076230701 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07760839 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.083100806 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084307346 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081353413 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078536777 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079597143 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078661497 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075811097 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117563762 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080174251 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086851139 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086879166 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079104684 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078359772 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078496705 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.084877916 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076009299 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090362845 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079362517 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086674047 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08502985 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085029151 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.083779343 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081108785 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079918376 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078692869 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082057249 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078552067 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.083107646 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079148105 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.085260584 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.077033104 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08970628 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084347102 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081324002 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086273959 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081422845 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084036703 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08793437 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.092948517 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.082149121 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080974393 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08678641 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082292046 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08229069 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078178094 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081253058 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077651314 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.087732279 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087432821 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087308322 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087543909 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080583664 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.082002789 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080150523 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079731974 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079905596 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082061555 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08575258 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079734511 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091192478 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079250501 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078815379 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085036058 seconds)
  done (took 6.944112933 seconds)
done (took 141.516647471 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.293800005 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.23123421 seconds)
  done (took 1.850028831 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose", "(600, 600)")...
    done (took 0.094301156 seconds)
    (2/16) benchmarking ("adjoint", "(600, 400)")...
    done (took 0.092912929 seconds)
    (3/16) benchmarking ("adjoint!", "(600, 600)")...
    done (took 0.115311802 seconds)
    (4/16) benchmarking ("adjoint", "(20000, 20000)")...
    done (took 0.083115213 seconds)
    (5/16) benchmarking ("transpose!", "(20000, 10000)")...
    done (took 0.154951034 seconds)
    (6/16) benchmarking ("adjoint!", "(20000, 20000)")...
    done (took 0.26527318 seconds)
    (7/16) benchmarking ("transpose!", "(20000, 20000)")...
    done (took 0.21536561 seconds)
    (8/16) benchmarking ("transpose", "(600, 400)")...
    done (took 0.084092017 seconds)
    (9/16) benchmarking ("transpose", "(20000, 20000)")...
    done (took 0.080511728 seconds)
    (10/16) benchmarking ("transpose!", "(600, 400)")...
    done (took 0.083015841 seconds)
    (11/16) benchmarking ("adjoint", "(600, 600)")...
    done (took 0.0819882 seconds)
    (12/16) benchmarking ("transpose!", "(600, 600)")...
    done (took 0.083356189 seconds)
    (13/16) benchmarking ("adjoint!", "(600, 400)")...
    done (took 0.084582602 seconds)
    (14/16) benchmarking ("transpose", "(20000, 10000)")...
    done (took 0.081409676 seconds)
    (15/16) benchmarking ("adjoint!", "(20000, 10000)")...
    done (took 0.166140194 seconds)
    (16/16) benchmarking ("adjoint", "(20000, 10000)")...
    done (took 0.084701294 seconds)
  done (took 3.183242202 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.131786806 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.189062952 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.124838765 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.079141097 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.131248611 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.087355474 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.078769686 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.096097535 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.086722541 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.083347437 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.094948493 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.087535755 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.080158255 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.085785574 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.088205043 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.088500219 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.081456689 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.088197066 seconds)
  done (took 3.151509232 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", "(20000, 20000)")...
    done (took 0.157857703 seconds)
    (2/2) benchmarking ("unary minus", "(600, 600)")...
    done (took 0.096059888 seconds)
  done (took 1.618580217 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.202435985 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.147883682 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.194260898 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.410120676 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.183649337 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.180011888 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.181981325 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.184490042 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.141847818 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.174249099 seconds)
  done (took 3.3290864 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.118854644 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.205347024 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.341926606 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.14149569 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.086977004 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.127539338 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.144563295 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.095908039 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.096123558 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.095298833 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.095652703 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.090368871 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.118218112 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.088874703 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.085763498 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.088713445 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.122474572 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.084903485 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.087239899 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.090335695 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.121537397 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.081081405 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.088029843 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.084549912 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.092977579 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.110477247 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.081663193 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.080123189 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.089396916 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.085310087 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.09113387 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.116700057 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.090702167 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.118257792 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.085220971 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.121821903 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.089859411 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.08756463 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.086298884 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.089215947 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.092836233 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.092381367 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.091467152 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.089863621 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.081750339 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.090348149 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.083031674 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.080413285 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.092497948 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.082454209 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.092434767 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.092039129 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.122166494 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.08218882 seconds)
  done (took 6.932349287 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.124478296 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.12809165 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.07952932 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.127588756 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.118454137 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.078971598 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.119660123 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.114463452 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.123224801 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.089006043 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.082189965 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.084382998 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.093332506 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.094901833 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.13575894 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.125756343 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.083436978 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.081167912 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.124978534 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.123414649 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.079899671 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.116828684 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.11397148 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.124709002 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.07849536 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.081303768 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.078508044 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.081379396 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.085903016 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.089642013 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.08026168 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.089058344 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.093208017 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.087749103 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.07735717 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.079165323 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.07933193 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.088528796 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.089435386 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.089979263 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.087540408 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.076809303 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.077447593 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.078944475 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.079697705 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.078073532 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.08675945 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.089617872 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.086651471 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.077576693 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.083154213 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.082076251 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.080645703 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.090913719 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.088039087 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.089663042 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.091546174 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.081607217 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.079536509 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.08416149 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.091704041 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.089450517 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.089435627 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.080465088 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.089727214 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.07862697 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.090059867 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.09586496 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.078686142 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.079954305 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.07788371 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.079218146 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.080214909 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.088657766 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.087886293 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.08081622 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.077947514 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.077845684 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.089368345 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.088218039 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.077803743 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.08552635 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.079242328 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.079798619 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.080474772 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.079216561 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.085754177 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.089275523 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.079845889 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.077789174 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.077672491 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.077777995 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.078085392 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.086820444 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.089927576 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.090657041 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.08765709 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.080941177 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.089787087 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.08809407 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.080180387 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.088589498 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.079614429 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.081467123 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.079768624 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.088833865 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.087514336 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.090109118 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.080690019 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.079269135 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.088407935 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.093208885 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.080042473 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.08832597 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.092415379 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.089906443 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.079143684 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.093239708 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.080956061 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.091606678 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.081005505 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.092558501 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.248213788 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.086823833 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.078205171 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.076960987 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.077385906 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.088240014 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.079367924 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.07817139 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.079583169 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.077441598 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.085748661 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.088327387 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.079630689 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.085535606 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.085440555 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.082626273 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.08629301 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.077919747 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.089172627 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.079540863 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.078770134 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.07789159 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.090975655 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.080052287 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.078363348 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.078183838 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.093342512 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.078721138 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.088707218 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.086367839 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.078432678 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.088992464 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.089056978 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.085982754 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.089397518 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.07965392 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.077751901 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.077980366 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.079373087 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.085686069 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.088374215 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.079510019 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.077575983 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.088087215 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.089722493 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.078231889 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.088289772 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.087113249 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.088751941 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.07858583 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.080635822 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.089576723 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.089598216 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.086783749 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.086857756 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.086956889 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.078577045 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.087463234 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.087335987 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07943249 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.097319842 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.088370902 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.097535175 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.087468153 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.086402623 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.087277536 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.091443051 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.091313675 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.088724402 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.093858032 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.078758489 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.077965207 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.089384991 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.077948144 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.077847755 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.086893277 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.079947168 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.079393153 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.098461887 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.092040818 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.103010384 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.090268968 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.101650345 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.089847778 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.095029664 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.105045868 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.07829176 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.080010646 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.088586801 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.077963866 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.086095478 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.091206488 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.087139339 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.080768721 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.083867354 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.088358051 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.087847213 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.078348592 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.079358496 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.081309137 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.086752217 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.08598624 seconds)
  done (took 21.08949544 seconds)
done (took 42.594630125 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", "(1000, 1000)", 3)...
    done (took 0.232978075 seconds)
    (2/4) benchmarking ("Float64", "(1000000,)", 1)...
    done (took 0.160371076 seconds)
    (3/4) benchmarking ("Float64", "(1000, 1000)", 2)...
    done (took 0.206904666 seconds)
    (4/4) benchmarking ("Float64", "(1000000,)", 2)...
    done (took 0.134805408 seconds)
  done (took 2.090681071 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.119269915 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.111597242 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.096939115 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.074269384 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.105405757 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.074613688 seconds)
  done (took 1.961236608 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", "(1000000,)", 1)...
    done (took 0.24403177 seconds)
    (2/3) benchmarking ("Float64", "(1000, 1000)", 2)...
    done (took 0.330016362 seconds)
    (3/3) benchmarking ("Float64", "(1000000,)", 2)...
    done (took 0.212885765 seconds)
  done (took 2.161992723 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ("(10000000,)", 1)...
    done (took 0.192673643 seconds)
    (2/4) benchmarking ("(1000, 1000)", 2)...
    done (took 0.555753593 seconds)
    (3/4) benchmarking ("(1000, 1000)", 1)...
    done (took 0.191708839 seconds)
    (4/4) benchmarking ("(10000000,)", 2)...
    done (took 0.326547216 seconds)
  done (took 2.676067639 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.162667943 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.092816148 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.071914319 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.091561294 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.134052098 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.168589627 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.10569053 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.130925162 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.086118874 seconds)
  done (took 2.542357171 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.171842823 seconds)
done (took 13.065287015 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/341) benchmarking ("collect", "all", "Int64", 0)...
    done (took 0.199497567 seconds)
    (2/341) benchmarking ("map", "identity", "Int8", 0)...
    done (took 0.190785212 seconds)
    (3/341) benchmarking ("map", "*", "Int64", "(false, false)")...
    done (took 0.195557455 seconds)
    (4/341) benchmarking ("map", "identity", "Float64", 0)...
    done (took 0.191854331 seconds)
    (5/341) benchmarking ("sort", "Float64", 0)...
    done (took 0.171709102 seconds)
    (6/341) benchmarking ("perf_sum4", "BigInt", 1)...
    done (took 0.104390999 seconds)
    (7/341) benchmarking ("skipmissing", "sum", "Union{Nothing, BigInt}", 0)...
    done (took 0.150199317 seconds)
    (8/341) benchmarking ("collect", "all", "Int8", 0)...
    done (took 0.110929742 seconds)
    (9/341) benchmarking ("map", "*", "Complex{Float64}", "(false, true)")...
    done (took 0.321503406 seconds)
    (10/341) benchmarking ("collect", "all", "Float32", 1)...
    done (took 0.237867621 seconds)
    (11/341) benchmarking ("perf_sum3", "Float64", 1)...
    done (took 0.099001203 seconds)
    (12/341) benchmarking ("perf_sum", "Complex{Float64}", 1)...
    done (took 0.099423052 seconds)
    (13/341) benchmarking ("broadcast", "*", "Bool", "(false, true)")...
    done (took 0.305976613 seconds)
    (14/341) benchmarking ("broadcast", "*", "Int64", "(false, true)")...
    done (took 0.258617961 seconds)
    (15/341) benchmarking ("perf_binaryop", "*", "Float32", "(true, true)")...
    done (took 0.119549203 seconds)
    (16/341) benchmarking ("map", "identity", "Float32", 0)...
    done (took 0.098415373 seconds)
    (17/341) benchmarking ("perf_sum2", "Float32", 0)...
    done (took 0.084259081 seconds)
    (18/341) benchmarking ("perf_sum", "Int64", 0)...
    done (took 0.086648797 seconds)
    (19/341) benchmarking ("broadcast", "identity", "Int8", 1)...
    done (took 0.208459399 seconds)
    (20/341) benchmarking ("perf_sum4", "BigInt", 0)...
    done (took 0.079365023 seconds)
    (21/341) benchmarking ("perf_sum3", "Complex{Float64}", 0)...
    done (took 0.089987214 seconds)
    (22/341) benchmarking ("perf_sum2", "BigFloat", 1)...
    done (took 0.091684041 seconds)
    (23/341) benchmarking ("collect", "all", "Float32", 0)...
    done (took 0.081596725 seconds)
    (24/341) benchmarking ("collect", "filter", "Int64", 1)...
    done (took 0.172449764 seconds)
    (25/341) benchmarking ("perf_sum", "Int8", 0)...
    done (took 0.10150883 seconds)
    (26/341) benchmarking ("broadcast", "identity", "Float32", 1)...
    done (took 0.208440148 seconds)
    (27/341) benchmarking ("broadcast", "identity", "BigFloat", 1)...
    done (took 0.263033371 seconds)
    (28/341) benchmarking ("broadcast", "*", "BigInt", "(false, true)")...
    done (took 0.278371032 seconds)
    (29/341) benchmarking ("skipmissing", "collect", "Float64", 0)...
    done (took 0.094099463 seconds)
    (30/341) benchmarking ("broadcast", "*", "Float32", "(false, false)")...
    done (took 0.225626136 seconds)
    (31/341) benchmarking ("broadcast", "identity", "Float32", 0)...
    done (took 0.076423964 seconds)
    (32/341) benchmarking ("broadcast", "abs", "Float64", 1)...
    done (took 0.203710041 seconds)
    (33/341) benchmarking ("perf_binaryop", "*", "Int64", "(false, true)")...
    done (took 0.114682805 seconds)
    (34/341) benchmarking ("perf_simplecopy", "Float32", 1)...
    done (took 0.092350758 seconds)
    (35/341) benchmarking ("perf_binaryop", "*", "Complex{Float64}", "(false, false)")...
    done (took 0.116862441 seconds)
    (36/341) benchmarking ("map", "abs", "BigFloat", 0)...
    done (took 0.197044437 seconds)
    (37/341) benchmarking ("perf_sum3", "BigFloat", 1)...
    done (took 0.088527954 seconds)
    (38/341) benchmarking ("broadcast", "identity", "BigInt", 1)...
    done (took 0.251752774 seconds)
    (39/341) benchmarking ("perf_sum2", "Bool", 1)...
    done (took 0.09146116 seconds)
    (40/341) benchmarking ("skipmissing", "collect", "Union{Missing, Complex{Float64}}", 1)...
    done (took 0.1208535 seconds)
    (41/341) benchmarking ("perf_binaryop", "*", "Int64", "(false, false)")...
    done (took 0.07463651 seconds)
    (42/341) benchmarking ("broadcast", "abs", "Bool", 1)...
    done (took 0.204385916 seconds)
    (43/341) benchmarking ("map", "*", "Int8", "(true, true)")...
    done (took 0.222784436 seconds)
    (44/341) benchmarking ("sort", "Union{Missing, Int8}", 1)...
    done (took 0.19524558 seconds)
    (45/341) benchmarking ("map", "*", "Bool", "(false, false)")...
    done (took 0.247874255 seconds)
    (46/341) benchmarking ("perf_sum2", "Complex{Float64}", 1)...
    done (took 0.088403142 seconds)
    (47/341) benchmarking ("perf_sum2", "BigInt", 1)...
    done (took 0.085447817 seconds)
    (48/341) benchmarking ("sort", "Union{Nothing, Float32}", 0)...
    done (took 0.17720555 seconds)
    (49/341) benchmarking ("map", "*", "BigFloat", "(false, false)")...
    done (took 0.190312943 seconds)
    (50/341) benchmarking ("skipmissing", "collect", "Union{Nothing, BigFloat}", 0)...
    done (took 0.11487154 seconds)
    (51/341) benchmarking ("broadcast", "*", "Float32", "(false, true)")...
    done (took 0.076822114 seconds)
    (52/341) benchmarking ("skipmissing", "collect", "BigInt", 0)...
    done (took 0.095796262 seconds)
    (53/341) benchmarking ("map", "abs", "BigInt", 1)...
    done (took 0.206123828 seconds)
    (54/341) benchmarking ("skipmissing", "sum", "Union{Missing, BigInt}", 1)...
    done (took 0.144273683 seconds)
    (55/341) benchmarking ("collect", "filter", "Int8", 0)...
    done (took 0.180828603 seconds)
    (56/341) benchmarking ("perf_simplecopy", "Complex{Float64}", 1)...
    done (took 0.083466088 seconds)
    (57/341) benchmarking ("sort", "Union{Missing, Bool}", 1)...
    done (took 0.200028564 seconds)
    (58/341) benchmarking ("broadcast", "identity", "Int8", 0)...
    done (took 0.076215176 seconds)
    (59/341) benchmarking ("skipmissing", "collect", "Int8", 0)...
    done (took 0.107143299 seconds)
    (60/341) benchmarking ("broadcast", "*", "Complex{Float64}", "(true, true)")...
    done (took 0.240733058 seconds)
    (61/341) benchmarking ("skipmissing", "sum", "Union{Missing, Bool}", 1)...
    done (took 0.157344925 seconds)
    (62/341) benchmarking ("perf_countequals", "Int8")...
    done (took 0.100100201 seconds)
    (63/341) benchmarking ("map", "abs", "BigInt", 0)...
    done (took 0.0798906 seconds)
    (64/341) benchmarking ("map", "*", "Complex{Float64}", "(false, false)")...
    done (took 0.077243472 seconds)
    (65/341) benchmarking ("perf_sum", "Complex{Float64}", 0)...
    done (took 0.082125686 seconds)
    (66/341) benchmarking ("skipmissing", "collect", "Bool", 0)...
    done (took 0.105864567 seconds)
    (67/341) benchmarking ("broadcast", "*", "Bool", "(false, false)")...
    done (took 0.080621482 seconds)
    (68/341) benchmarking ("sort", "Bool", 0)...
    done (took 0.145813142 seconds)
    (69/341) benchmarking ("perf_countnothing", "Float64", 1)...
    done (took 0.088440452 seconds)
    (70/341) benchmarking ("sort", "Union{Nothing, Int8}", 0)...
    done (took 0.182839802 seconds)
    (71/341) benchmarking ("collect", "filter", "BigFloat", 0)...
    done (took 0.175090193 seconds)
    (72/341) benchmarking ("perf_sum4", "Int64", 0)...
    done (took 0.088229029 seconds)
    (73/341) benchmarking ("skipmissing", "sum", "Float32", 0)...
    done (took 0.105806308 seconds)
    (74/341) benchmarking ("broadcast", "*", "Complex{Float64}", "(false, false)")...
    done (took 0.07989125 seconds)
    (75/341) benchmarking ("skipmissing", "sum", "Union{Missing, Float32}", 1)...
    done (took 0.154082561 seconds)
    (76/341) benchmarking ("sort", "Union{Nothing, BigInt}", 0)...
    done (took 0.169163058 seconds)
    (77/341) benchmarking ("collect", "all", "Bool", 0)...
    done (took 0.152619072 seconds)
    (78/341) benchmarking ("perf_countnothing", "BigFloat", 1)...
    done (took 0.081563992 seconds)
    (79/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(false, false)")...
    done (took 0.110861238 seconds)
    (80/341) benchmarking ("skipmissing", "sum", "Union{Nothing, BigFloat}", 0)...
    done (took 0.137399566 seconds)
    (81/341) benchmarking ("collect", "all", "Complex{Float64}", 1)...
    done (took 0.164188432 seconds)
    (82/341) benchmarking ("broadcast", "abs", "BigFloat", 1)...
    done (took 0.253308308 seconds)
    (83/341) benchmarking ("perf_sum4", "BigFloat", 0)...
    done (took 0.091998863 seconds)
    (84/341) benchmarking ("broadcast", "*", "BigFloat", "(false, false)")...
    done (took 0.269751884 seconds)
    (85/341) benchmarking ("perf_simplecopy", "Int8", 0)...
    done (took 0.091925026 seconds)
    (86/341) benchmarking ("perf_sum", "BigFloat", 1)...
    done (took 0.090295672 seconds)
    (87/341) benchmarking ("broadcast", "*", "Int64", "(true, true)")...
    done (took 0.077178424 seconds)
    (88/341) benchmarking ("collect", "all", "BigFloat", 1)...
    done (took 0.157183245 seconds)
    (89/341) benchmarking ("perf_sum3", "Int8", 1)...
    done (took 0.086696279 seconds)
    (90/341) benchmarking ("skipmissing", "collect", "Union{Missing, Int8}", 1)...
    done (took 0.107518724 seconds)
    (91/341) benchmarking ("perf_binaryop", "*", "Int8", "(true, true)")...
    done (took 0.091021862 seconds)
    (92/341) benchmarking ("map", "*", "Float32", "(true, true)")...
    done (took 0.430466662 seconds)
    (93/341) benchmarking ("map", "*", "BigInt", "(false, true)")...
    done (took 0.211060324 seconds)
    (94/341) benchmarking ("map", "identity", "Bool", 1)...
    done (took 0.110853086 seconds)
    (95/341) benchmarking ("broadcast", "abs", "Complex{Float64}", 0)...
    done (took 0.196822977 seconds)
    (96/341) benchmarking ("broadcast", "*", "BigInt", "(true, true)")...
    done (took 0.07700574 seconds)
    (97/341) benchmarking ("map", "identity", "BigFloat", 1)...
    done (took 0.095736665 seconds)
    (98/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(false, true)")...
    done (took 0.075975765 seconds)
    (99/341) benchmarking ("perf_sum2", "BigInt", 0)...
    done (took 0.074863164 seconds)
    (100/341) benchmarking ("broadcast", "*", "BigInt", "(false, false)")...
    done (took 0.077264169 seconds)
    (101/341) benchmarking ("perf_binaryop", "*", "BigInt", "(true, true)")...
    done (took 0.106046712 seconds)
    (102/341) benchmarking ("map", "*", "Bool", "(true, true)")...
    done (took 0.101272354 seconds)
    (103/341) benchmarking ("broadcast", "*", "Float64", "(true, true)")...
    done (took 0.224531259 seconds)
    (104/341) benchmarking ("skipmissing", "collect", "Union{Missing, BigInt}", 1)...
    done (took 0.101912434 seconds)
    (105/341) benchmarking ("map", "*", "Int64", "(true, true)")...
    done (took 0.099541929 seconds)
    (106/341) benchmarking ("broadcast", "identity", "BigInt", 0)...
    done (took 0.075452535 seconds)
    (107/341) benchmarking ("map", "abs", "Int8", 1)...
    done (took 0.158739311 seconds)
    (108/341) benchmarking ("map", "identity", "Int64", 0)...
    done (took 0.103538248 seconds)
    (109/341) benchmarking ("map", "*", "Float64", "(false, false)")...
    done (took 0.212651249 seconds)
    (110/341) benchmarking ("skipmissing", "collect", "Complex{Float64}", 0)...
    done (took 0.099081388 seconds)
    (111/341) benchmarking ("collect", "all", "BigFloat", 0)...
    done (took 0.084207467 seconds)
    (112/341) benchmarking ("collect", "all", "Int64", 1)...
    done (took 0.099414795 seconds)
    (113/341) benchmarking ("map", "abs", "Int8", 0)...
    done (took 0.080260349 seconds)
    (114/341) benchmarking ("map", "*", "BigInt", "(true, true)")...
    done (took 0.081582904 seconds)
    (115/341) benchmarking ("map", "abs", "Complex{Float64}", 0)...
    done (took 0.141127626 seconds)
    (116/341) benchmarking ("perf_binaryop", "*", "Float32", "(false, true)")...
    done (took 0.081653173 seconds)
    (117/341) benchmarking ("collect", "filter", "Bool", 1)...
    done (took 0.190258685 seconds)
    (118/341) benchmarking ("perf_countnothing", "BigFloat", 0)...
    done (took 0.085648389 seconds)
    (119/341) benchmarking ("perf_simplecopy", "Bool", 0)...
    done (took 0.111190274 seconds)
    (120/341) benchmarking ("map", "abs", "Float64", 0)...
    done (took 0.158192059 seconds)
    (121/341) benchmarking ("perf_sum", "Float32", 1)...
    done (took 0.086787283 seconds)
    (122/341) benchmarking ("map", "abs", "Bool", 0)...
    done (took 0.162696321 seconds)
    (123/341) benchmarking ("perf_sum", "Float64", 1)...
    done (took 0.0889228 seconds)
    (124/341) benchmarking ("sort", "BigInt", 0)...
    done (took 0.237212678 seconds)
    (125/341) benchmarking ("perf_sum2", "Int64", 0)...
    done (took 0.09585416 seconds)
    (126/341) benchmarking ("sort", "Union{Missing, Float64}", 1)...
    done (took 0.212251473 seconds)
    (127/341) benchmarking ("perf_countequals", "Float32")...
    done (took 0.084610128 seconds)
    (128/341) benchmarking ("perf_sum", "BigInt", 1)...
    done (took 0.084110813 seconds)
    (129/341) benchmarking ("perf_sum4", "Bool", 1)...
    done (took 0.084594666 seconds)
    (130/341) benchmarking ("sort", "Int8", 0)...
    done (took 0.144994141 seconds)
    (131/341) benchmarking ("perf_sum2", "Float32", 1)...
    done (took 0.075377493 seconds)
    (132/341) benchmarking ("map", "*", "Complex{Float64}", "(true, true)")...
    done (took 0.077022256 seconds)
    (133/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Float32}", 0)...
    done (took 0.104169009 seconds)
    (134/341) benchmarking ("skipmissing", "collect", "Union{Missing, Float64}", 1)...
    done (took 0.105267668 seconds)
    (135/341) benchmarking ("perf_binaryop", "*", "Bool", "(true, true)")...
    done (took 0.10135287 seconds)
    (136/341) benchmarking ("perf_simplecopy", "Bool", 1)...
    done (took 0.074674731 seconds)
    (137/341) benchmarking ("perf_sum", "Float32", 0)...
    done (took 0.078787343 seconds)
    (138/341) benchmarking ("map", "*", "BigInt", "(false, false)")...
    done (took 0.079272584 seconds)
    (139/341) benchmarking ("perf_sum2", "Int8", 0)...
    done (took 0.089450943 seconds)
    (140/341) benchmarking ("broadcast", "*", "Float64", "(false, false)")...
    done (took 0.077295972 seconds)
    (141/341) benchmarking ("perf_sum", "BigInt", 0)...
    done (took 0.077487488 seconds)
    (142/341) benchmarking ("perf_simplecopy", "Int64", 0)...
    done (took 0.093729941 seconds)
    (143/341) benchmarking ("perf_sum2", "Float64", 0)...
    done (took 0.085586151 seconds)
    (144/341) benchmarking ("perf_sum3", "Bool", 0)...
    done (took 0.084195775 seconds)
    (145/341) benchmarking ("perf_countequals", "Int64")...
    done (took 0.084339462 seconds)
    (146/341) benchmarking ("perf_sum3", "Int8", 0)...
    done (took 0.073736827 seconds)
    (147/341) benchmarking ("perf_sum3", "BigInt", 1)...
    done (took 0.083801617 seconds)
    (148/341) benchmarking ("map", "identity", "Complex{Float64}", 0)...
    done (took 0.09865504 seconds)
    (149/341) benchmarking ("collect", "all", "Complex{Float64}", 0)...
    done (took 0.080096488 seconds)
    (150/341) benchmarking ("perf_sum4", "Float64", 1)...
    done (took 0.08650469 seconds)
    (151/341) benchmarking ("collect", "filter", "Bool", 0)...
    done (took 0.079173931 seconds)
    (152/341) benchmarking ("perf_sum4", "Int8", 0)...
    done (took 0.086269185 seconds)
    (153/341) benchmarking ("perf_countequals", "Bool")...
    done (took 0.084703622 seconds)
    (154/341) benchmarking ("skipmissing", "collect", "Union{Missing, Int64}", 1)...
    done (took 0.103942021 seconds)
    (155/341) benchmarking ("perf_sum3", "BigFloat", 0)...
    done (took 0.074525281 seconds)
    (156/341) benchmarking ("skipmissing", "collect", "Union{Missing, BigFloat}", 1)...
    done (took 0.114258282 seconds)
    (157/341) benchmarking ("perf_sum4", "Float32", 1)...
    done (took 0.08797844 seconds)
    (158/341) benchmarking ("perf_binaryop", "*", "Float64", "(false, false)")...
    done (took 0.114412469 seconds)
    (159/341) benchmarking ("skipmissing", "collect", "Union{Nothing, BigInt}", 0)...
    done (took 0.099295166 seconds)
    (160/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Complex{Float64}}", 0)...
    done (took 0.15322845 seconds)
    (161/341) benchmarking ("map", "*", "Int64", "(false, true)")...
    done (took 0.077386803 seconds)
    (162/341) benchmarking ("broadcast", "abs", "Int8", 1)...
    done (took 0.245451449 seconds)
    (163/341) benchmarking ("perf_simplecopy", "Complex{Float64}", 0)...
    done (took 0.076099582 seconds)
    (164/341) benchmarking ("collect", "all", "BigInt", 0)...
    done (took 0.145081757 seconds)
    (165/341) benchmarking ("perf_sum", "BigFloat", 0)...
    done (took 0.076408876 seconds)
    (166/341) benchmarking ("map", "*", "Int8", "(false, false)")...
    done (took 0.076713375 seconds)
    (167/341) benchmarking ("sort", "Union{Missing, BigInt}", 1)...
    done (took 0.204669901 seconds)
    (168/341) benchmarking ("perf_sum4", "Complex{Float64}", 1)...
    done (took 0.083757906 seconds)
    (169/341) benchmarking ("sort", "Float32", 0)...
    done (took 0.149924933 seconds)
    (170/341) benchmarking ("collect", "all", "Float64", 0)...
    done (took 0.100174158 seconds)
    (171/341) benchmarking ("sort", "Union{Missing, Int64}", 1)...
    done (took 0.202555221 seconds)
    (172/341) benchmarking ("map", "identity", "Int8", 1)...
    done (took 0.088696747 seconds)
    (173/341) benchmarking ("collect", "filter", "Float32", 1)...
    done (took 0.176850102 seconds)
    (174/341) benchmarking ("sort", "BigFloat", 0)...
    done (took 0.138492379 seconds)
    (175/341) benchmarking ("perf_countnothing", "Bool", 0)...
    done (took 0.086143804 seconds)
    (176/341) benchmarking ("broadcast", "abs", "Int8", 0)...
    done (took 0.09330004 seconds)
    (177/341) benchmarking ("broadcast", "abs", "BigInt", 1)...
    done (took 0.247498844 seconds)
    (178/341) benchmarking ("perf_sum2", "Int8", 1)...
    done (took 0.075607505 seconds)
    (179/341) benchmarking ("map", "*", "Float64", "(false, true)")...
    done (took 0.100549745 seconds)
    (180/341) benchmarking ("perf_countnothing", "Bool", 1)...
    done (took 0.085359249 seconds)
    (181/341) benchmarking ("map", "abs", "BigFloat", 1)...
    done (took 0.089494888 seconds)
    (182/341) benchmarking ("sort", "Union{Nothing, BigFloat}", 0)...
    done (took 0.155035944 seconds)
    (183/341) benchmarking ("broadcast", "abs", "Bool", 0)...
    done (took 0.079002816 seconds)
    (184/341) benchmarking ("broadcast", "identity", "Int64", 1)...
    done (took 0.19063046 seconds)
    (185/341) benchmarking ("perf_sum2", "BigFloat", 0)...
    done (took 0.075576986 seconds)
    (186/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Int8}", 0)...
    done (took 0.136606682 seconds)
    (187/341) benchmarking ("perf_binaryop", "*", "Complex{Float64}", "(false, true)")...
    done (took 0.075972723 seconds)
    (188/341) benchmarking ("broadcast", "*", "BigFloat", "(true, true)")...
    done (took 0.077174949 seconds)
    (189/341) benchmarking ("map", "*", "Float32", "(false, false)")...
    done (took 0.07615506 seconds)
    (190/341) benchmarking ("collect", "filter", "Complex{Float64}", 0)...
    done (took 0.187417376 seconds)
    (191/341) benchmarking ("perf_simplecopy", "Float32", 0)...
    done (took 0.074931619 seconds)
    (192/341) benchmarking ("broadcast", "*", "BigFloat", "(false, true)")...
    done (took 0.077945908 seconds)
    (193/341) benchmarking ("perf_sum2", "Int64", 1)...
    done (took 0.074457456 seconds)
    (194/341) benchmarking ("perf_simplecopy", "BigFloat", 0)...
    done (took 0.08429899 seconds)
    (195/341) benchmarking ("skipmissing", "sum", "Complex{Float64}", 0)...
    done (took 0.106390991 seconds)
    (196/341) benchmarking ("perf_sum3", "Float32", 1)...
    done (took 0.086324781 seconds)
    (197/341) benchmarking ("skipmissing", "sum", "Bool", 0)...
    done (took 0.107076125 seconds)
    (198/341) benchmarking ("broadcast", "abs", "BigInt", 0)...
    done (took 0.07713219 seconds)
    (199/341) benchmarking ("perf_binaryop", "*", "Bool", "(false, false)")...
    done (took 0.074820302 seconds)
    (200/341) benchmarking ("skipmissing", "collect", "Float32", 0)...
    done (took 0.089551846 seconds)
    (201/341) benchmarking ("broadcast", "*", "Int8", "(true, true)")...
    done (took 0.221416721 seconds)
    (202/341) benchmarking ("sort", "Union{Missing, Float32}", 1)...
    done (took 0.20610727 seconds)
    (203/341) benchmarking ("perf_binaryop", "*", "Float32", "(false, false)")...
    done (took 0.082923595 seconds)
    (204/341) benchmarking ("broadcast", "identity", "Complex{Float64}", 0)...
    done (took 0.211370025 seconds)
    (205/341) benchmarking ("map", "identity", "Float64", 1)...
    done (took 0.092926081 seconds)
    (206/341) benchmarking ("perf_sum4", "Int8", 1)...
    done (took 0.0855314 seconds)
    (207/341) benchmarking ("map", "*", "Float32", "(false, true)")...
    done (took 0.081031525 seconds)
    (208/341) benchmarking ("map", "identity", "Bool", 0)...
    done (took 0.07957865 seconds)
    (209/341) benchmarking ("skipmissing", "sum", "Union{Missing, Int8}", 1)...
    done (took 0.153501361 seconds)
    (210/341) benchmarking ("perf_binaryop", "*", "BigInt", "(false, true)")...
    done (took 0.079843195 seconds)
    (211/341) benchmarking ("collect", "filter", "BigInt", 0)...
    done (took 0.175658718 seconds)
    (212/341) benchmarking ("perf_simplecopy", "Float64", 1)...
    done (took 0.097532745 seconds)
    (213/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Complex{Float64}}", 0)...
    done (took 0.104835847 seconds)
    (214/341) benchmarking ("broadcast", "abs", "Int64", 1)...
    done (took 0.420525016 seconds)
    (215/341) benchmarking ("collect", "filter", "Float32", 0)...
    done (took 0.079808048 seconds)
    (216/341) benchmarking ("perf_binaryop", "*", "Complex{Float64}", "(true, true)")...
    done (took 0.07741705 seconds)
    (217/341) benchmarking ("skipmissing", "sum", "BigFloat", 0)...
    done (took 0.108631112 seconds)
    (218/341) benchmarking ("skipmissing", "sum", "Union{Missing, BigFloat}", 1)...
    done (took 0.139034957 seconds)
    (219/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Int64}", 0)...
    done (took 0.12684523 seconds)
    (220/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Float64}", 0)...
    done (took 0.144773487 seconds)
    (221/341) benchmarking ("broadcast", "abs", "Float32", 0)...
    done (took 0.196596156 seconds)
    (222/341) benchmarking ("map", "identity", "BigFloat", 0)...
    done (took 0.076448363 seconds)
    (223/341) benchmarking ("sort", "Union{Nothing, Float64}", 0)...
    done (took 0.177909762 seconds)
    (224/341) benchmarking ("perf_sum4", "Float32", 0)...
    done (took 0.083367229 seconds)
    (225/341) benchmarking ("broadcast", "identity", "Bool", 0)...
    done (took 0.207407169 seconds)
    (226/341) benchmarking ("perf_sum", "Int64", 1)...
    done (took 0.084366652 seconds)
    (227/341) benchmarking ("skipmissing", "sum", "Float64", 0)...
    done (took 0.080155027 seconds)
    (228/341) benchmarking ("broadcast", "abs", "Float64", 0)...
    done (took 0.075173323 seconds)
    (229/341) benchmarking ("perf_simplecopy", "BigInt", 0)...
    done (took 0.082335496 seconds)
    (230/341) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.086540484 seconds)
    (231/341) benchmarking ("perf_countequals", "Float64")...
    done (took 0.084097891 seconds)
    (232/341) benchmarking ("skipmissing", "collect", "Int64", 0)...
    done (took 0.089443954 seconds)
    (233/341) benchmarking ("perf_sum3", "BigInt", 0)...
    done (took 0.075106741 seconds)
    (234/341) benchmarking ("collect", "all", "Int8", 1)...
    done (took 0.082714775 seconds)
    (235/341) benchmarking ("perf_sum", "Bool", 0)...
    done (took 0.088495931 seconds)
    (236/341) benchmarking ("perf_countnothing", "Float32", 1)...
    done (took 0.086638282 seconds)
    (237/341) benchmarking ("perf_simplecopy", "Int64", 1)...
    done (took 0.075322237 seconds)
    (238/341) benchmarking ("collect", "all", "Float64", 1)...
    done (took 0.081793461 seconds)
    (239/341) benchmarking ("broadcast", "*", "Int8", "(false, false)")...
    done (took 0.076808461 seconds)
    (240/341) benchmarking ("perf_countnothing", "Complex{Float64}", 1)...
    done (took 0.085867528 seconds)
    (241/341) benchmarking ("perf_countnothing", "Complex{Float64}", 0)...
    done (took 0.084884441 seconds)
    (242/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(true, true)")...
    done (took 0.076477326 seconds)
    (243/341) benchmarking ("sort", "Union{Nothing, Int64}", 0)...
    done (took 0.176071504 seconds)
    (244/341) benchmarking ("map", "abs", "Float32", 1)...
    done (took 0.161198232 seconds)
    (245/341) benchmarking ("skipmissing", "sum", "Union{Missing, Float64}", 1)...
    done (took 0.145126629 seconds)
    (246/341) benchmarking ("perf_sum4", "Complex{Float64}", 0)...
    done (took 0.079898376 seconds)
    (247/341) benchmarking ("map", "identity", "Float32", 1)...
    done (took 0.075269909 seconds)
    (248/341) benchmarking ("map", "*", "Int8", "(false, true)")...
    done (took 0.077768142 seconds)
    (249/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Bool}", 0)...
    done (took 0.130798104 seconds)
    (250/341) benchmarking ("broadcast", "abs", "Complex{Float64}", 1)...
    done (took 0.07537859 seconds)
    (251/341) benchmarking ("perf_sum4", "Float64", 0)...
    done (took 0.084086951 seconds)
    (252/341) benchmarking ("perf_sum3", "Int64", 0)...
    done (took 0.084836351 seconds)
    (253/341) benchmarking ("map", "*", "BigFloat", "(false, true)")...
    done (took 0.093707554 seconds)
    (254/341) benchmarking ("broadcast", "*", "Bool", "(true, true)")...
    done (took 0.080117738 seconds)
    (255/341) benchmarking ("broadcast", "*", "Float32", "(true, true)")...
    done (took 0.075812557 seconds)
    (256/341) benchmarking ("map", "abs", "Int64", 0)...
    done (took 0.14680411 seconds)
    (257/341) benchmarking ("perf_sum", "Bool", 1)...
    done (took 0.085121689 seconds)
    (258/341) benchmarking ("map", "abs", "Float32", 0)...
    done (took 0.075412406 seconds)
    (259/341) benchmarking ("collect", "filter", "Float64", 0)...
    done (took 0.231023486 seconds)
    (260/341) benchmarking ("perf_sum", "Int8", 1)...
    done (took 0.083293181 seconds)
    (261/341) benchmarking ("perf_sum2", "Float64", 1)...
    done (took 0.075525701 seconds)
    (262/341) benchmarking ("perf_sum3", "Complex{Float64}", 1)...
    done (took 0.075612093 seconds)
    (263/341) benchmarking ("collect", "filter", "Complex{Float64}", 1)...
    done (took 0.079895496 seconds)
    (264/341) benchmarking ("collect", "filter", "Float64", 1)...
    done (took 0.079256774 seconds)
    (265/341) benchmarking ("map", "*", "Float64", "(true, true)")...
    done (took 0.076180029 seconds)
    (266/341) benchmarking ("skipmissing", "sum", "Int8", 0)...
    done (took 0.103921663 seconds)
    (267/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Int8}", 0)...
    done (took 0.09940024 seconds)
    (268/341) benchmarking ("perf_binaryop", "*", "BigInt", "(false, false)")...
    done (took 0.077538384 seconds)
    (269/341) benchmarking ("perf_sum3", "Float64", 0)...
    done (took 0.073855514 seconds)
    (270/341) benchmarking ("broadcast", "identity", "Float64", 0)...
    done (took 0.196299425 seconds)
    (271/341) benchmarking ("map", "identity", "Int64", 1)...
    done (took 0.077077706 seconds)
    (272/341) benchmarking ("perf_countnothing", "Float64", 0)...
    done (took 0.086968217 seconds)
    (273/341) benchmarking ("sort", "Int64", 0)...
    done (took 0.079017753 seconds)
    (274/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Float64}", 0)...
    done (took 0.099078511 seconds)
    (275/341) benchmarking ("perf_countnothing", "BigInt", 0)...
    done (took 0.081739276 seconds)
    (276/341) benchmarking ("map", "*", "Bool", "(false, true)")...
    done (took 0.076979917 seconds)
    (277/341) benchmarking ("collect", "filter", "BigInt", 1)...
    done (took 0.079904851 seconds)
    (278/341) benchmarking ("broadcast", "*", "Float64", "(false, true)")...
    done (took 0.076890513 seconds)
    (279/341) benchmarking ("skipmissing", "sum", "Union{Missing, Complex{Float64}}", 1)...
    done (took 0.158293033 seconds)
    (280/341) benchmarking ("perf_sum4", "Bool", 0)...
    done (took 0.084731033 seconds)
    (281/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Int64}", 0)...
    done (took 0.097782158 seconds)
    (282/341) benchmarking ("perf_simplecopy", "BigFloat", 1)...
    done (took 0.076218348 seconds)
    (283/341) benchmarking ("broadcast", "abs", "BigFloat", 0)...
    done (took 0.07583304 seconds)
    (284/341) benchmarking ("map", "abs", "Bool", 1)...
    done (took 0.089751156 seconds)
    (285/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Float32}", 0)...
    done (took 0.141536736 seconds)
    (286/341) benchmarking ("collect", "filter", "BigFloat", 1)...
    done (took 0.080307188 seconds)
    (287/341) benchmarking ("perf_sum2", "Bool", 0)...
    done (took 0.075081072 seconds)
    (288/341) benchmarking ("perf_sum4", "Int64", 1)...
    done (took 0.084202742 seconds)
    (289/341) benchmarking ("perf_countnothing", "Int64", 0)...
    done (took 0.087162931 seconds)
    (290/341) benchmarking ("collect", "filter", "Int8", 1)...
    done (took 0.078245741 seconds)
    (291/341) benchmarking ("perf_simplecopy", "Float64", 0)...
    done (took 0.075661031 seconds)
    (292/341) benchmarking ("perf_binaryop", "*", "Float64", "(true, true)")...
    done (took 0.076270163 seconds)
    (293/341) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.085874126 seconds)
    (294/341) benchmarking ("perf_binaryop", "*", "Int8", "(false, true)")...
    done (took 0.074966204 seconds)
    (295/341) benchmarking ("broadcast", "identity", "BigFloat", 0)...
    done (took 0.074984108 seconds)
    (296/341) benchmarking ("perf_sum2", "Complex{Float64}", 0)...
    done (took 0.076256144 seconds)
    (297/341) benchmarking ("perf_countnothing", "Int64", 1)...
    done (took 0.084341058 seconds)
    (298/341) benchmarking ("perf_countnothing", "BigInt", 1)...
    done (took 0.078621407 seconds)
    (299/341) benchmarking ("perf_binaryop", "*", "Bool", "(false, true)")...
    done (took 0.076179493 seconds)
    (300/341) benchmarking ("broadcast", "*", "Int8", "(false, true)")...
    done (took 0.075308865 seconds)
    (301/341) benchmarking ("broadcast", "*", "Complex{Float64}", "(false, true)")...
    done (took 0.076895054 seconds)
    (302/341) benchmarking ("skipmissing", "sum", "Union{Missing, Int64}", 1)...
    done (took 0.152730165 seconds)
    (303/341) benchmarking ("broadcast", "*", "Int64", "(false, false)")...
    done (took 0.076740252 seconds)
    (304/341) benchmarking ("map", "abs", "Float64", 1)...
    done (took 0.091371509 seconds)
    (305/341) benchmarking ("perf_sum3", "Float32", 0)...
    done (took 0.073996061 seconds)
    (306/341) benchmarking ("skipmissing", "collect", "Union{Missing, Float32}", 1)...
    done (took 0.104890544 seconds)
    (307/341) benchmarking ("broadcast", "abs", "Int64", 0)...
    done (took 0.075251942 seconds)
    (308/341) benchmarking ("sort", "Union{Missing, BigFloat}", 1)...
    done (took 0.206301707 seconds)
    (309/341) benchmarking ("broadcast", "identity", "Bool", 1)...
    done (took 0.079923975 seconds)
    (310/341) benchmarking ("map", "abs", "Int64", 1)...
    done (took 0.090024025 seconds)
    (311/341) benchmarking ("perf_simplecopy", "BigInt", 1)...
    done (took 0.07432973 seconds)
    (312/341) benchmarking ("perf_sum", "Float64", 0)...
    done (took 0.077550517 seconds)
    (313/341) benchmarking ("perf_simplecopy", "Int8", 1)...
    done (took 0.075187971 seconds)
    (314/341) benchmarking ("perf_countnothing", "Float32", 0)...
    done (took 0.087927051 seconds)
    (315/341) benchmarking ("map", "identity", "BigInt", 0)...
    done (took 0.098964138 seconds)
    (316/341) benchmarking ("sort", "Union{Nothing, Bool}", 0)...
    done (took 0.16791758 seconds)
    (317/341) benchmarking ("perf_binaryop", "*", "Int64", "(true, true)")...
    done (took 0.075079955 seconds)
    (318/341) benchmarking ("collect", "all", "BigInt", 1)...
    done (took 0.091883308 seconds)
    (319/341) benchmarking ("map", "abs", "Complex{Float64}", 1)...
    done (took 0.090544199 seconds)
    (320/341) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.086003053 seconds)
    (321/341) benchmarking ("map", "*", "BigFloat", "(true, true)")...
    done (took 0.07859645 seconds)
    (322/341) benchmarking ("map", "identity", "Complex{Float64}", 1)...
    done (took 0.079363155 seconds)
    (323/341) benchmarking ("broadcast", "identity", "Complex{Float64}", 1)...
    done (took 0.075287554 seconds)
    (324/341) benchmarking ("collect", "all", "Bool", 1)...
    done (took 0.080278201 seconds)
    (325/341) benchmarking ("map", "identity", "BigInt", 1)...
    done (took 0.075790599 seconds)
    (326/341) benchmarking ("skipmissing", "sum", "Int64", 0)...
    done (took 0.08274449 seconds)
    (327/341) benchmarking ("perf_binaryop", "*", "Float64", "(false, true)")...
    done (took 0.074873543 seconds)
    (328/341) benchmarking ("perf_countnothing", "Int8", 0)...
    done (took 0.084931298 seconds)
    (329/341) benchmarking ("perf_sum4", "BigFloat", 1)...
    done (took 0.076002191 seconds)
    (330/341) benchmarking ("perf_countnothing", "Int8", 1)...
    done (took 0.084153647 seconds)
    (331/341) benchmarking ("perf_sum3", "Int64", 1)...
    done (took 0.074036536 seconds)
    (332/341) benchmarking ("broadcast", "abs", "Float32", 1)...
    done (took 0.075416997 seconds)
    (333/341) benchmarking ("perf_binaryop", "*", "Int8", "(false, false)")...
    done (took 0.074946227 seconds)
    (334/341) benchmarking ("skipmissing", "collect", "Union{Missing, Bool}", 1)...
    done (took 0.103535192 seconds)
    (335/341) benchmarking ("broadcast", "identity", "Int64", 0)...
    done (took 0.076429727 seconds)
    (336/341) benchmarking ("perf_sum3", "Bool", 1)...
    done (took 0.074125703 seconds)
    (337/341) benchmarking ("skipmissing", "sum", "BigInt", 0)...
    done (took 0.10361036 seconds)
    (338/341) benchmarking ("broadcast", "identity", "Float64", 1)...
    done (took 0.075747504 seconds)
    (339/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Bool}", 0)...
    done (took 0.096677969 seconds)
    (340/341) benchmarking ("skipmissing", "collect", "BigFloat", 0)...
    done (took 0.09251538 seconds)
    (341/341) benchmarking ("collect", "filter", "Int64", 0)...
    done (took 0.077901008 seconds)
  done (took 40.87575407 seconds)
done (took 42.269739892 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.096680089 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.111816876 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.08422801 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.105950463 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.095697551 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.110055327 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.084672227 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.090873223 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.09363667 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.096378362 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.095079664 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.083261266 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.08642144 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.086685558 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.084325396 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.110503037 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.089647744 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.085405924 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.085013752 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.075047696 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.085954224 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.074721859 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.07480452 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.083255515 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.090537942 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.084298748 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.086671174 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.08635936 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.075759673 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.075973308 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.081385079 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.085267162 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.074447171 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.089925309 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.086153389 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.085520675 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.086644809 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.089591698 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.075344021 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.076066536 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.089551517 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.076041023 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.088237982 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.087198015 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.082507693 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.084870543 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.086439838 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.091592927 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.11418188 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.081234478 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.0906603 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.091228276 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.090094867 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.08305376 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.081638343 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.0852534 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.083654358 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.111708859 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.084095366 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.081584411 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.088130712 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.086853372 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.08375167 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.085727255 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.08527119 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.088523326 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.091196881 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.085630126 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.088596362 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.084066299 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.075717476 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.085273299 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.081064196 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.07596112 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.089388618 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.087057266 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.074440551 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.081093036 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.084971984 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.085238787 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.075681152 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.081980211 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.073665879 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.081274983 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.081932449 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.085184151 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.08373115 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.087088963 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.075784319 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.085248224 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.084026091 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.084285504 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.075193029 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.090357768 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.075733656 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.083310732 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.07581799 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.075540866 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.074814012 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.081215745 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.075476452 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.081351552 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.084687115 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.074716855 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.081311283 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.092755764 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.075625824 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.084220165 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.07495881 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.076226081 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.090812414 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.088391087 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.075790126 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.081238864 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.074858388 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.083047527 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.075147253 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.075322514 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.075442115 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.078908057 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.094224495 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.080892911 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.086331959 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.088242523 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.09632214 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.079999307 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.086319524 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.088015741 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.078866727 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.088369275 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.080643399 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.080382086 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.088297838 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.101172253 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.085214972 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.080541208 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.088666611 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.086588098 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.088943782 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.078214947 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.091017592 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.088174694 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.08677623 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.089529688 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.076464913 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.089097008 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.081452522 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.081174855 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.075362596 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.076341413 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.076078292 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.077450746 seconds)
done (took 14.464265743 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.095836808 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.129800362 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.131587786 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.103047355 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.093157554 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.076525467 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.084735134 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.103989183 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.077845733 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.111404208 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.101144025 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.102233153 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.122668842 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.074778951 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.07613164 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.076297174 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.077136105 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.08876207 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.10677568 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.100768244 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.122875321 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.074997744 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.101837011 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.099185749 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.092198557 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.102170092 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.077440389 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.077069052 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.07998809 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.100287338 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.109229744 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.084224892 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.077382722 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.107436607 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.098778684 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.091022964 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.076103317 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.086308872 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.076158901 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.074982459 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.07750315 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.099666962 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.086488882 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.085770811 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.076816473 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.084598716 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.07925959 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.102960276 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.111385276 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.092886126 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.110813381 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.120308971 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.082794927 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.094071517 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.0742415 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.105255 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.087684347 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.075467116 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.075504476 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.082233179 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.075198262 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.078916807 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.088351614 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.086357948 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.081895217 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.092201991 seconds)
  done (took 7.529672992 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.099583972 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.105799894 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.092737054 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.093790145 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.07492795 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.074685179 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.074902171 seconds)
  done (took 2.171615104 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.092773039 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.095787974 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.101039983 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.100397447 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.090596929 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.101049636 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.083687582 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.090364221 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.108421402 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.074367929 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.099049672 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.109250091 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.079836167 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.091209922 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.103651409 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.095623319 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.103536936 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.092177329 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.077349145 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.103051417 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.082095613 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.109108408 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.089965904 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.077967702 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.08903028 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.076347641 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.110910375 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.084684042 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.07737248 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.077726088 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.077121977 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.107143307 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.089508995 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.090753365 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.077445735 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.09073319 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.090209776 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.079389643 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.087445674 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.087085679 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.091736769 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.078159047 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.076572282 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.076934126 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.078736355 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.087811718 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.074631987 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.085859276 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.076523615 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.09619963 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.074913504 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.088585568 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.079973183 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.083847668 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.081969288 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.081414824 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.085353272 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.079001591 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.097281224 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.080518461 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.096413331 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.095618941 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.090400467 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.0954266 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.091509641 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.090776087 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.094659298 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.080453862 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.087854896 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.079253149 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.095223021 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.080952784 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.079450595 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.10267993 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.076025454 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.102943981 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.102409579 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.077888886 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.092052591 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.077082731 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.077274202 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.101833336 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.102476474 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.082689424 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.078381715 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.082578309 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.079050781 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.079345216 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.09333543 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.105674652 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.078486252 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.081989933 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.076966185 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.081738651 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.0811248 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.093451368 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.075497773 seconds)
  done (took 10.00983522 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.087164996 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.077857067 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.079051309 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.077877024 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.077394928 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.078083944 seconds)
  done (took 2.045720676 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.105176789 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.077088665 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.091766934 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.076856301 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.117886488 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.094846813 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.093637039 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.087612475 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.092219991 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.090257489 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.09372617 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.09635689 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.100441377 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.085422715 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.095658021 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.092002284 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.095273188 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.087263338 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.090371869 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.080801753 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.093132767 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.080398425 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.082291975 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.099187063 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.083172326 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.091828897 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.092300689 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.092066628 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.091657502 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.090148775 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.079762227 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.081984874 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.087291779 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.087731342 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.093991706 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.0877737 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.078545047 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.085343871 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.082087744 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.081435929 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.096070536 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.081320012 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.08170238 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.084474603 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.088865257 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.087325529 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.08516309 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.088218826 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.092692536 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.084103148 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.085399978 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.078595895 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.081257211 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.08420405 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.087226328 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.088489201 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.083867864 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.094216077 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.079088006 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.089991273 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.077979906 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.083049729 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.089088285 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.081389524 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.085952631 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.084227286 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.089467902 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.080694556 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.079862287 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.07710635 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.08413594 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.078437066 seconds)
  done (took 7.782159722 seconds)
done (took 31.233584874 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.628833817 seconds)
  done (took 2.104566865 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.816025758 seconds)
  done (took 2.324972972 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 0.108152022 seconds)
  done (took 1.632906084 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.509077338 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.608250949 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.868628682 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.169856821 seconds)
  done (took 3.648355578 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.93391415 seconds)
  done (took 2.491688102 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.301381177 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.257729128 seconds)
  done (took 2.158691742 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.547298969 seconds)
  done (took 2.053537176 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.245883913 seconds)
  done (took 2.81862458 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.270597533 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.190591863 seconds)
  done (took 1.963883004 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.50038685 seconds)
  done (took 2.036669313 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 5.213012892 seconds)
  done (took 6.71486386 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.260405942 seconds)
  done (took 1.836347094 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.276724108 seconds)
  done (took 1.775198487 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 0.919988643 seconds)
  done (took 2.441980315 seconds)
done (took 37.527862986 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.103217863 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.096415845 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.096085014 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.09168928 seconds)
  done (took 1.870781589 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.0868022 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.079926446 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.08399086 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.081314615 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.083832316 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.079547559 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.081938744 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.08235951 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.079706184 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.0811742 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.08119864 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.081008636 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.08449451 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.083712007 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.079397282 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.083230471 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.084144513 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.081113546 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.082755515 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.07989183 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.078071835 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.082812598 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.083289719 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.078897346 seconds)
  done (took 3.483735084 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.090522656 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.088376616 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.089805977 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.084632961 seconds)
  done (took 1.867977229 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.092311318 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.101341517 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.089072074 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.088997922 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.101465071 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.097649428 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.077129206 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.07717502 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.07854882 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.088234108 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.075601535 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.106258642 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.108722517 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.090590931 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.091446395 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.073332155 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.075481275 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.099110206 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.089263119 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.088783193 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.078755416 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.087594078 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.076068341 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.106543144 seconds)
  done (took 3.662253923 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.101403512 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.076294523 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.098121049 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.105069383 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.108425841 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.076612263 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.098716652 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.106701617 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.148619353 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.077980841 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.083983638 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.076554417 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.120409737 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.076675021 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.099598685 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.12611792 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.130311654 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.080969399 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.112769949 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.0761709 seconds)
  done (took 3.511029771 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.097279138 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.080215685 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.080697244 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.077176287 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.089751868 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.08333487 seconds)
  done (took 2.034886134 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.079329223 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.077053427 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.075817021 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.075901531 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.083618648 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.077999139 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.076241714 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.078108994 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.078988516 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.076957599 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.07711033 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.075264171 seconds)
  done (took 2.445039532 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.255099926 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.090493672 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.089896633 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.086567153 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.089182584 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.082494424 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.102852141 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.09178566 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.115903716 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.083293188 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.083139288 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.085765387 seconds)
  done (took 2.82690565 seconds)
  (9/13) benchmarking "index"...
    (1/608) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.247673319 seconds)
    (2/608) benchmarking ("sumrange", "Array{Int64,2}")...
    done (took 0.109681122 seconds)
    (3/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.08436769 seconds)
    (4/608) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.250090836 seconds)
    (5/608) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166786972 seconds)
    (6/608) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118817816 seconds)
    (7/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int64,Array{Int64,2}}")...
    done (took 0.18054929 seconds)
    (8/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int32,Array{Int32,2}}")...
    done (took 0.107460144 seconds)
    (9/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126283805 seconds)
    (10/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128910405 seconds)
    (11/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.120618586 seconds)
    (12/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float64,Array{Float64,2}}")...
    done (took 0.172643226 seconds)
    (13/608) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.1631098 seconds)
    (14/608) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109753434 seconds)
    (15/608) benchmarking ("sumrange_view", "Array{Float64,2}")...
    done (took 0.101459696 seconds)
    (16/608) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17474017 seconds)
    (17/608) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221682603 seconds)
    (18/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.122239117 seconds)
    (19/608) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149227468 seconds)
    (20/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.102017247 seconds)
    (21/608) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.141417599 seconds)
    (22/608) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17204048 seconds)
    (23/608) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.215960021 seconds)
    (24/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130311633 seconds)
    (25/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int32,Array{Int32,2}}")...
    done (took 0.178034121 seconds)
    (26/608) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216136446 seconds)
    (27/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int32,Array{Int32,2}}")...
    done (took 0.213279557 seconds)
    (28/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.171065236 seconds)
    (29/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134937942 seconds)
    (30/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124537852 seconds)
    (31/608) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151471237 seconds)
    (32/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.176389461 seconds)
    (33/608) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180792904 seconds)
    (34/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.102726979 seconds)
    (35/608) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.088740001 seconds)
    (36/608) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190874045 seconds)
    (37/608) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149937073 seconds)
    (38/608) benchmarking ("sumvector", "Base.ReinterpretArray{Float32,2,Int32,Array{Int32,2}}")...
    done (took 0.149610709 seconds)
    (39/608) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174767081 seconds)
    (40/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130287974 seconds)
    (41/608) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120703417 seconds)
    (42/608) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206414195 seconds)
    (43/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float64,Array{Float64,2}}")...
    done (took 0.117128639 seconds)
    (44/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float64,Array{Float64,2}}")...
    done (took 0.163178799 seconds)
    (45/608) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178499822 seconds)
    (46/608) benchmarking ("sumeach", "Array{Float64,2}")...
    done (took 0.079604673 seconds)
    (47/608) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150249986 seconds)
    (48/608) benchmarking ("sumvector", "Array{Int64,2}")...
    done (took 0.114898073 seconds)
    (49/608) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16501545 seconds)
    (50/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float32,Array{Float32,2}}")...
    done (took 0.108961894 seconds)
    (51/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int64,Array{Int64,2}}")...
    done (took 0.170170229 seconds)
    (52/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.09641894 seconds)
    (53/608) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.397085 seconds)
    (54/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int64,Array{Int64,2}}")...
    done (took 0.105059429 seconds)
    (55/608) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.146454505 seconds)
    (56/608) benchmarking ("sumrange", "Base.ReinterpretArray{Float32,2,Int32,Array{Int32,2}}")...
    done (took 0.13666869 seconds)
    (57/608) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21798441 seconds)
    (58/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099769116 seconds)
    (59/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float64,Array{Float64,2}}")...
    done (took 0.097644564 seconds)
    (60/608) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182575569 seconds)
    (61/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115571165 seconds)
    (62/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.089056969 seconds)
    (63/608) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139538557 seconds)
    (64/608) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123518698 seconds)
    (65/608) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.130246811 seconds)
    (66/608) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.113141254 seconds)
    (67/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098834858 seconds)
    (68/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{Float32,2,Int32,Array{Int32,2}}")...
    done (took 0.155308363 seconds)
    (69/608) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233917794 seconds)
    (70/608) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157672982 seconds)
    (71/608) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.14903242 seconds)
    (72/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.094997172 seconds)
    (73/608) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134814304 seconds)
    (74/608) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121021751 seconds)
    (75/608) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.12691614 seconds)
    (76/608) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131932517 seconds)
    (77/608) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198448233 seconds)
    (78/608) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176558643 seconds)
    (79/608) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144632593 seconds)
    (80/608) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.081381974 seconds)
    (81/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125656275 seconds)
    (82/608) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169645536 seconds)
    (83/608) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151197387 seconds)
    (84/608) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.126570291 seconds)
    (85/608) benchmarking ("mapr_access", "Array{Int64,2}")...
    done (took 0.160900908 seconds)
    (86/608) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.139383839 seconds)
    (87/608) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.102770092 seconds)
    (88/608) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145651847 seconds)
    (89/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.175737545 seconds)
    (90/608) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137315689 seconds)
    (91/608) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148940835 seconds)
    (92/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float64,Array{Float64,2}}")...
    done (took 0.143015881 seconds)
    (93/608) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.097707899 seconds)
    (94/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Float32,2,Int32,Array{Int32,2}}")...
    done (took 0.150576243 seconds)
    (95/608) benchmarking ("sum", "3dsubarray")...
    done (took 0.138008138 seconds)
    (96/608) benchmarking ("sumlogical_view", "Array{Float64,2}")...
    done (took 0.142590818 seconds)
    (97/608) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135618142 seconds)
    (98/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154625735 seconds)
    (99/608) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138619048 seconds)
    (100/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float32,Array{Float32,2}}")...
    done (took 0.162237318 seconds)
    (101/608) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186738291 seconds)
    (102/608) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136031623 seconds)
    (103/608) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.082204757 seconds)
    (104/608) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13282892 seconds)
    (105/608) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113678243 seconds)
    (106/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090700738 seconds)
    (107/608) benchmarking "5d"...
    done (took 0.167180204 seconds)
    (108/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.08728608 seconds)
    (109/608) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.398249401 seconds)
    (110/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int32,Array{Int32,2}}")...
    done (took 0.151598672 seconds)
    (111/608) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.108506867 seconds)
    (112/608) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.137427669 seconds)
    (113/608) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141413855 seconds)
    (114/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.118353196 seconds)
    (115/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.117445812 seconds)
    (116/608) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163392475 seconds)
    (117/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int64,Array{Int64,2}}")...
    done (took 0.113138402 seconds)
    (118/608) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151274736 seconds)
    (119/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115296663 seconds)
    (120/608) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.094782725 seconds)
    (121/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109952206 seconds)
    (122/608) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.129505633 seconds)
    (123/608) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157572267 seconds)
    (124/608) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096469591 seconds)
    (125/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.117559524 seconds)
    (126/608) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123775925 seconds)
    (127/608) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.087640662 seconds)
    (128/608) benchmarking ("sumrange", "Array{Float64,2}")...
    done (took 0.091187604 seconds)
    (129/608) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144776881 seconds)
    (130/608) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.084691753 seconds)
    (131/608) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132261657 seconds)
    (132/608) benchmarking ("sumvector_view", "Array{Float64,2}")...
    done (took 0.101394455 seconds)
    (133/608) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.109436042 seconds)
    (134/608) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133653532 seconds)
    (135/608) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138790899 seconds)
    (136/608) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.090199498 seconds)
    (137/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137527963 seconds)
    (138/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113709503 seconds)
    (139/608) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.114907919 seconds)
    (140/608) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144728603 seconds)
    (141/608) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173554479 seconds)
    (142/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100195873 seconds)
    (143/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.092343009 seconds)
    (144/608) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181522256 seconds)
    (145/608) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134623201 seconds)
    (146/608) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.11441953 seconds)
    (147/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15682249 seconds)
    (148/608) benchmarking ("sumcartesian_view", "Array{Float64,2}")...
    done (took 0.114191705 seconds)
    (149/608) benchmarking ("sumelt", "Array{Float64,2}")...
    done (took 0.080811026 seconds)
    (150/608) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.134116221 seconds)
    (151/608) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.172978975 seconds)
    (152/608) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109543049 seconds)
    (153/608) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159597534 seconds)
    (154/608) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186886668 seconds)
    (155/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101344084 seconds)
    (156/608) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176107156 seconds)
    (157/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int32,Array{Int32,2}}")...
    done (took 0.103195514 seconds)
    (158/608) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115295126 seconds)
    (159/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.094640618 seconds)
    (160/608) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.119362357 seconds)
    (161/608) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135647762 seconds)
    (162/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134837855 seconds)
    (163/608) benchmarking "ind2sub"...
    done (took 0.14123543 seconds)
    (164/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092153292 seconds)
    (165/608) benchmarking ("sumlinear_view", "Array{Float64,2}")...
    done (took 0.131564133 seconds)
    (166/608) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.13572003 seconds)
    (167/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float32,Array{Float32,2}}")...
    done (took 0.141636456 seconds)
    (168/608) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181588759 seconds)
    (169/608) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.086071711 seconds)
    (170/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float64,Array{Float64,2}}")...
    done (took 0.105108371 seconds)
    (171/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110870719 seconds)
    (172/608) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.340289314 seconds)
    (173/608) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089692111 seconds)
    (174/608) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087616805 seconds)
    (175/608) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112214166 seconds)
    (176/608) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112747149 seconds)
    (177/608) benchmarking ("sumcolon", "Array{Float64,2}")...
    done (took 0.104088474 seconds)
    (178/608) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.105522101 seconds)
    (179/608) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.104908801 seconds)
    (180/608) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.111753016 seconds)
    (181/608) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143130156 seconds)
    (182/608) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133414221 seconds)
    (183/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113683993 seconds)
    (184/608) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136457223 seconds)
    (185/608) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105122292 seconds)
    (186/608) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170381139 seconds)
    (187/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int32,Array{Int32,2}}")...
    done (took 0.146707309 seconds)
    (188/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.095116756 seconds)
    (189/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float32,Array{Float32,2}}")...
    done (took 0.169677257 seconds)
    (190/608) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.113132728 seconds)
    (191/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11378125 seconds)
    (192/608) benchmarking ("sumelt", "1:100000")...
    done (took 0.079454217 seconds)
    (193/608) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.140531642 seconds)
    (194/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int64,Array{Int64,2}}")...
    done (took 0.10193931 seconds)
    (195/608) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164356538 seconds)
    (196/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.089035515 seconds)
    (197/608) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170635837 seconds)
    (198/608) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.131744557 seconds)
    (199/608) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126547698 seconds)
    (200/608) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129763657 seconds)
    (201/608) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092224916 seconds)
    (202/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.14686703 seconds)
    (203/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.087274412 seconds)
    (204/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float32,Array{Float32,2}}")...
    done (took 0.097236432 seconds)
    (205/608) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149488162 seconds)
    (206/608) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.084021473 seconds)
    (207/608) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123973006 seconds)
    (208/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int64,Array{Int64,2}}")...
    done (took 0.115591275 seconds)
    (209/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float64,Array{Float64,2}}")...
    done (took 0.137730717 seconds)
    (210/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.123674886 seconds)
    (211/608) benchmarking ("sumelt_boundscheck", "Array{Int64,2}")...
    done (took 0.081990902 seconds)
    (212/608) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124210004 seconds)
    (213/608) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.164429067 seconds)
    (214/608) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.141929644 seconds)
    (215/608) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.129839159 seconds)
    (216/608) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140965003 seconds)
    (217/608) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151939005 seconds)
    (218/608) benchmarking ("sumcolon_view", "Array{Float64,2}")...
    done (took 0.0878259 seconds)
    (219/608) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.142130053 seconds)
    (220/608) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120677085 seconds)
    (221/608) benchmarking ("sumelt", "Base.ReinterpretArray{Float32,2,Int32,Array{Int32,2}}")...
    done (took 0.100127444 seconds)
    (222/608) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.098617259 seconds)
    (223/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126291223 seconds)
    (224/608) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142393049 seconds)
    (225/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float64,Array{Float64,2}}")...
    done (took 0.117773048 seconds)
    (226/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int32,Array{Int32,2}}")...
    done (took 0.136750988 seconds)
    (227/608) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.081977217 seconds)
    (228/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float32,Array{Float32,2}}")...
    done (took 0.136156546 seconds)
    (229/608) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.091584402 seconds)
    (230/608) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11353244 seconds)
    (231/608) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.101755799 seconds)
    (232/608) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103681151 seconds)
    (233/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.092735259 seconds)
    (234/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Int32,3,Float64,Array{Float64,3}}")...
    done (took 0.168704272 seconds)
    (235/608) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157451272 seconds)
    (236/608) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136261187 seconds)
    (237/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.127190712 seconds)
    (238/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int32,Array{Int32,2}}")...
    done (took 0.114434342 seconds)
    (239/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.337127492 seconds)
    (240/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Float32,2,Int32,Array{Int32,2}}")...
    done (took 0.094351114 seconds)
    (241/608) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10973496 seconds)
    (242/608) benchmarking ("sumlogical_view", "Array{Int64,2}")...
    done (took 0.137854579 seconds)
    (243/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.161470802 seconds)
    (244/608) benchmarking ("sumeach", "1:100000")...
    done (took 0.086698268 seconds)
    (245/608) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129834014 seconds)
    (246/608) benchmarking ("sumvector", "1:100000")...
    done (took 0.130679132 seconds)
    (247/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int64,Array{Int64,2}}")...
    done (took 0.19899995 seconds)
    (248/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102075526 seconds)
    (249/608) benchmarking ("sumlogical", "1:100000")...
    done (took 0.163330201 seconds)
    (250/608) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163169259 seconds)
    (251/608) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140370638 seconds)
    (252/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109282408 seconds)
    (253/608) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142616382 seconds)
    (254/608) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.082297841 seconds)
    (255/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.081710202 seconds)
    (256/608) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.097422138 seconds)
    (257/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Int32,3,Float64,Array{Float64,3}}")...
    done (took 0.110062081 seconds)
    (258/608) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135963653 seconds)
    (259/608) benchmarking ("sumvector", "Array{Float64,2}")...
    done (took 0.108850975 seconds)
    (260/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Float32,2,Int32,Array{Int32,2}}")...
    done (took 0.137374419 seconds)
    (261/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.09376516 seconds)
    (262/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.092996005 seconds)
    (263/608) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123410904 seconds)
    (264/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.162771346 seconds)
    (265/608) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137715693 seconds)
    (266/608) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146204732 seconds)
    (267/608) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136570173 seconds)
    (268/608) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127848133 seconds)
    (269/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.171052524 seconds)
    (270/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float32,Array{Float32,2}}")...
    done (took 0.191606741 seconds)
    (271/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float32,Array{Float32,2}}")...
    done (took 0.131732877 seconds)
    (272/608) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.087109422 seconds)
    (273/608) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165768397 seconds)
    (274/608) benchmarking "4d"...
    done (took 0.152715562 seconds)
    (275/608) benchmarking ("sumlinear_view", "Array{Int64,2}")...
    done (took 0.134614676 seconds)
    (276/608) benchmarking ("sumlogical", "Base.ReinterpretArray{Float32,2,Int32,Array{Int32,2}}")...
    done (took 0.173355061 seconds)
    (277/608) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140043183 seconds)
    (278/608) benchmarking ("sumeach", "Base.ReinterpretArray{Int32,3,Float64,Array{Float64,3}}")...
    done (took 0.106558753 seconds)
    (279/608) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.138433154 seconds)
    (280/608) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124090822 seconds)
    (281/608) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.135871906 seconds)
    (282/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.186338123 seconds)
    (283/608) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14913707 seconds)
    (284/608) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231487819 seconds)
    (285/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int32,Array{Int32,2}}")...
    done (took 0.125855998 seconds)
    (286/608) benchmarking ("sumeach", "Array{Int64,2}")...
    done (took 0.085160244 seconds)
    (287/608) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130060804 seconds)
    (288/608) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139276022 seconds)
    (289/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float64,Array{Float64,2}}")...
    done (took 0.178813793 seconds)
    (290/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int32,Array{Int32,2}}")...
    done (took 0.169960772 seconds)
    (291/608) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174246027 seconds)
    (292/608) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.115341072 seconds)
    (293/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.089363157 seconds)
    (294/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.117587692 seconds)
    (295/608) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144622734 seconds)
    (296/608) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11377575 seconds)
    (297/608) benchmarking ("sumvector_view", "Array{Int64,2}")...
    done (took 0.095842591 seconds)
    (298/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float32,Array{Float32,2}}")...
    done (took 0.132695587 seconds)
    (299/608) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.352609246 seconds)
    (300/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109083685 seconds)
    (301/608) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.096048648 seconds)
    (302/608) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116902609 seconds)
    (303/608) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.087288159 seconds)
    (304/608) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106006377 seconds)
    (305/608) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137785137 seconds)
    (306/608) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131288757 seconds)
    (307/608) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152104769 seconds)
    (308/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Int32,3,Float64,Array{Float64,3}}")...
    done (took 0.097447641 seconds)
    (309/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float32,Array{Float32,2}}")...
    done (took 0.110694015 seconds)
    (310/608) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.124652622 seconds)
    (311/608) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148923299 seconds)
    (312/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.088721546 seconds)
    (313/608) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12374076 seconds)
    (314/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135153559 seconds)
    (315/608) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130209859 seconds)
    (316/608) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.095317424 seconds)
    (317/608) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125936872 seconds)
    (318/608) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17688524 seconds)
    (319/608) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109228035 seconds)
    (320/608) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125959574 seconds)
    (321/608) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158706169 seconds)
    (322/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int64,Array{Int64,2}}")...
    done (took 0.100673799 seconds)
    (323/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int32,Array{Int32,2}}")...
    done (took 0.112718018 seconds)
    (324/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.087831028 seconds)
    (325/608) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.154673204 seconds)
    (326/608) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182415774 seconds)
    (327/608) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155295174 seconds)
    (328/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094579187 seconds)
    (329/608) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114462498 seconds)
    (330/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133935421 seconds)
    (331/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137657442 seconds)
    (332/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float64,Array{Float64,2}}")...
    done (took 0.14778329 seconds)
    (333/608) benchmarking ("sumelt_boundscheck", "Array{Float64,2}")...
    done (took 0.086890775 seconds)
    (334/608) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128638636 seconds)
    (335/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149898454 seconds)
    (336/608) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115034258 seconds)
    (337/608) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150541217 seconds)
    (338/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.123278572 seconds)
    (339/608) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.096699993 seconds)
    (340/608) benchmarking ("sumcartesian_view", "Array{Int64,2}")...
    done (took 0.114127354 seconds)
    (341/608) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098076439 seconds)
    (342/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float32,Array{Float32,2}}")...
    done (took 0.133984754 seconds)
    (343/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Int32,3,Float64,Array{Float64,3}}")...
    done (took 0.154813363 seconds)
    (344/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106906301 seconds)
    (345/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float64,Array{Float64,2}}")...
    done (took 0.130710578 seconds)
    (346/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114033629 seconds)
    (347/608) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.185089388 seconds)
    (348/608) benchmarking ("sumcolon", "Base.ReinterpretArray{Float32,2,Int32,Array{Int32,2}}")...
    done (took 0.127843199 seconds)
    (349/608) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.115952944 seconds)
    (350/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int64,Array{Int64,2}}")...
    done (took 0.164245522 seconds)
    (351/608) benchmarking ("sumcolon", "1:100000")...
    done (took 0.126128671 seconds)
    (352/608) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.107490008 seconds)
    (353/608) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142730475 seconds)
    (354/608) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113587533 seconds)
    (355/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.124234444 seconds)
    (356/608) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130527988 seconds)
    (357/608) benchmarking "3d"...
    done (took 0.111198725 seconds)
    (358/608) benchmarking ("sum", "3darray")...
    done (took 0.106977354 seconds)
    (359/608) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111613176 seconds)
    (360/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Int32,3,Float64,Array{Float64,3}}")...
    done (took 0.123198142 seconds)
    (361/608) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192754578 seconds)
    (362/608) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136865725 seconds)
    (363/608) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.369740946 seconds)
    (364/608) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.109982996 seconds)
    (365/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float64,Array{Float64,2}}")...
    done (took 0.1300599 seconds)
    (366/608) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.152899141 seconds)
    (367/608) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166478872 seconds)
    (368/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.083968029 seconds)
    (369/608) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086883402 seconds)
    (370/608) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.089601117 seconds)
    (371/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Int32,3,Float64,Array{Float64,3}}")...
    done (took 0.096568885 seconds)
    (372/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148348278 seconds)
    (373/608) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092526022 seconds)
    (374/608) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138980145 seconds)
    (375/608) benchmarking ("sumlogical", "Array{Int64,2}")...
    done (took 0.141219932 seconds)
    (376/608) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12698555 seconds)
    (377/608) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131597028 seconds)
    (378/608) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1462388 seconds)
    (379/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Float32,2,Int32,Array{Int32,2}}")...
    done (took 0.105758639 seconds)
    (380/608) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.12309996 seconds)
    (381/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105755649 seconds)
    (382/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.120011487 seconds)
    (383/608) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.078679469 seconds)
    (384/608) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145000358 seconds)
    (385/608) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137136024 seconds)
    (386/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Float32,2,Int32,Array{Int32,2}}")...
    done (took 0.091447385 seconds)
    (387/608) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106525909 seconds)
    (388/608) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.115449669 seconds)
    (389/608) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171880234 seconds)
    (390/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float64,Array{Float64,2}}")...
    done (took 0.136907456 seconds)
    (391/608) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.13202493 seconds)
    (392/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088838727 seconds)
    (393/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.123827375 seconds)
    (394/608) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12744483 seconds)
    (395/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.116361341 seconds)
    (396/608) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186771391 seconds)
    (397/608) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.091952851 seconds)
    (398/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12021353 seconds)
    (399/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.086643919 seconds)
    (400/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089746689 seconds)
    (401/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139596444 seconds)
    (402/608) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161501657 seconds)
    (403/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float32,Array{Float32,2}}")...
    done (took 0.143807304 seconds)
    (404/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{Float32,2,Int32,Array{Int32,2}}")...
    done (took 0.137447773 seconds)
    (405/608) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.092357446 seconds)
    (406/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Float32,2,Int32,Array{Int32,2}}")...
    done (took 0.108079557 seconds)
    (407/608) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.119606161 seconds)
    (408/608) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132972618 seconds)
    (409/608) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121683027 seconds)
    (410/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139776842 seconds)
    (411/608) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115511115 seconds)
    (412/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.12611363 seconds)
    (413/608) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145711806 seconds)
    (414/608) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156608517 seconds)
    (415/608) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141226097 seconds)
    (416/608) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.105567985 seconds)
    (417/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127431283 seconds)
    (418/608) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1391126 seconds)
    (419/608) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164310193 seconds)
    (420/608) benchmarking ("sumelt", "Array{Int64,2}")...
    done (took 0.085857677 seconds)
    (421/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115660023 seconds)
    (422/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float64,Array{Float64,2}}")...
    done (took 0.143651479 seconds)
    (423/608) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.113528457 seconds)
    (424/608) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222290075 seconds)
    (425/608) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.412687082 seconds)
    (426/608) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.1670178 seconds)
    (427/608) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.096961946 seconds)
    (428/608) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122164034 seconds)
    (429/608) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121895343 seconds)
    (430/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.119870737 seconds)
    (431/608) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145342149 seconds)
    (432/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.091415111 seconds)
    (433/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int64,Array{Int64,2}}")...
    done (took 0.14815842 seconds)
    (434/608) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165645417 seconds)
    (435/608) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09188449 seconds)
    (436/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int64,Array{Int64,2}}")...
    done (took 0.137074631 seconds)
    (437/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144127711 seconds)
    (438/608) benchmarking ("sumlogical", "Array{Float64,2}")...
    done (took 0.143387888 seconds)
    (439/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int64,Array{Int64,2}}")...
    done (took 0.172525298 seconds)
    (440/608) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113714417 seconds)
    (441/608) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100744118 seconds)
    (442/608) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14175794 seconds)
    (443/608) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.12744566 seconds)
    (444/608) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099379095 seconds)
    (445/608) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156305093 seconds)
    (446/608) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131634979 seconds)
    (447/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int64,Array{Int64,2}}")...
    done (took 0.146561136 seconds)
    (448/608) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.095323092 seconds)
    (449/608) benchmarking ("sumeach_view", "Array{Float64,2}")...
    done (took 0.108551183 seconds)
    (450/608) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090562539 seconds)
    (451/608) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124434261 seconds)
    (452/608) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135020379 seconds)
    (453/608) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11353771 seconds)
    (454/608) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.084914884 seconds)
    (455/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float32,Array{Float32,2}}")...
    done (took 0.108083873 seconds)
    (456/608) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156585853 seconds)
    (457/608) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.082832648 seconds)
    (458/608) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148680292 seconds)
    (459/608) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181909787 seconds)
    (460/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089996434 seconds)
    (461/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int64,Array{Int64,2}}")...
    done (took 0.117226737 seconds)
    (462/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.120127825 seconds)
    (463/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.114443681 seconds)
    (464/608) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093897945 seconds)
    (465/608) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116742181 seconds)
    (466/608) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115107504 seconds)
    (467/608) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.096694932 seconds)
    (468/608) benchmarking ("sumcolon_view", "Array{Int64,2}")...
    done (took 0.110658339 seconds)
    (469/608) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.11701526 seconds)
    (470/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float32,Array{Float32,2}}")...
    done (took 0.151665704 seconds)
    (471/608) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183958883 seconds)
    (472/608) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.099911708 seconds)
    (473/608) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15770639 seconds)
    (474/608) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158120806 seconds)
    (475/608) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134004405 seconds)
    (476/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int32,Array{Int32,2}}")...
    done (took 0.141367151 seconds)
    (477/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11447146 seconds)
    (478/608) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148248045 seconds)
    (479/608) benchmarking "sub2ind"...
    done (took 0.813177891 seconds)
    (480/608) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.088552891 seconds)
    (481/608) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162775293 seconds)
    (482/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.130194117 seconds)
    (483/608) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.2002615 seconds)
    (484/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.371882567 seconds)
    (485/608) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126918139 seconds)
    (486/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.120689318 seconds)
    (487/608) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127667397 seconds)
    (488/608) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148967142 seconds)
    (489/608) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110052903 seconds)
    (490/608) benchmarking ("mapr_access", "Array{Float64,2}")...
    done (took 0.150149528 seconds)
    (491/608) benchmarking "6d"...
    done (took 0.20219628 seconds)
    (492/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int64,Array{Int64,2}}")...
    done (took 0.129470063 seconds)
    (493/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134591923 seconds)
    (494/608) benchmarking ("sumrange", "1:100000")...
    done (took 0.126747802 seconds)
    (495/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int64,Array{Int64,2}}")...
    done (took 0.132738661 seconds)
    (496/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.086519483 seconds)
    (497/608) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108644158 seconds)
    (498/608) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111299886 seconds)
    (499/608) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.099063732 seconds)
    (500/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114875638 seconds)
    (501/608) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121499181 seconds)
    (502/608) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122275458 seconds)
    (503/608) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.101980448 seconds)
    (504/608) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.125831781 seconds)
    (505/608) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13052983 seconds)
    (506/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float64,Array{Float64,2}}")...
    done (took 0.149469757 seconds)
    (507/608) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.095851627 seconds)
    (508/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114803237 seconds)
    (509/608) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170828557 seconds)
    (510/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float64,Array{Float64,2}}")...
    done (took 0.116639615 seconds)
    (511/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127780499 seconds)
    (512/608) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166370104 seconds)
    (513/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150973015 seconds)
    (514/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.093784967 seconds)
    (515/608) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13012584 seconds)
    (516/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{Float32,2,Int32,Array{Int32,2}}")...
    done (took 0.124162517 seconds)
    (517/608) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153169387 seconds)
    (518/608) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089746415 seconds)
    (519/608) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.127662461 seconds)
    (520/608) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160956407 seconds)
    (521/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115927854 seconds)
    (522/608) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111336167 seconds)
    (523/608) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.092438755 seconds)
    (524/608) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.111122769 seconds)
    (525/608) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18348236 seconds)
    (526/608) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.082523316 seconds)
    (527/608) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172856679 seconds)
    (528/608) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131555323 seconds)
    (529/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12400221 seconds)
    (530/608) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125747367 seconds)
    (531/608) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.122171915 seconds)
    (532/608) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143041389 seconds)
    (533/608) benchmarking ("sumelt", "Base.ReinterpretArray{Int32,3,Float64,Array{Float64,3}}")...
    done (took 0.108722248 seconds)
    (534/608) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11870569 seconds)
    (535/608) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138628951 seconds)
    (536/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int32,Array{Int32,2}}")...
    done (took 0.104270292 seconds)
    (537/608) benchmarking ("sumrange_view", "Array{Int64,2}")...
    done (took 0.126025902 seconds)
    (538/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131717916 seconds)
    (539/608) benchmarking ("sumcolon", "Array{Int64,2}")...
    done (took 0.094437083 seconds)
    (540/608) benchmarking ("sumcartesian", "Array{Int64,2}")...
    done (took 0.085106504 seconds)
    (541/608) benchmarking ("mapr_access", "Base.ReinterpretArray{Float32,2,Int32,Array{Int32,2}}")...
    done (took 0.136216118 seconds)
    (542/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float32,Array{Float32,2}}")...
    done (took 0.097705848 seconds)
    (543/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.120059896 seconds)
    (544/608) benchmarking ("sumlinear", "1:100000")...
    done (took 0.090536902 seconds)
    (545/608) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.124351073 seconds)
    (546/608) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124904488 seconds)
    (547/608) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.112025033 seconds)
    (548/608) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095655623 seconds)
    (549/608) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.297051413 seconds)
    (550/608) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.116016504 seconds)
    (551/608) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128815145 seconds)
    (552/608) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184114798 seconds)
    (553/608) benchmarking ("sumeach_view", "Array{Int64,2}")...
    done (took 0.121356825 seconds)
    (554/608) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123475419 seconds)
    (555/608) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.092359233 seconds)
    (556/608) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141936213 seconds)
    (557/608) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203893376 seconds)
    (558/608) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160221496 seconds)
    (559/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09253557 seconds)
    (560/608) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131027252 seconds)
    (561/608) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.117801718 seconds)
    (562/608) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129763397 seconds)
    (563/608) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130950521 seconds)
    (564/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int64,Array{Int64,2}}")...
    done (took 0.142810057 seconds)
    (565/608) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.123027923 seconds)
    (566/608) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.090144088 seconds)
    (567/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089440471 seconds)
    (568/608) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.088433718 seconds)
    (569/608) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.111830774 seconds)
    (570/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float64,Array{Float64,2}}")...
    done (took 0.14447534 seconds)
    (571/608) benchmarking ("sumlinear", "Array{Float64,2}")...
    done (took 0.080316063 seconds)
    (572/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float32,Array{Float32,2}}")...
    done (took 0.141436307 seconds)
    (573/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int32,Array{Int32,2}}")...
    done (took 0.133215655 seconds)
    (574/608) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.138727428 seconds)
    (575/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.12699683 seconds)
    (576/608) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134356754 seconds)
    (577/608) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122045505 seconds)
    (578/608) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168576177 seconds)
    (579/608) benchmarking "2d"...
    done (took 0.093303116 seconds)
    (580/608) benchmarking ("sumeach", "Base.ReinterpretArray{Float32,2,Int32,Array{Int32,2}}")...
    done (took 0.091645866 seconds)
    (581/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float32,Array{Float32,2}}")...
    done (took 0.129334036 seconds)
    (582/608) benchmarking "7d"...
    done (took 0.263049407 seconds)
    (583/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108618891 seconds)
    (584/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116877028 seconds)
    (585/608) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.099989647 seconds)
    (586/608) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.089951837 seconds)
    (587/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int32,Array{Int32,2}}")...
    done (took 0.13896105 seconds)
    (588/608) benchmarking ("sumlinear", "Array{Int64,2}")...
    done (took 0.084119488 seconds)
    (589/608) benchmarking ("sumcartesian", "Array{Float64,2}")...
    done (took 0.084477668 seconds)
    (590/608) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11156437 seconds)
    (591/608) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10614318 seconds)
    (592/608) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11494759 seconds)
    (593/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.122398392 seconds)
    (594/608) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183026269 seconds)
    (595/608) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.105707853 seconds)
    (596/608) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.110106642 seconds)
    (597/608) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.102812993 seconds)
    (598/608) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.088491978 seconds)
    (599/608) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113457716 seconds)
    (600/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.170206492 seconds)
    (601/608) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147821691 seconds)
    (602/608) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153013194 seconds)
    (603/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int32,Array{Int32,2}}")...
    done (took 0.159657549 seconds)
    (604/608) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134441462 seconds)
    (605/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int32,Array{Int32,2}}")...
    done (took 0.131717444 seconds)
    (606/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{Float32,2,Int32,Array{Int32,2}}")...
    done (took 0.131451761 seconds)
    (607/608) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.107365176 seconds)
    (608/608) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130164358 seconds)
  done (took 82.923443827 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.138752968 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.163566674 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.141490424 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.193833514 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.1716987 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.334772116 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.19882575 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.322304655 seconds)
  done (took 3.458137093 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.084282962 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.109920935 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.120632342 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.098484956 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.07822588 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.081515875 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.257982851 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.09596559 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.077261453 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.104002002 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.097537344 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.082892998 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.472578885 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.076855469 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.078873258 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.089323485 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.078513641 seconds)
  done (took 3.755427007 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.459716375 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.956643712 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.462668804 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.089855285 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 6.881819135 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.300688275 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.045047405 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.191994547 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.095271186 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.755416133 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.57881075 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.166652106 seconds)
  done (took 23.637419372 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.096443364 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.086649551 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.101477981 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.100793321 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.088042301 seconds)
  done (took 2.185461939 seconds)
done (took 139.274004215 seconds)
(18/20) benchmarking "misc"...
  (1/15) benchmarking "fastmath many args"...
  done (took 0.095145778 seconds)
  (2/15) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.495962271 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.079434815 seconds)
  done (took 2.243536999 seconds)
  (3/15) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.103989551 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.101648564 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.101036376 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.102850846 seconds)
  done (took 2.10408834 seconds)
  (4/15) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.086464044 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.087674768 seconds)
  done (took 1.814602792 seconds)
  (5/15) benchmarking "perf highdim generator"...
  done (took 0.268627127 seconds)
  (6/15) benchmarking "18129"...
  done (took 0.215357519 seconds)
  (7/15) benchmarking "20517"...
  done (took 0.129574717 seconds)
  (8/15) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.101835715 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.095938644 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.096620804 seconds)
  done (took 1.942067874 seconds)
  (9/15) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.084930764 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.081977955 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.081499576 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.083284397 seconds)
  done (took 2.018439541 seconds)
  (10/15) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.078750066 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.07491465 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.079352532 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.08119146 seconds)
  done (took 1.952278974 seconds)
  (11/15) benchmarking "foldl"...
    (1/3) benchmarking "foldl(+, filter(...))"...
    done (took 0.110260083 seconds)
    (2/3) benchmarking "foldl(+, filter(...); init = 0.0)"...
    done (took 0.116731362 seconds)
    (3/3) benchmarking "foldl(+, flatten(filter(...)))"...
    done (took 0.145230718 seconds)
  done (took 2.095435003 seconds)
  (12/15) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.096593516 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.097727574 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.090081516 seconds)
  done (took 1.994076398 seconds)
  (13/15) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.117839802 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.109345807 seconds)
  done (took 1.871248135 seconds)
  (14/15) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.092443721 seconds)
  done (took 1.779619892 seconds)
  (15/15) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.112891811 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.128646989 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.161667547 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.145121121 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.16924236 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.140625736 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.102191295 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.095435567 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.089746948 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.098498915 seconds)
  done (took 2.891606162 seconds)
done (took 25.055597495 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.091514227 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.353340587 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.499620555 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.103192446 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.742459636 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.498320107 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.884346806 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.107691939 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.161955886 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.080203655 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.100228791 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.720580557 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.898359013 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.316025172 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.856773417 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.298112813 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.643506337 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.082052437 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.077652173 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.078788217 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.873448592 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.079238394 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.080145573 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.080077099 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.638647772 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.520279442 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.082325847 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.333062479 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.084226868 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.085482365 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.507953862 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.086433251 seconds)
  done (took 16.685213217 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.085753732 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.141804657 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.086428353 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.09895171 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.082528294 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.08334336 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.084139312 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.079783935 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.140440019 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.080912448 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.103113356 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.081258435 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.094362655 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.08204757 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.104769052 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.079499629 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.083581216 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.087539866 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.082972171 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.082676678 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.110973279 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.093787801 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.090143712 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.091690725 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.081556333 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.09841012 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.083533389 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.080863968 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.082256586 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.086185761 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.087732292 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.083429188 seconds)
  done (took 4.643420984 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.13678719 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.144912805 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.086055348 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.122656395 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.130912491 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.094383437 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.194399862 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.124707343 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.169614167 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.094005139 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.115807581 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.092937854 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.137311261 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.082209113 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.106645644 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.081194715 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.084611424 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.081468185 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.079743011 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.080497281 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.107940931 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.091668582 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.093166529 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.093058286 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.09400423 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.105403407 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.085972713 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.081338014 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.081395008 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.086186769 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.087697256 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.08332424 seconds)
  done (took 4.996595254 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.08209306 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.082361885 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.091355404 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.091899764 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.077865244 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.080200962 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.080590178 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.077496185 seconds)
  done (took 2.327399565 seconds)
done (took 30.34578124 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.090444105 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.077200335 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.080048202 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.098474565 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.084093524 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.089388997 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.074213651 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.084398305 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.081462437 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.081573017 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.083102278 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.076161857 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.079466027 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.073802464 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.083105597 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.075157709 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.090579555 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.079841567 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.089565845 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.090548574 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.078527061 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.081967286 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.084605935 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.09043421 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.08998972 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.090460862 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.085987653 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.083067211 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.076494352 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.080411003 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.082004504 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.092691384 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.099086948 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.107088256 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.088233338 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.093049316 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.094704728 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.091839316 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.106680224 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.099951056 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.08850355 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.094090623 seconds)
  done (took 5.279658116 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.097592638 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.102600783 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.094241644 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.091288391 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.103798407 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.094742259 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.098989548 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.090265038 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.089415322 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.098537613 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.084942971 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.090606595 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.092583271 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.082828179 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.089213825 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.086406569 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.0925984 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.084283887 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.088950232 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.089901074 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.099610347 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.083436418 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.098756523 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.092851702 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.086009311 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.092930229 seconds)
  done (took 4.102288324 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.084601344 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.097652909 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.104753442 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.163019133 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.127151197 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.091947601 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.093457387 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.104823559 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.110591331 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.078486357 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.082196868 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.107735451 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.107750497 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.086408502 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.078753413 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.096471618 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.096185335 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.083105318 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.087106082 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.111669179 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.109518124 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.098586305 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.109465619 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.098116962 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.077224097 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.080322224 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.08319798 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.097468395 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.082058354 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.090745475 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.08193808 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.082515634 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.079451939 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.089839206 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.081775369 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.077998867 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.107568979 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.090915453 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.093776027 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.078711376 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.090224286 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.07889191 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.106799218 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.148851809 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.078487836 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.082572169 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.083287803 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.09274701 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.077202377 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.11206913 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.099863437 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.079310773 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.080431457 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.080008025 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.077455866 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.08090904 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.079946847 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.080681731 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.089402658 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.088312829 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.103489896 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.08344981 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.097775253 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.078066099 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.090594794 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.077681479 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.080343627 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.076171266 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.110944842 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.079790688 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.128680525 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.079707665 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.076993545 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.091149877 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.09085701 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.08552761 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.077944089 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.098247821 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.091328985 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.083920421 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.086871379 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.081793416 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.082236684 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.113329061 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.077633337 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.077439245 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.075980104 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.083024386 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.081622597 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.079069967 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.091838721 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.078027377 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.082658167 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.097758416 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.078361302 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.079354931 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.08971013 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.083371876 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.077655933 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.090915869 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.082975593 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.079980831 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.090569199 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.079609793 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.081480087 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.092837743 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.085344499 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.077227026 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.080100451 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.081324441 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.079354449 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.07917742 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.08281826 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.081416051 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.085723729 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.08522568 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.084009129 seconds)
  done (took 12.120937634 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.186864696 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.175674862 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.088494143 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.168928166 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.088105423 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.098452867 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.175177669 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.124056945 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.090892075 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.091694322 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.08308299 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.130608339 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.127501933 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.139962472 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.099136831 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.084379787 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.105108277 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.132417233 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.17938344 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.169768861 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.106730429 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.090006378 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.083834781 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.082442426 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.080713502 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.090686059 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.099186317 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.090194606 seconds)
  done (took 5.035427068 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.088159798 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.116931318 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.084295977 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.103877654 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.1001185 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.078753222 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.079085665 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.079898594 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.096900234 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.086121581 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.077631529 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.08345261 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.082215568 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.082196755 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.0784901 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.085229426 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.08561256 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.080134824 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.083010887 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.084755688 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.090343374 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.105181966 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.082922819 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.078838842 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.679870366 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.087250411 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.088484598 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.090542451 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.078923917 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.090627397 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.076109824 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.084829497 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.094555408 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.079440192 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.077233824 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.078001493 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.078380823 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.077842539 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.079558225 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.077219429 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.076342715 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.082022385 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.076475995 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.08537313 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.092430147 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.080091082 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.079718238 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.080781018 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.082145385 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.07593689 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.08176115 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.080652288 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.082154401 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.087421481 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.08362622 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.082007679 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.080283703 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.111955553 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.085709019 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.07812879 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.076550361 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.077325687 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.081609458 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.088854403 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.09667173 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.080615676 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.076394858 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.079182385 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.09249495 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.092866013 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.078161683 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.084915385 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.075390438 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.080346681 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.087904921 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.082232346 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.079114295 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.078116328 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.077671343 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.079558824 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.079038807 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.079383119 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.078431508 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.083149448 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.077416466 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.078027513 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.079570957 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.080246163 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.088495346 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.077451668 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.082607879 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.08033617 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.078089584 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.081717198 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.08492778 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.083335462 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.096250886 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.090305678 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.079579762 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.076592549 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.095026064 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.083388483 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.07910629 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.087080676 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.087055935 seconds)
  done (took 11.186323235 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.104425793 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.07819509 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.095706782 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.103926591 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.087698758 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.083306392 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.08942194 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.076493315 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.094691247 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.082138524 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.085764188 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.075404122 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.08950534 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.088477543 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.077741636 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.090163086 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.080645257 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.098436372 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.094495227 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.076416824 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.088174352 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.092256273 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.090685331 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.095781925 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.094233336 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.094618845 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.091580706 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.088282284 seconds)
  done (took 4.309503796 seconds)
done (took 43.690708601 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.802782687 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.959296553 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.741952149 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.514952481 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.870251575 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.933146118 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.911117438 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.732850692 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.50849952 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.757212566 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.592938718 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 6.545410297 seconds)
done (took 68.724634664 seconds)
(2/20) benchmarking "string"...
  (1/7) benchmarking "join"...
  done (took 6.751852582 seconds)
  (2/7) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.941957482 seconds)
    (2/2) benchmarking "String"...
    done (took 2.083082015 seconds)
  done (took 5.76765616 seconds)
  (3/7) benchmarking "==(::SubString, ::String)"...
    (1/3) benchmarking "equal"...
    done (took 6.744417136 seconds)
    (2/3) benchmarking "different length"...
    done (took 6.799587667 seconds)
    (3/3) benchmarking "different"...
    done (took 2.511259093 seconds)
  done (took 17.737240154 seconds)
  (4/7) benchmarking "replace"...
  done (took 3.564253681 seconds)
  (5/7) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 6.370106125 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.05119988 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.735243633 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.856782281 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.797697047 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 3.192779913 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.521304393 seconds)
  done (took 33.19519724 seconds)
  (6/7) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.765192907 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.225396274 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 5.667887133 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 5.758012198 seconds)
  done (took 22.23707453 seconds)
  (7/7) benchmarking "==(::AbstractString, ::AbstractString)"...
    (1/4) benchmarking "identical"...
    done (took 2.0859132 seconds)
    (2/4) benchmarking "equal"...
    done (took 2.154170825 seconds)
    (3/4) benchmarking "different length"...
    done (took 2.158903724 seconds)
    (4/4) benchmarking "different"...
    done (took 2.49266019 seconds)
  done (took 10.709284372 seconds)
done (took 101.969185578 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.977769887 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 7.058761145 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.855970531 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.778273766 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.892140111 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.781318736 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.059669832 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 8.770396788 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.737237868 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.804094836 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.887410305 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 4.444793094 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.763789698 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.994983153 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.763486842 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.763987776 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.793056988 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 9.675434506 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.043084357 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.816148427 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.922745782 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.875035641 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.79314754 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.906626826 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.779049555 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.743576252 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.751950545 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.748112907 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.71377409 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.768349088 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.851930444 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.360393588 seconds)
  done (took 209.554980892 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.763429789 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 5.952500446 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 5.865848244 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.783499226 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 6.397086477 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 3.281535803 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.995535908 seconds)
    (8/36) benchmarking "gemv"...
    done (took 6.443985328 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.73728367 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.754090036 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 4.617495037 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.866241884 seconds)
    (13/36) benchmarking "trsv"...
    done (took 4.572769165 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.767432686 seconds)
    (15/36) benchmarking "dotu"...
    done (took 3.659733624 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.788739843 seconds)
    (17/36) benchmarking "trmv"...
    done (took 4.65688743 seconds)
    (18/36) benchmarking "symv"...
    done (took 4.646343599 seconds)
    (19/36) benchmarking "dotc"...
    done (took 3.64359697 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.846280075 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.774903167 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 5.786862385 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 5.843664024 seconds)
    (24/36) benchmarking "symv!"...
    done (took 4.58209734 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.998600101 seconds)
    (26/36) benchmarking "herk"...
    done (took 7.148772068 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.902592405 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.948353155 seconds)
    (29/36) benchmarking "asum"...
    done (took 3.48176713 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 4.603971001 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.910667991 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.905080966 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.509553035 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 3.125838011 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.9216337 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.885525168 seconds)
  done (took 197.164232616 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.288595355 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/118) benchmarking ("cumsum!", "Int32", 1024)...
    done (took 1.864267016 seconds)
    (2/118) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.904328982 seconds)
    (3/118) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.910203748 seconds)
    (4/118) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.855463767 seconds)
    (5/118) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.904857912 seconds)
    (6/118) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.87502807 seconds)
    (7/118) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 2.136078356 seconds)
    (8/118) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 2.175100293 seconds)
    (9/118) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 3.014256736 seconds)
    (10/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.337374267 seconds)
    (11/118) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.932931668 seconds)
    (12/118) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 7.345233415 seconds)
    (13/118) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.865196669 seconds)
    (14/118) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 2.012894351 seconds)
    (15/118) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.887232118 seconds)
    (16/118) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.866710965 seconds)
    (17/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 2.199989314 seconds)
    (18/118) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.916966285 seconds)
    (19/118) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.882717132 seconds)
    (20/118) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.945872025 seconds)
    (21/118) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 2.346766996 seconds)
    (22/118) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.952546695 seconds)
    (23/118) benchmarking ("cumsum!", "Float64", 1024)...
    done (took 1.94367327 seconds)
    (24/118) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.955161706 seconds)
    (25/118) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.970892695 seconds)
    (26/118) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.870329579 seconds)
    (27/118) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.343744082 seconds)
    (28/118) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 22.253751061 seconds)
    (29/118) benchmarking ("3-arg mul!", 3)...
    done (took 1.928633753 seconds)
    (30/118) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.820752365 seconds)
    (31/118) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.882912025 seconds)
    (32/118) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.402534446 seconds)
    (33/118) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.819717266 seconds)
    (34/118) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.81148042 seconds)
    (35/118) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 6.639423233 seconds)
    (36/118) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 20.057031527 seconds)
    (37/118) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 2.068197339 seconds)
    (38/118) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.870814092 seconds)
    (39/118) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.884857119 seconds)
    (40/118) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.858552666 seconds)
    (41/118) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.40901822 seconds)
    (42/118) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.846526902 seconds)
    (43/118) benchmarking ("5-arg mul!", 2)...
    done (took 1.857774382 seconds)
    (44/118) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.859304361 seconds)
    (45/118) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.808466425 seconds)
    (46/118) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 7.745789385 seconds)
    (47/118) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.830770324 seconds)
    (48/118) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.969055135 seconds)
    (49/118) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.78976689 seconds)
    (50/118) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 6.076549819 seconds)
    (51/118) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.84251709 seconds)
    (52/118) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.790162572 seconds)
    (53/118) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 23.368434971 seconds)
    (54/118) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 18.95023623 seconds)
    (55/118) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 2.058659862 seconds)
    (56/118) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.817817134 seconds)
    (57/118) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.823266731 seconds)
    (58/118) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.825652227 seconds)
    (59/118) benchmarking ("cumsum!", "Int32", 256)...
    done (took 1.854389961 seconds)
    (60/118) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.874525917 seconds)
    (61/118) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.361999538 seconds)
    (62/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 2.240740761 seconds)
    (63/118) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.827730722 seconds)
    (64/118) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.827285688 seconds)
    (65/118) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.875739606 seconds)
    (66/118) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.817584474 seconds)
    (67/118) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 22.189116292 seconds)
    (68/118) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.920905506 seconds)
    (69/118) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.558625761 seconds)
    (70/118) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 2.064746582 seconds)
    (71/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 3.737272531 seconds)
    (72/118) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 2.308029254 seconds)
    (73/118) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.811907504 seconds)
    (74/118) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.958391269 seconds)
    (75/118) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.999149708 seconds)
    (76/118) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.812940793 seconds)
    (77/118) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.811399855 seconds)
    (78/118) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.847633766 seconds)
    (79/118) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.857317163 seconds)
    (80/118) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.996550872 seconds)
    (81/118) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.800331695 seconds)
    (82/118) benchmarking ("3-arg mul!", 2)...
    done (took 1.862427049 seconds)
    (83/118) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 5.940114843 seconds)
    (84/118) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.857277598 seconds)
    (85/118) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.832174968 seconds)
    (86/118) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.880157023 seconds)
    (87/118) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.966242083 seconds)
    (88/118) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.934205881 seconds)
    (89/118) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 6.642208325 seconds)
    (90/118) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.822563795 seconds)
    (91/118) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.824268627 seconds)
    (92/118) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 7.26469407 seconds)
    (93/118) benchmarking ("cumsum!", "Int64", 1024)...
    done (took 1.924026679 seconds)
    (94/118) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 2.004639844 seconds)
    (95/118) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.894523601 seconds)
    (96/118) benchmarking ("cumsum!", "Float64", 256)...
    done (took 1.882422495 seconds)
    (97/118) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.889699357 seconds)
    (98/118) benchmarking ("log", "Hermitian", 256)...
    done (took 5.997200195 seconds)
    (99/118) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 2.015394722 seconds)
    (100/118) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 10.482997473 seconds)
    (101/118) benchmarking ("cumsum!", "Float32", 256)...
    done (took 1.865625728 seconds)
    (102/118) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.780033004 seconds)
    (103/118) benchmarking ("cumsum!", "Int64", 256)...
    done (took 1.780358677 seconds)
    (104/118) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.441283719 seconds)
    (105/118) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.547588835 seconds)
    (106/118) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.790703002 seconds)
    (107/118) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 8.051509532 seconds)
    (108/118) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.807740717 seconds)
    (109/118) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 2.002984259 seconds)
    (110/118) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.816016389 seconds)
    (111/118) benchmarking ("cumsum!", "Float32", 1024)...
    done (took 1.826582491 seconds)
    (112/118) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.82343307 seconds)
    (113/118) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.839454797 seconds)
    (114/118) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.788233345 seconds)
    (115/118) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.890359122 seconds)
    (116/118) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.852207086 seconds)
    (117/118) benchmarking ("5-arg mul!", 3)...
    done (took 1.838492557 seconds)
    (118/118) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.230440933 seconds)
  done (took 467.328640813 seconds)
done (took 878.246634566 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.630659657 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.573264224 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.80096347 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.638738055 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.604161014 seconds)
  done (took 15.066235262 seconds)
done (took 16.82713486 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/41) benchmarking ("> q0.5", "Array{Int64,1}")...
    done (took 1.93537635 seconds)
    (2/41) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.070563626 seconds)
    (3/41) benchmarking ("BitArray{1}", "10-90")...
    done (took 2.189678924 seconds)
    (4/41) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.005310019 seconds)
    (5/41) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.885911518 seconds)
    (6/41) benchmarking ("> q0.95", "Array{Float32,1}")...
    done (took 1.879766085 seconds)
    (7/41) benchmarking ("> q0.99", "Array{Int64,1}")...
    done (took 1.896993016 seconds)
    (8/41) benchmarking ("> q0.5", "Array{Float64,1}")...
    done (took 1.918195582 seconds)
    (9/41) benchmarking ("> q0.8", "Array{Float32,1}")...
    done (took 1.899975157 seconds)
    (10/41) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.002218876 seconds)
    (11/41) benchmarking ("> q0.95", "Array{Bool,1}")...
    done (took 1.898327391 seconds)
    (12/41) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.893728675 seconds)
    (13/41) benchmarking ("> q0.8", "Array{UInt64,1}")...
    done (took 1.933570992 seconds)
    (14/41) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.977535219 seconds)
    (15/41) benchmarking ("> q0.99", "Array{Bool,1}")...
    done (took 1.879675711 seconds)
    (16/41) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.933464258 seconds)
    (17/41) benchmarking ("> q0.99", "Array{UInt8,1}")...
    done (took 1.881564618 seconds)
    (18/41) benchmarking ("> q0.99", "Array{UInt64,1}")...
    done (took 1.899381807 seconds)
    (19/41) benchmarking ("> q0.8", "Array{Int64,1}")...
    done (took 1.936005657 seconds)
    (20/41) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.943375799 seconds)
    (21/41) benchmarking ("> q0.8", "Array{UInt8,1}")...
    done (took 1.930201122 seconds)
    (22/41) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.923634643 seconds)
    (23/41) benchmarking ("> q0.8", "Array{Int8,1}")...
    done (took 1.923071266 seconds)
    (24/41) benchmarking ("> q0.5", "Array{UInt8,1}")...
    done (took 2.006279259 seconds)
    (25/41) benchmarking ("> q0.95", "Array{UInt64,1}")...
    done (took 1.885806359 seconds)
    (26/41) benchmarking ("> q0.5", "Array{Int8,1}")...
    done (took 2.06261219 seconds)
    (27/41) benchmarking ("> q0.95", "Array{Int8,1}")...
    done (took 1.888141306 seconds)
    (28/41) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.894305199 seconds)
    (29/41) benchmarking ("> q0.99", "Array{Float64,1}")...
    done (took 1.879625875 seconds)
    (30/41) benchmarking ("> q0.5", "Array{UInt64,1}")...
    done (took 1.947431827 seconds)
    (31/41) benchmarking ("> q0.95", "Array{Int64,1}")...
    done (took 1.894759039 seconds)
    (32/41) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.929058371 seconds)
    (33/41) benchmarking ("> q0.99", "Array{Int8,1}")...
    done (took 1.897763676 seconds)
    (34/41) benchmarking ("> q0.5", "Array{Float32,1}")...
    done (took 1.950342983 seconds)
    (35/41) benchmarking ("> q0.95", "Array{Float64,1}")...
    done (took 1.869153676 seconds)
    (36/41) benchmarking ("> q0.95", "Array{UInt8,1}")...
    done (took 1.87180627 seconds)
    (37/41) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.882743267 seconds)
    (38/41) benchmarking ("> q0.5", "Array{Bool,1}")...
    done (took 2.22466316 seconds)
    (39/41) benchmarking ("> q0.8", "Array{Bool,1}")...
    done (took 1.918620243 seconds)
    (40/41) benchmarking ("> q0.8", "Array{Float64,1}")...
    done (took 1.910383251 seconds)
    (41/41) benchmarking ("> q0.99", "Array{Float32,1}")...
    done (took 1.930009304 seconds)
  done (took 81.313841432 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.298205828 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.376649057 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 2.018411554 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.243014322 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.945153718 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.241423008 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 2.077859857 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.043675267 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 2.039292012 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.876752231 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.894991118 seconds)
  done (took 24.962906943 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.165626751 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.189836843 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.937917164 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.135393974 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.89406372 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.176841475 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 2.026894565 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.013350005 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 2.053164331 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.85953284 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.842332127 seconds)
  done (took 24.085075162 seconds)
done (took 132.205696509 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/2) benchmarking "longtuple"...
    done (took 2.480268137 seconds)
    (2/2) benchmarking "11899"...
    done (took 1.916494022 seconds)
  done (took 6.15606021 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", "(8, 8)", "(8, 8)")...
    done (took 1.906260155 seconds)
    (2/8) benchmarking ("matvec", "(2, 2)", "(2,)")...
    done (took 1.888936088 seconds)
    (3/8) benchmarking ("matvec", "(4, 4)", "(4,)")...
    done (took 1.868637116 seconds)
    (4/8) benchmarking ("matvec", "(16, 16)", "(16,)")...
    done (took 1.925581783 seconds)
    (5/8) benchmarking ("matmat", "(2, 2)", "(2, 2)")...
    done (took 1.898780818 seconds)
    (6/8) benchmarking ("matvec", "(8, 8)", "(8,)")...
    done (took 1.912476509 seconds)
    (7/8) benchmarking ("matmat", "(16, 16)", "(16, 16)")...
    done (took 2.054036577 seconds)
    (8/8) benchmarking ("matmat", "(4, 4)", "(4, 4)")...
    done (took 1.882551274 seconds)
  done (took 17.153399625 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, "Float32")...
    done (took 1.854277191 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, "Float64")...
    done (took 1.87462655 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, "Float64")...
    done (took 1.867838291 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, "Float32")...
    done (took 1.879400329 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, "Float64")...
    done (took 1.873852859 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, "Float32")...
    done (took 1.872205981 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, "Float32")...
    done (took 1.870596306 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, "Float64")...
    done (took 1.864860998 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, "Float64")...
    done (took 1.871356845 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, "Float32")...
    done (took 1.857283707 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, "Float64")...
    done (took 1.879236032 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, "Float64")...
    done (took 1.862422456 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, "Float64")...
    done (took 1.873832596 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, "Float32")...
    done (took 1.841738226 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, "Float32")...
    done (took 1.87213251 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, "Float32")...
    done (took 1.857121385 seconds)
  done (took 31.68207889 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sum", "(2, 2)")...
    done (took 1.83562955 seconds)
    (2/24) benchmarking ("sumabs", "(8, 8)")...
    done (took 1.871137614 seconds)
    (3/24) benchmarking ("minimum", "(2, 2)")...
    done (took 1.852925903 seconds)
    (4/24) benchmarking ("sumabs", "(2,)")...
    done (took 1.840229207 seconds)
    (5/24) benchmarking ("sum", "(4, 4)")...
    done (took 1.835967509 seconds)
    (6/24) benchmarking ("sum", "(2,)")...
    done (took 1.828810174 seconds)
    (7/24) benchmarking ("sum", "(8, 8)")...
    done (took 1.81829512 seconds)
    (8/24) benchmarking ("minimum", "(16, 16)")...
    done (took 1.850083954 seconds)
    (9/24) benchmarking ("sum", "(8,)")...
    done (took 1.830943653 seconds)
    (10/24) benchmarking ("sumabs", "(4, 4)")...
    done (took 1.837033781 seconds)
    (11/24) benchmarking ("sumabs", "(2, 2)")...
    done (took 1.839858705 seconds)
    (12/24) benchmarking ("minimum", "(4, 4)")...
    done (took 1.842361603 seconds)
    (13/24) benchmarking ("sumabs", "(16,)")...
    done (took 1.839972911 seconds)
    (14/24) benchmarking ("sumabs", "(8,)")...
    done (took 1.841364658 seconds)
    (15/24) benchmarking ("minimum", "(16,)")...
    done (took 1.843395631 seconds)
    (16/24) benchmarking ("minimum", "(2,)")...
    done (took 1.847659074 seconds)
    (17/24) benchmarking ("minimum", "(8, 8)")...
    done (took 1.886776648 seconds)
    (18/24) benchmarking ("minimum", "(4,)")...
    done (took 1.886895806 seconds)
    (19/24) benchmarking ("minimum", "(8,)")...
    done (took 2.026822064 seconds)
    (20/24) benchmarking ("sum", "(16,)")...
    done (took 1.867137611 seconds)
    (21/24) benchmarking ("sum", "(4,)")...
    done (took 1.930503618 seconds)
    (22/24) benchmarking ("sumabs", "(4,)")...
    done (took 1.907277208 seconds)
    (23/24) benchmarking ("sum", "(16, 16)")...
    done (took 1.917672363 seconds)
    (24/24) benchmarking ("sumabs", "(16, 16)")...
    done (took 1.862958946 seconds)
  done (took 46.518988014 seconds)
done (took 103.283962535 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.624448643 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 4.182496663 seconds)
  done (took 9.582449959 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.849697835 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.864738565 seconds)
  done (took 5.618629588 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.875508112 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.850698533 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.840765071 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 2.13197033 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.832288873 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.841591158 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.830134244 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.829145717 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.827604143 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.833439706 seconds)
  done (took 20.466573341 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.827935492 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.830485914 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.84814344 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.840584576 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.848376946 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.835456204 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.845973553 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.819842554 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.803458195 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.811206577 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.85312579 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 2.353103447 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.891423304 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 2.083499163 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.843727691 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.849791289 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.867716625 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.866044993 seconds)
  done (took 35.677485688 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.810215395 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.87742802 seconds)
  done (took 5.454258328 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.840216106 seconds)
    (2/7) benchmarking "second"...
    done (took 1.831106569 seconds)
    (3/7) benchmarking "month"...
    done (took 1.833766643 seconds)
    (4/7) benchmarking "year"...
    done (took 1.82356945 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.862996045 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.842309776 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.824514353 seconds)
  done (took 14.616208889 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 2.617607774 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 2.008692521 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.065070991 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.662677531 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 3.04829906 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 4.128378799 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 3.242006522 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 3.919915382 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 3.326773213 seconds)
  done (took 28.760688108 seconds)
done (took 121.988883881 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 6.320490331 seconds)
  (2/8) benchmarking "printfd"...
  done (took 7.04358962 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.760641438 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 7.038844836 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.962806369 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.328926844 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.945025156 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.589119167 seconds)
done (took 46.879550999 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.976424083 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 3.671735135 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 3.733854367 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.933723397 seconds)
  done (took 16.136795895 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.86930081 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 4.101126448 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.94923129 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 4.283656248 seconds)
  done (took 24.107837261 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.379175579 seconds)
    (2/2) benchmarking "read"...
    done (took 2.282506327 seconds)
  done (took 6.39674208 seconds)
done (took 55.414270519 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.83878655 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.814868025 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.827699525 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.823900386 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.807489679 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.796480783 seconds)
    (7/24) benchmarking ("2pow1023", "positive argument", "Float64")...
    done (took 1.754068381 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.83792782 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.804819018 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.797502533 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.818696444 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.794130521 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.824456794 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.797917226 seconds)
    (15/24) benchmarking ("2pow1023", "negative argument", "Float64")...
    done (took 1.752596428 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.79465724 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", "Float32")...
    done (took 1.751436 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.824963953 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.804031031 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.835434453 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", "Float32")...
    done (took 1.755946943 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.820344551 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.794448296 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.823397325 seconds)
  done (took 45.009210705 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.877162708 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.856077948 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.962712641 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.891289231 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.913646226 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.855585471 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.86864092 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.816757666 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.859114871 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.844026419 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.81521758 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.872186538 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.799781383 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.8679021 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.804064821 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.863502281 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.84943003 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.802386861 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.834786895 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 2.160520967 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.87129469 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.801133654 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.862933404 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.798643505 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.873486347 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.798804253 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.816425767 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.825396187 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.832558423 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.933727663 seconds)
  done (took 57.51805091 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 3.735885195 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 4.219520515 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.811053806 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.845829169 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.799070632 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.778163368 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.763830255 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.759193578 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.758695926 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.760326562 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.812856046 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.774871969 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.756592781 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.758683904 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.783232976 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.806032377 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.946886417 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.756334794 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.756478907 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.757102065 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.834586982 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.762480047 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.761430655 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.764086594 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.760580643 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.756781704 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.756622556 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.772658301 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.889481716 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.805885033 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.866938729 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.861954482 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.841587384 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.949628285 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.851028168 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.771277781 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 3.445683772 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 4.214178961 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.789572844 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.756918833 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.757109128 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.756909209 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.757376946 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.824144637 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.756879461 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 2.045254851 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.863063568 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.757699566 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.75696129 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.779747391 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.766543243 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.761588519 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.764852692 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.761622901 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.778568623 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.760861029 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.759184606 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.75630637 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.77022114 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.798236084 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.837919853 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.835822688 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.884501465 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.80972489 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 2.20824063 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.8565605 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.799983608 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.798216606 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.787235024 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 2.11143702 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.822739002 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.996746973 seconds)
  done (took 140.624776135 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.758173831 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 2.032565005 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.805880271 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.802300783 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.763639258 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.76664776 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.921897147 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.768346881 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.808330175 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.868830102 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.805906805 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 2.075723358 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.868269039 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 2.057026289 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.836822343 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.816886067 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.888480949 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.776546299 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.7787103 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.997963654 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.787260219 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.915254254 seconds)
  done (took 42.591318712 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.802390723 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.783674877 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.80699068 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.779845389 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.780624311 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.781537232 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.806963315 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.786318449 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.809933903 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.813163653 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.815357066 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.800489349 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.784368762 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.8538031 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.905220823 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.927594768 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.844478306 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.904829116 seconds)
  done (took 34.47737921 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 2.033760679 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.959110144 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.891407499 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.829102955 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 2.023826352 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 2.042368561 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.892336557 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.971369068 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.805375086 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.930289496 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.971625323 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.809093371 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 2.007462045 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.818773343 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.809867546 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 2.014244446 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.859813785 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.842288359 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.934122001 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.945990147 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 2.041235557 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.934966802 seconds)
  done (took 44.070801032 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.840480229 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.838566717 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.863159467 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.8748111 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.782942687 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.77073005 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.830366874 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.805583959 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.779325317 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.805024238 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.80861255 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.765212874 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.863617354 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.836326614 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.866899396 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.81641227 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.826689057 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.854258397 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.832620282 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.777031207 seconds)
  done (took 38.195002934 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.806774804 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.832092427 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.831617128 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.810932179 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.82697623 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.794585168 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.785200062 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.788253141 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.796625757 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 2.096453025 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.795336887 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.771020815 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.767652001 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.768231142 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.767525502 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.820241679 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.815863622 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.861163802 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.858770273 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.863739298 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 2.12520747 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.849854526 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.830029839 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.81809176 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.830877964 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.851173587 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.847321741 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.849107463 seconds)
  done (took 53.197926863 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.911145159 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.890599117 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.931530559 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 2.023909645 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 2.043931178 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.985664927 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 2.033735098 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.969386642 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.898604385 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.932408235 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 2.055802749 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.979685745 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.948368942 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.941651259 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.912560275 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.95526409 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.897596418 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 2.010450253 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.946448029 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.91331712 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.962815552 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.941621901 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.984846023 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.950626474 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.907481115 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.937538993 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.930524722 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 2.066099364 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.96582435 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 2.008382486 seconds)
  done (took 60.617210091 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.962406757 seconds)
    (2/2) benchmarking "in"...
    done (took 1.950077011 seconds)
  done (took 5.786107579 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.873429307 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 2.024169182 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.908773078 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 2.088433893 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 2.047357245 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 2.140156185 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 2.056687725 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 2.000053512 seconds)
  done (took 17.922135493 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 3.898796178 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 2.075847222 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.930124733 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.857455697 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.828264234 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 4.106941978 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 4.925125716 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.956886653 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 2.002504419 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 2.919801978 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 5.007161036 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 6.384734447 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 3.6164537 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 4.411004349 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 4.254208279 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 6.086943934 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.989911265 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.894845655 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.906696654 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.84885033 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.895593008 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.865379752 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 5.091122294 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.977254021 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 3.024643215 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 3.37872073 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 4.170654134 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.937860666 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 4.288874874 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 2.12636301 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 3.635325254 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 2.133822919 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.904246928 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.901244335 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.887770933 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.89414469 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.914100576 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 4.525096064 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 4.648108267 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 2.053335584 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.904942505 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.913250055 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 6.382402102 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 3.20086752 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 6.367501015 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 2.233930098 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.937468459 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.945998563 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 3.337298524 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 4.043479016 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 4.366416683 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 2.945702613 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 2.073137257 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.853840612 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 6.011275499 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 2.119150848 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.896104238 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 3.35838365 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 5.257547697 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 5.693478298 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 3.271911417 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 4.246089318 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 6.186145536 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 2.116168232 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 3.261908382 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 7.325488136 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 4.938957576 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.873046456 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.861102057 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.868321631 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.87422505 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 2.98806657 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 2.312743899 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.899694105 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.872127486 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.849224835 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 4.455233708 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 2.039578593 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.879609054 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.861846834 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.840801032 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.868159046 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 3.586678473 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 5.205488255 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 3.999671819 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 2.086343265 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.857489642 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.888649559 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 2.750440429 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 3.227016892 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.873712623 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.853546149 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 3.17550561 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 4.341516575 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 3.37645555 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.917192084 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 2.78678635 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 2.071415361 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.859354426 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.868135101 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.86836055 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 3.478059201 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 4.436194956 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.896744068 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.999596914 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 2.013201747 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.950937092 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 3.853541022 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 4.627508681 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.931816397 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.901571878 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 2.630745105 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 3.162699161 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.905652042 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 3.524118546 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 7.950195686 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.96401741 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.843341474 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.834948021 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.853769025 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 3.213258107 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 6.623284284 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 2.03866686 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.861651119 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 3.88002518 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 4.886008171 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.859338864 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 4.430008974 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.995732891 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.805736511 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.807395787 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 6.403329102 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.84535475 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.782140131 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.780291261 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.782838043 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.777963098 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.777481079 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.778863609 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.780362326 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 3.022996857 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 4.522738668 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 5.939950821 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 3.348429259 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.953522498 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 6.211315959 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 4.414429325 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 3.805927703 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 6.228916613 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 5.897517754 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.842506935 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.78060849 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.785232279 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.779864423 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 3.905039736 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.985571909 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 3.679207342 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.955891331 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.778563356 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.806381191 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.826171719 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 2.654213157 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 5.61945258 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 2.080428357 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.807251868 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 3.673365919 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 2.009309705 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.788016886 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.78087388 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 3.435016548 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.981902751 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 2.636167811 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 3.87107778 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 4.029138174 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.8100705 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.779974586 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 3.234756865 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.956739847 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.82591012 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.870474463 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 3.474361026 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 7.357741909 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.981013303 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 4.429400471 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 2.042218451 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.839664932 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.805248668 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 4.410136232 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 3.18111617 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.987392168 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 3.549051955 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 4.115639862 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 2.798593365 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 2.198638148 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 2.841190119 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 3.022864381 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 2.825603826 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 3.013439467 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 3.86750245 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.792608282 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.779921734 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.77893314 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 3.704609243 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 2.053220508 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 3.149979341 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.980229449 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 3.035742137 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 2.018739813 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.798808092 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.810488599 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.804659962 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.795984135 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.788370152 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.786672269 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.785102961 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.78287631 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 3.643103017 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.962629979 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 2.673795971 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 4.131651628 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.95706894 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.787466175 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 4.217601273 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.837522305 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 5.873532625 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 6.284327782 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 4.554921442 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 2.911292845 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 2.02418894 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.860668806 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 3.707458841 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 4.903024397 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 4.239290845 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 2.000403532 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.797937263 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 3.401084666 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 3.231731506 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.99381791 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.784081999 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.787313962 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 3.471403093 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 4.497432672 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.865673137 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.804763133 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.808951966 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 4.044590781 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 2.008094529 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 4.263088392 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.921802297 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 3.642436349 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.961152228 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 3.034802249 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.881586869 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.791510555 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.788193643 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 5.461572539 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.875953897 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.790268249 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.790057085 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.790814437 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.790463784 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.785545583 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.785402128 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 3.388193423 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 4.313723351 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 4.06000668 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 4.086041453 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 3.486115866 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 3.032222145 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 3.079669854 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 3.96815264 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.982164946 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 3.757301055 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 3.113205752 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 2.249521203 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 4.533568302 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 5.657403754 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.903580858 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 4.277270494 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 3.048770288 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 5.239671881 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 4.447489764 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 4.741006807 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 3.638609119 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 3.91903035 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.97993612 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.827023671 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.791901246 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 6.186766011 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 2.806964972 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 3.061112366 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.829504257 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 3.659643655 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.965663927 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.788310489 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 2.057514812 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 3.071433187 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.99100248 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.798535322 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.793388273 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 3.1132568 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 4.361462878 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 4.998587695 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 4.25428208 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.991863551 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 3.810880676 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 3.579680355 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 3.212394022 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 5.754010471 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.820737388 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 3.738324697 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 4.050109789 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 3.432755414 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 7.653145064 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 2.653075562 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 5.467917244 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.893207376 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 3.502988181 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 4.302383099 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.838731116 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 2.65941112 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 4.163180889 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 2.047664531 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.8077129 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.797091322 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 2.533282318 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 3.041661532 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.819660666 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.788652897 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.787432097 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.795351129 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.790227433 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.79039011 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.802768552 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 2.807727971 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 5.332974703 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.97894345 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.793265118 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.793685064 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.789326251 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 2.829501192 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 2.073324035 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.854441077 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.897793227 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 3.800588351 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 4.137886538 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 2.151682804 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.818681687 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.805332828 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.797352221 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.799893352 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 4.447250903 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 2.82451756 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 3.073070804 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.820882568 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 4.598964895 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.872275826 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.802572094 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.79725256 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 5.410521917 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.891019712 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.796011159 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 3.031941047 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 3.513658379 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 2.094557789 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.885762457 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 2.995913569 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 3.077317592 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.846103509 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 3.083597842 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 5.858579775 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.838805976 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 3.403925033 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 3.479964878 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 3.805037254 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 2.838850653 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 3.035181211 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.823190205 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 2.796881742 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 3.03579759 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.82778851 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 2.642835799 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 3.364559404 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 6.01495512 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 4.191163525 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 4.460576858 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.973976189 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 4.535853106 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.961918734 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.798354435 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.801358804 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.798438708 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.795829805 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 3.124221261 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.856058958 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.802919805 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.794834265 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 5.65217472 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 3.129405263 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 3.01628575 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 5.792028894 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.943011027 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 5.562598691 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.918483331 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.883686046 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 5.310349657 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 5.177599476 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.940456003 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.828016471 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.80219001 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 2.952738804 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 4.790831505 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 4.90895603 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 2.009770839 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 3.784010296 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.967875392 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 3.949558718 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 3.341246974 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.865726484 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.797094275 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.796049354 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 6.150006885 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.96506996 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 3.185678333 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 2.747102046 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 2.035476627 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 5.485344596 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.908155081 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 3.450822741 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 6.053522229 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 4.547112965 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.95326385 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.796177049 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.884418575 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 2.7034718 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 4.160985574 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 4.475456235 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 3.580329377 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 5.742276319 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 5.083671277 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 3.144425383 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 4.464706051 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 3.574733393 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 4.192938611 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 2.737946393 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 2.004912495 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.79937796 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 5.655299126 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 2.626456606 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 4.382917071 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 2.007687438 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.809453108 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 3.629449522 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 4.035998275 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 2.015944485 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 5.875253592 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 2.265058261 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 3.104968063 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 5.798187235 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 3.689723664 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 2.05961272 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.865218222 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 3.730982851 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.985965112 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 5.372725742 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.898955562 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.810053419 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.825018175 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 2.769844103 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 3.079396283 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.829037308 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.800840693 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.8002117 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 5.710818604 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.83280116 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.79904613 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.804581762 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 3.406045887 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 3.792457928 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 3.911844568 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 5.417181676 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 2.037313192 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.840662129 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 4.445427911 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 6.191818654 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.889920289 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.809407964 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.802375866 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.851344791 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 3.615122352 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 2.003159025 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 4.144352591 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 2.024066221 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 3.396452079 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 3.173053391 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 3.120202842 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.833980563 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 3.587767356 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 5.494821858 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 4.181965092 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.855490298 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 4.072217245 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 5.923905122 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 4.446845426 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.976017135 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.810154015 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 4.389967685 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 5.650361882 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.916063847 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.806048249 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.806152809 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 3.589322369 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 4.216955907 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.806685729 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 4.373977652 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 2.199629571 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.860024464 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.825278117 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.829423443 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.818237045 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 3.148762193 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 3.542238398 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 4.146368095 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.837120213 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.810954155 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 4.069311427 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 2.984347626 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 3.054428953 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 3.499102362 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 6.236478418 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 4.62405543 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 2.02847239 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.834539489 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 3.856612849 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 7.116346336 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.988661511 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 3.203906082 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 6.924634696 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 5.489843907 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 5.678235567 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.833853851 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 2.823184173 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 2.008127783 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 3.086823958 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.934886202 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.804481701 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.825138851 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.807928433 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 2.928438406 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 3.082022552 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.839766013 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.822282245 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.802817278 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 3.657934831 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 3.438154493 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.961657915 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.896683535 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.810702542 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.829179647 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.819780126 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.821234472 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 4.485890494 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 2.989082741 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 3.529814119 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.936962175 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.804941097 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.803533602 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 3.797847456 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 3.656537063 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 5.432884862 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 4.078736095 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.842386702 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.810187352 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.809307627 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.808900121 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.825401733 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 4.666231616 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 3.74896222 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 4.196900049 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 2.02073329 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 2.968452954 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 2.368398965 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 4.036414072 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 4.013303183 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 2.006330814 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.80962962 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.811759648 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.818236171 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.899740939 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 5.723340741 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 2.678078182 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 3.091157248 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.845828432 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.809731265 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 3.534554092 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 4.145998529 seconds)
  done (took 1783.372941856 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 2.182729733 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.874622387 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.875441865 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.88101008 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.844967778 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.837577115 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.83320347 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.828551876 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.838327204 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.830477236 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.821431182 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.811484609 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.809764075 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 2.120765187 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.808089885 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.812375164 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.811529 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.894213476 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 2.015759267 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.809064799 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.809077599 seconds)
  done (took 41.123601873 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.815494848 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.858894437 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 2.029743483 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.955158059 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.857545844 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.816893077 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.936137742 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.810025425 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.926787513 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.886139314 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.950536476 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.932295597 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.943119666 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.926707766 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.937319702 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.832581952 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.929194949 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.909063189 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.837498931 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.957831801 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.817699258 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.978682598 seconds)
  done (took 43.583162709 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.816070478 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.81320641 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 3.717531628 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.979460654 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.812008062 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.809467722 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.811202087 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.811176825 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.810529275 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 3.159788888 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 2.925464308 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 2.951935313 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 4.599388283 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 4.284878637 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 3.193318676 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.994282443 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.980966324 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.83236133 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.847758577 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.835012827 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.822613527 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 4.318036799 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 2.00487313 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.811861131 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 2.694404732 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 2.014835861 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.812227591 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.814408474 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.817968035 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 3.010425365 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 3.062469144 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.842330184 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 3.863542303 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 4.96619748 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 3.269564358 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 2.906917236 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 3.227925727 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.892687364 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.858387929 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.97044605 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 3.410624846 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 3.925500353 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.861686023 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 4.398772554 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.969889865 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.818276175 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 3.392203631 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 4.111901559 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.845892787 seconds)
  done (took 129.452093337 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.80981607 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.972428079 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.876022134 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.831627662 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.980667272 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.816487628 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.887759468 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.81749815 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.810792637 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.812668784 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.988064808 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 2.033249319 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.888179993 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.972922942 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.978304363 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.861069955 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.829392241 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.836242599 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.825772912 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.859409368 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.838299844 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.882681981 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.9475086 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 2.004383636 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.819963967 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.814736664 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.814503968 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.816782705 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.99785366 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.814587914 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.815626363 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.814258603 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.967374448 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.894497225 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.817290015 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.819306122 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.96882139 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.820217167 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.816561544 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.824858482 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.816054983 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.815850528 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.884085061 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 2.021884264 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.91883502 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 2.006746486 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.860158143 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.864148127 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.998942635 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.851919709 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.833796406 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 2.036786134 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.835889974 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.828281196 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.820016203 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.961816939 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.81840404 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.817215754 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.815612895 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.983206956 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.816041203 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.821424772 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 2.002805008 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.816092159 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.816221102 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 2.008703435 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.934329803 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.816059491 seconds)
  done (took 129.5618289 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.82963353 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.989302412 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 2.022354586 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 2.102801557 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.982957088 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.996811184 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 2.047467889 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 2.142095327 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 2.020034367 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 2.033538634 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.997760845 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.936955935 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.96051974 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.948894929 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.99967047 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.977282495 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.963196929 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.962672997 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.980223782 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.978689582 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 2.020619792 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 2.24455309 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.982304902 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 2.019703556 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 2.227837569 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.942899631 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.972375307 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.977398339 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 2.031565572 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.982937681 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 2.228454178 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.977085326 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.970933308 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 2.032659771 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 2.288950223 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 2.043779465 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.88603007 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 2.054629185 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 2.007197189 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 2.007971933 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.986788654 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 2.13780469 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 2.364354801 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 2.019923311 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.987454671 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.978987352 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 2.022014697 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 2.223037876 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.927284711 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.980763305 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.973746838 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 2.024177476 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.972158202 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.972123888 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 2.022657381 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.931417017 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 2.015239336 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 2.020254435 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.98224051 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 2.030645265 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 2.021283843 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.93026695 seconds)
  done (took 127.043600432 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.858616211 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.862814182 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 2.032359373 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.88776546 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.878673518 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.943122935 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.859871361 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.848617317 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.852943741 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.84561852 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.830586045 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.912657558 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 3.362328435 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.824387441 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.918540895 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 3.358578101 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.911641366 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.912596597 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.819519387 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.914132417 seconds)
  done (took 42.388286309 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.867832306 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.994593493 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.858491981 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 2.02353106 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.866797294 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.993684821 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.884467256 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.867909027 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.90012848 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.91388068 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 2.138523921 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 2.109912006 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.951757374 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 2.033231494 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 2.031234535 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 2.014133595 seconds)
  done (took 33.196159185 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.958862401 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.83286318 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.825180306 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.82223396 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.883498356 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.82085779 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.822633023 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.824057389 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.826243154 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 2.390615235 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.829200154 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.90940622 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.822658902 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.821804539 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.828788701 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.90812527 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.825469641 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.825042617 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.827303151 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.828279661 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 2.621338251 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.870509384 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.91116125 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.946711234 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.962691263 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 2.684982901 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.851162607 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.910635157 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.843284765 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.854609818 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.945145948 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 2.387565309 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.825090931 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.836001618 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.830074646 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.841568944 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.843598563 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.855093177 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.912568322 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.823846567 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.822714375 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 2.011406063 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.855776565 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.822503196 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.823551713 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.824298803 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.832030433 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 2.362262761 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.824404052 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.933361563 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.832153108 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.870217001 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.945933671 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 2.446766845 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.868403307 seconds)
  done (took 107.847994129 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.898836793 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.903998938 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.844105446 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.853539309 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.907103781 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.884719809 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.881931007 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.842417287 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.872541713 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.825064863 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.895920404 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.843067553 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.94035468 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.964625652 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.894609217 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.870472289 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.824926191 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.897857223 seconds)
  done (took 35.649189205 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 2.055177467 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 2.13509937 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.962525454 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.881361405 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.878150633 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 2.050390593 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.865856409 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.868685946 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.945446988 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 2.112149599 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.925697043 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 2.004595702 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.851557638 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.984305465 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 2.168798832 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.942475738 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 2.248129822 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.831927688 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.882085232 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.837922772 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 2.059304681 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.841701089 seconds)
  done (took 45.092232745 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 2.497598483 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 2.461639153 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 2.832867895 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 3.07417339 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 2.126893697 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 2.76724149 seconds)
  done (took 17.568162528 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 2.018176022 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 2.010432435 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.889200465 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.933657263 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.960354041 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.962720726 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.963354097 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.990286558 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 2.041847916 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 2.215244034 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.948884596 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.93587471 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.987202243 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 2.034037483 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.933658677 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.928978453 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.972965182 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.948145678 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.953148488 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.982029451 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.933254711 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.908561793 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.933278006 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.923520302 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 2.012771947 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 2.041187993 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.909947378 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 2.176031187 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.968702105 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 2.088668895 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.982816837 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.995829549 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.96419223 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 2.299460227 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 2.011109754 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 2.075999772 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 2.136972338 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 2.079512817 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 2.021353243 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 2.114480161 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 2.019919263 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 2.033802404 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 2.010106931 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 2.065661843 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 2.286170945 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 2.002448094 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 2.073345769 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 2.050427618 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 2.017815517 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 2.261433803 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 2.039573152 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 2.077468305 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 2.015072103 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 2.027934318 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 2.025260077 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 2.266141422 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 2.241529554 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 2.143115843 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 2.141324329 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 2.577849738 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 2.114067568 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 2.034839098 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 2.134790769 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 2.346916991 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 2.037058035 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 2.135745795 seconds)
  done (took 137.229271266 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 2.286325876 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 2.005198889 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 2.057989851 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 2.300631635 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 2.096162424 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 2.064176267 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 2.070305333 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 2.033409976 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 2.030944821 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 2.016921804 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 2.057185535 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 2.020511835 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 2.104029681 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 2.104530932 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 2.045847036 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 2.124126459 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 2.112007415 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 2.143584527 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 2.061212767 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 2.318320289 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 2.038216682 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 2.032403003 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 2.162635945 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 2.130714442 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 2.285588514 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 2.039678023 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 2.069021635 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 2.060082733 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 2.004786272 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 2.021031133 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 2.04715426 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 2.048158536 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 2.107240551 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.969963849 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 2.061809669 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 2.016955362 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 2.064048133 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 2.146181551 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 2.360884529 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 2.095603668 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 2.174043581 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 2.174368437 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 2.093597288 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 2.043520631 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 2.299735491 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 2.065817758 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 2.081903121 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.991952855 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 2.01572664 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.970836052 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 2.243001886 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 2.24141616 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 2.254012581 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 2.055825459 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 2.008923838 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.995464753 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 2.003805213 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.998155096 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 2.000616211 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.988968204 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 2.054976109 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.992994808 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 2.245742514 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 2.044789151 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 2.040300338 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 2.109649482 seconds)
  done (took 140.016147395 seconds)
done (took 3354.864692492 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.985543653 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 7.060363755 seconds)
  done (took 15.919670451 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose", "(600, 600)")...
    done (took 1.903443684 seconds)
    (2/16) benchmarking ("adjoint", "(600, 400)")...
    done (took 1.901724865 seconds)
    (3/16) benchmarking ("adjoint!", "(600, 600)")...
    done (took 2.082275294 seconds)
    (4/16) benchmarking ("adjoint", "(20000, 20000)")...
    done (took 1.90056771 seconds)
    (5/16) benchmarking ("transpose!", "(20000, 10000)")...
    done (took 6.923837965 seconds)
    (6/16) benchmarking ("adjoint!", "(20000, 20000)")...
    done (took 6.900572181 seconds)
    (7/16) benchmarking ("transpose!", "(20000, 20000)")...
    done (took 6.932863028 seconds)
    (8/16) benchmarking ("transpose", "(600, 400)")...
    done (took 1.901383852 seconds)
    (9/16) benchmarking ("transpose", "(20000, 20000)")...
    done (took 1.90678207 seconds)
    (10/16) benchmarking ("transpose!", "(600, 400)")...
    done (took 2.042432229 seconds)
    (11/16) benchmarking ("adjoint", "(600, 600)")...
    done (took 1.9034833 seconds)
    (12/16) benchmarking ("transpose!", "(600, 600)")...
    done (took 2.112991982 seconds)
    (13/16) benchmarking ("adjoint!", "(600, 400)")...
    done (took 2.098798107 seconds)
    (14/16) benchmarking ("transpose", "(20000, 10000)")...
    done (took 1.972876359 seconds)
    (15/16) benchmarking ("adjoint!", "(20000, 10000)")...
    done (took 6.978648584 seconds)
    (16/16) benchmarking ("adjoint", "(20000, 10000)")...
    done (took 2.009495964 seconds)
  done (took 53.334463918 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 6.984282228 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 3.398347766 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 7.103571954 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 4.267354858 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 7.01062758 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 2.292226974 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 2.399065719 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 6.547215975 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 2.901455901 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 3.506989509 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.753838213 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 7.022131099 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 4.204987369 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.890773256 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 6.915702887 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 2.53437508 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 2.698138687 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.874718301 seconds)
  done (took 80.161165891 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", "(20000, 20000)")...
    done (took 7.015115287 seconds)
    (2/2) benchmarking ("unary minus", "(600, 600)")...
    done (took 2.073642012 seconds)
  done (took 10.981194944 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.987314444 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.999080277 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.99724323 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.979704149 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 7.162434166 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 7.061438377 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.969585294 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.970945531 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.953709357 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.982721897 seconds)
  done (took 71.955873075 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 5.846135224 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 4.088060911 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 5.184819541 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 5.214715939 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 7.284337831 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 7.06542289 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 4.56329913 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 7.223517243 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.925625865 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 2.443041547 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 6.82136867 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 5.420216232 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 3.8469181 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 7.305530739 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 2.118139086 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 2.366345039 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 2.246199384 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 2.109628223 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 2.115215804 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 3.304615709 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 3.424591356 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 2.684679112 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 2.294699462 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 2.066720333 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 2.690810731 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 3.120465627 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 4.191924705 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 3.729195095 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 2.251446795 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.985664808 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 4.36732971 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 2.546656098 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 7.057220953 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.74724862 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.357969156 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.918485309 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 5.127444456 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 3.682615903 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 2.168181687 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 2.337053364 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 4.147460833 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 3.233947226 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.98243298 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.373821156 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 2.413609202 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 2.51120833 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.833429894 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 4.437118869 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 7.009621727 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 2.654053604 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 5.006136121 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 6.983068045 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 2.152891929 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.768789216 seconds)
  done (took 215.638644272 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.89302215 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.434795725 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.125516715 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.89581507 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.307710634 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.180477219 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.964202828 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.668834339 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.912341439 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.243423785 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.28410284 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.040312487 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.96612758 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.88441206 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 7.202416671 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.917395739 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.153740769 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.645350935 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.893207626 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.883383999 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.248800066 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.23592719 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.113833173 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.920544328 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 2.379406603 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.217126782 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 3.197577306 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.069453866 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 5.536362031 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.920417108 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.493652157 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.898324167 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.93702537 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.924711688 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 3.855206362 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.344673464 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.403730318 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.954970348 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.941482201 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.95812055 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.679058668 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.163477789 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.344270266 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.151268256 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.355154 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.244701941 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.830811521 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 7.052397283 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.99649838 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.225913386 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.263789517 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.272989308 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.418987435 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.974028627 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.95430552 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.944773785 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.947151866 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.650187094 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.367953935 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.135997909 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.979450249 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.974021613 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.985919893 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.27886162 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.989827516 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.222207401 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 7.060992441 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 7.085106378 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.203408996 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.109722737 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.355806994 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.282416116 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.286297458 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 5.648895253 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 5.878463113 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.338314326 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.025292802 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.27466741 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.951919923 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.9859734 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.549655521 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 4.125226358 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.376044104 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.225035273 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.261383071 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.380077488 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.828711964 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.970554744 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.362217651 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.291266041 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.262513641 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.383739647 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 4.045611602 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.595895095 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.892672021 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.879377192 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.817103765 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.064038977 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.848583645 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.620452395 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.222579276 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.570565662 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.24864779 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.317704565 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.005474748 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.848661242 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.45439373 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.881999371 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.095874972 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.179053869 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.892279951 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 7.036280992 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.192951846 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.80904878 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.857419603 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.626036093 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 2.600831847 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.857824776 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.101179967 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.848721446 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.149917488 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.846384512 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.120599272 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.948295617 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.263810661 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.169076417 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.2396634 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.849207145 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.179666942 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.14113605 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.502917452 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.216909228 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.891241613 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 7.020199545 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.289521081 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.8602707 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.926961121 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.097344412 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.85872345 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.106716103 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.855343173 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.227750593 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.114741113 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 4.398900418 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.90481545 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.171124253 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.206943026 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.455564188 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.978690075 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.993810161 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.860352953 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 3.157604398 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.121877971 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.922487968 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.956780507 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 6.466094559 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.915326732 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.084215688 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.228598929 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 3.743044319 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.708100387 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.603613128 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.852419018 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.347599707 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.074196703 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.453366795 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.850459236 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.216010755 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.853320895 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.86192212 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.858671806 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.261191856 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.225912393 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.898747353 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.928850827 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.767874649 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.873803141 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.888270514 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.128851087 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.503443583 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.848913859 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.171577632 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.928290901 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 3.228678964 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.849878049 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 4.910561208 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.624116384 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.851367245 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.938276554 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 7.024566344 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.937176076 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.911080827 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.266224487 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.228667323 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.524443327 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.009198402 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.213516576 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.096567064 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.143829085 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.290930386 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.861928558 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.186847789 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.851603613 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 2.561378001 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.862528069 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 5.21512543 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.115859996 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.919814882 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.210716856 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.190200825 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.904535138 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.469494315 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.898667539 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.912415587 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.905382033 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.129844563 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.300255137 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.860015805 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.852430768 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 3.324386542 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.040211054 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.10608982 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.854487962 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.346380103 seconds)
  done (took 959.681191304 seconds)
done (took 1409.610090586 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", "(1000, 1000)", 3)...
    done (took 6.853795888 seconds)
    (2/4) benchmarking ("Float64", "(1000000,)", 1)...
    done (took 6.883151927 seconds)
    (3/4) benchmarking ("Float64", "(1000, 1000)", 2)...
    done (took 6.851288008 seconds)
    (4/4) benchmarking ("Float64", "(1000000,)", 2)...
    done (took 6.992233745 seconds)
  done (took 29.358039912 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.861985224 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 2.91871322 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 2.171673975 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 2.797313887 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 2.134351072 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 3.439219942 seconds)
  done (took 17.267700948 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", "(1000000,)", 1)...
    done (took 7.037914956 seconds)
    (2/3) benchmarking ("Float64", "(1000, 1000)", 2)...
    done (took 6.862575165 seconds)
    (3/3) benchmarking ("Float64", "(1000000,)", 2)...
    done (took 6.855246182 seconds)
  done (took 22.588316485 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ("(10000000,)", 1)...
    done (took 2.593179079 seconds)
    (2/4) benchmarking ("(1000, 1000)", 2)...
    done (took 2.143152718 seconds)
    (3/4) benchmarking ("(1000, 1000)", 1)...
    done (took 2.007644159 seconds)
    (4/4) benchmarking ("(10000000,)", 2)...
    done (took 2.404134511 seconds)
  done (took 10.933432666 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.885612539 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.85679522 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.856641091 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.873931124 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.855927282 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.940048213 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.852711283 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.881267224 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.95062593 seconds)
  done (took 18.738327348 seconds)
  (6/6) benchmarking "26942"...
  done (took 6.981522984 seconds)
done (took 107.659984824 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/341) benchmarking ("collect", "all", "Int64", 0)...
    done (took 2.191871007 seconds)
    (2/341) benchmarking ("map", "identity", "Int8", 0)...
    done (took 2.012349879 seconds)
    (3/341) benchmarking ("map", "*", "Int64", "(false, false)")...
    done (took 2.204244221 seconds)
    (4/341) benchmarking ("map", "identity", "Float64", 0)...
    done (took 1.992043985 seconds)
    (5/341) benchmarking ("sort", "Float64", 0)...
    done (took 6.877357864 seconds)
    (6/341) benchmarking ("perf_sum4", "BigInt", 1)...
    done (took 6.917921674 seconds)
    (7/341) benchmarking ("skipmissing", "sum", "Union{Nothing, BigInt}", 0)...
    done (took 7.684500064 seconds)
    (8/341) benchmarking ("collect", "all", "Int8", 0)...
    done (took 3.154946 seconds)
    (9/341) benchmarking ("map", "*", "Complex{Float64}", "(false, true)")...
    done (took 3.08035466 seconds)
    (10/341) benchmarking ("collect", "all", "Float32", 1)...
    done (took 2.157340534 seconds)
    (11/341) benchmarking ("perf_sum3", "Float64", 1)...
    done (took 2.090793052 seconds)
    (12/341) benchmarking ("perf_sum", "Complex{Float64}", 1)...
    done (took 2.255735421 seconds)
    (13/341) benchmarking ("broadcast", "*", "Bool", "(false, true)")...
    done (took 2.357708211 seconds)
    (14/341) benchmarking ("broadcast", "*", "Int64", "(false, true)")...
    done (took 2.500708508 seconds)
    (15/341) benchmarking ("perf_binaryop", "*", "Float32", "(true, true)")...
    done (took 2.369946385 seconds)
    (16/341) benchmarking ("map", "identity", "Float32", 0)...
    done (took 1.989450349 seconds)
    (17/341) benchmarking ("perf_sum2", "Float32", 0)...
    done (took 2.033319671 seconds)
    (18/341) benchmarking ("perf_sum", "Int64", 0)...
    done (took 1.867725918 seconds)
    (19/341) benchmarking ("broadcast", "identity", "Int8", 1)...
    done (took 2.129241449 seconds)
    (20/341) benchmarking ("perf_sum4", "BigInt", 0)...
    done (took 6.890951149 seconds)
    (21/341) benchmarking ("perf_sum3", "Complex{Float64}", 0)...
    done (took 2.949463716 seconds)
    (22/341) benchmarking ("perf_sum2", "BigFloat", 1)...
    done (took 6.878559082 seconds)
    (23/341) benchmarking ("collect", "all", "Float32", 0)...
    done (took 2.059758469 seconds)
    (24/341) benchmarking ("collect", "filter", "Int64", 1)...
    done (took 3.641367679 seconds)
    (25/341) benchmarking ("perf_sum", "Int8", 0)...
    done (took 1.866345524 seconds)
    (26/341) benchmarking ("broadcast", "identity", "Float32", 1)...
    done (took 2.117376722 seconds)
    (27/341) benchmarking ("broadcast", "identity", "BigFloat", 1)...
    done (took 2.580470498 seconds)
    (28/341) benchmarking ("broadcast", "*", "BigInt", "(false, true)")...
    done (took 6.866615679 seconds)
    (29/341) benchmarking ("skipmissing", "collect", "Float64", 0)...
    done (took 4.170443241 seconds)
    (30/341) benchmarking ("broadcast", "*", "Float32", "(false, false)")...
    done (took 2.188760561 seconds)
    (31/341) benchmarking ("broadcast", "identity", "Float32", 0)...
    done (took 2.013844711 seconds)
    (32/341) benchmarking ("broadcast", "abs", "Float64", 1)...
    done (took 2.218401011 seconds)
    (33/341) benchmarking ("perf_binaryop", "*", "Int64", "(false, true)")...
    done (took 2.398060932 seconds)
    (34/341) benchmarking ("perf_simplecopy", "Float32", 1)...
    done (took 2.019238744 seconds)
    (35/341) benchmarking ("perf_binaryop", "*", "Complex{Float64}", "(false, false)")...
    done (took 2.962745125 seconds)
    (36/341) benchmarking ("map", "abs", "BigFloat", 0)...
    done (took 7.055922443 seconds)
    (37/341) benchmarking ("perf_sum3", "BigFloat", 1)...
    done (took 6.944625448 seconds)
    (38/341) benchmarking ("broadcast", "identity", "BigInt", 1)...
    done (took 2.679978159 seconds)
    (39/341) benchmarking ("perf_sum2", "Bool", 1)...
    done (took 1.918828933 seconds)
    (40/341) benchmarking ("skipmissing", "collect", "Union{Missing, Complex{Float64}}", 1)...
    done (took 3.254581912 seconds)
    (41/341) benchmarking ("perf_binaryop", "*", "Int64", "(false, false)")...
    done (took 2.323827518 seconds)
    (42/341) benchmarking ("broadcast", "abs", "Bool", 1)...
    done (took 2.128817974 seconds)
    (43/341) benchmarking ("map", "*", "Int8", "(true, true)")...
    done (took 2.326293378 seconds)
    (44/341) benchmarking ("sort", "Union{Missing, Int8}", 1)...
    done (took 6.865515289 seconds)
    (45/341) benchmarking ("map", "*", "Bool", "(false, false)")...
    done (took 2.220424779 seconds)
    (46/341) benchmarking ("perf_sum2", "Complex{Float64}", 1)...
    done (took 2.10483711 seconds)
    (47/341) benchmarking ("perf_sum2", "BigInt", 1)...
    done (took 6.86581078 seconds)
    (48/341) benchmarking ("sort", "Union{Nothing, Float32}", 0)...
    done (took 8.641290612 seconds)
    (49/341) benchmarking ("map", "*", "BigFloat", "(false, false)")...
    done (took 6.860432297 seconds)
    (50/341) benchmarking ("skipmissing", "collect", "Union{Nothing, BigFloat}", 0)...
    done (took 3.36207275 seconds)
    (51/341) benchmarking ("broadcast", "*", "Float32", "(false, true)")...
    done (took 2.337668583 seconds)
    (52/341) benchmarking ("skipmissing", "collect", "BigInt", 0)...
    done (took 3.115630651 seconds)
    (53/341) benchmarking ("map", "abs", "BigInt", 1)...
    done (took 6.973445839 seconds)
    (54/341) benchmarking ("skipmissing", "sum", "Union{Missing, BigInt}", 1)...
    done (took 8.305772308 seconds)
    (55/341) benchmarking ("collect", "filter", "Int8", 0)...
    done (took 4.666846912 seconds)
    (56/341) benchmarking ("perf_simplecopy", "Complex{Float64}", 1)...
    done (took 2.63850658 seconds)
    (57/341) benchmarking ("sort", "Union{Missing, Bool}", 1)...
    done (took 6.859190272 seconds)
    (58/341) benchmarking ("broadcast", "identity", "Int8", 0)...
    done (took 2.082203519 seconds)
    (59/341) benchmarking ("skipmissing", "collect", "Int8", 0)...
    done (took 2.533563251 seconds)
    (60/341) benchmarking ("broadcast", "*", "Complex{Float64}", "(true, true)")...
    done (took 3.042579903 seconds)
    (61/341) benchmarking ("skipmissing", "sum", "Union{Missing, Bool}", 1)...
    done (took 1.91795477 seconds)
    (62/341) benchmarking ("perf_countequals", "Int8")...
    done (took 2.192678048 seconds)
    (63/341) benchmarking ("map", "abs", "BigInt", 0)...
    done (took 6.858937172 seconds)
    (64/341) benchmarking ("map", "*", "Complex{Float64}", "(false, false)")...
    done (took 3.111552435 seconds)
    (65/341) benchmarking ("perf_sum", "Complex{Float64}", 0)...
    done (took 1.993744176 seconds)
    (66/341) benchmarking ("skipmissing", "collect", "Bool", 0)...
    done (took 2.496821152 seconds)
    (67/341) benchmarking ("broadcast", "*", "Bool", "(false, false)")...
    done (took 2.359521421 seconds)
    (68/341) benchmarking ("sort", "Bool", 0)...
    done (took 2.11887567 seconds)
    (69/341) benchmarking ("perf_countnothing", "Float64", 1)...
    done (took 1.88464572 seconds)
    (70/341) benchmarking ("sort", "Union{Nothing, Int8}", 0)...
    done (took 6.862139317 seconds)
    (71/341) benchmarking ("collect", "filter", "BigFloat", 0)...
    done (took 3.332973309 seconds)
    (72/341) benchmarking ("perf_sum4", "Int64", 0)...
    done (took 1.891390951 seconds)
    (73/341) benchmarking ("skipmissing", "sum", "Float32", 0)...
    done (took 1.917071324 seconds)
    (74/341) benchmarking ("broadcast", "*", "Complex{Float64}", "(false, false)")...
    done (took 2.512108429 seconds)
    (75/341) benchmarking ("skipmissing", "sum", "Union{Missing, Float32}", 1)...
    done (took 2.137290946 seconds)
    (76/341) benchmarking ("sort", "Union{Nothing, BigInt}", 0)...
    done (took 6.898925878 seconds)
    (77/341) benchmarking ("collect", "all", "Bool", 0)...
    done (took 2.048195503 seconds)
    (78/341) benchmarking ("perf_countnothing", "BigFloat", 1)...
    done (took 1.949038929 seconds)
    (79/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(false, false)")...
    done (took 6.893361202 seconds)
    (80/341) benchmarking ("skipmissing", "sum", "Union{Nothing, BigFloat}", 0)...
    done (took 7.020873035 seconds)
    (81/341) benchmarking ("collect", "all", "Complex{Float64}", 1)...
    done (took 2.728981264 seconds)
    (82/341) benchmarking ("broadcast", "abs", "BigFloat", 1)...
    done (took 6.864870075 seconds)
    (83/341) benchmarking ("perf_sum4", "BigFloat", 0)...
    done (took 6.950800112 seconds)
    (84/341) benchmarking ("broadcast", "*", "BigFloat", "(false, false)")...
    done (took 7.070569962 seconds)
    (85/341) benchmarking ("perf_simplecopy", "Int8", 0)...
    done (took 2.136585668 seconds)
    (86/341) benchmarking ("perf_sum", "BigFloat", 1)...
    done (took 6.863837501 seconds)
    (87/341) benchmarking ("broadcast", "*", "Int64", "(true, true)")...
    done (took 2.712298044 seconds)
    (88/341) benchmarking ("collect", "all", "BigFloat", 1)...
    done (took 2.783366161 seconds)
    (89/341) benchmarking ("perf_sum3", "Int8", 1)...
    done (took 2.035119964 seconds)
    (90/341) benchmarking ("skipmissing", "collect", "Union{Missing, Int8}", 1)...
    done (took 2.809574763 seconds)
    (91/341) benchmarking ("perf_binaryop", "*", "Int8", "(true, true)")...
    done (took 2.459741015 seconds)
    (92/341) benchmarking ("map", "*", "Float32", "(true, true)")...
    done (took 2.470359493 seconds)
    (93/341) benchmarking ("map", "*", "BigInt", "(false, true)")...
    done (took 6.929410655 seconds)
    (94/341) benchmarking ("map", "identity", "Bool", 1)...
    done (took 3.369950936 seconds)
    (95/341) benchmarking ("broadcast", "abs", "Complex{Float64}", 0)...
    done (took 4.151562323 seconds)
    (96/341) benchmarking ("broadcast", "*", "BigInt", "(true, true)")...
    done (took 6.939415456 seconds)
    (97/341) benchmarking ("map", "identity", "BigFloat", 1)...
    done (took 4.590964246 seconds)
    (98/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(false, true)")...
    done (took 6.863181747 seconds)
    (99/341) benchmarking ("perf_sum2", "BigInt", 0)...
    done (took 6.97942432 seconds)
    (100/341) benchmarking ("broadcast", "*", "BigInt", "(false, false)")...
    done (took 8.100078466 seconds)
    (101/341) benchmarking ("perf_binaryop", "*", "BigInt", "(true, true)")...
    done (took 7.895736051 seconds)
    (102/341) benchmarking ("map", "*", "Bool", "(true, true)")...
    done (took 3.96693731 seconds)
    (103/341) benchmarking ("broadcast", "*", "Float64", "(true, true)")...
    done (took 2.563627274 seconds)
    (104/341) benchmarking ("skipmissing", "collect", "Union{Missing, BigInt}", 1)...
    done (took 3.231510167 seconds)
    (105/341) benchmarking ("map", "*", "Int64", "(true, true)")...
    done (took 2.54479481 seconds)
    (106/341) benchmarking ("broadcast", "identity", "BigInt", 0)...
    done (took 2.416783372 seconds)
    (107/341) benchmarking ("map", "abs", "Int8", 1)...
    done (took 2.157918178 seconds)
    (108/341) benchmarking ("map", "identity", "Int64", 0)...
    done (took 2.083053081 seconds)
    (109/341) benchmarking ("map", "*", "Float64", "(false, false)")...
    done (took 2.220337979 seconds)
    (110/341) benchmarking ("skipmissing", "collect", "Complex{Float64}", 0)...
    done (took 3.172146241 seconds)
    (111/341) benchmarking ("collect", "all", "BigFloat", 0)...
    done (took 2.392237142 seconds)
    (112/341) benchmarking ("collect", "all", "Int64", 1)...
    done (took 2.255325462 seconds)
    (113/341) benchmarking ("map", "abs", "Int8", 0)...
    done (took 2.015227778 seconds)
    (114/341) benchmarking ("map", "*", "BigInt", "(true, true)")...
    done (took 6.880014197 seconds)
    (115/341) benchmarking ("map", "abs", "Complex{Float64}", 0)...
    done (took 6.258773787 seconds)
    (116/341) benchmarking ("perf_binaryop", "*", "Float32", "(false, true)")...
    done (took 2.708265878 seconds)
    (117/341) benchmarking ("collect", "filter", "Bool", 1)...
    done (took 3.383122918 seconds)
    (118/341) benchmarking ("perf_countnothing", "BigFloat", 0)...
    done (took 1.95078347 seconds)
    (119/341) benchmarking ("perf_simplecopy", "Bool", 0)...
    done (took 1.935734231 seconds)
    (120/341) benchmarking ("map", "abs", "Float64", 0)...
    done (took 2.024789332 seconds)
    (121/341) benchmarking ("perf_sum", "Float32", 1)...
    done (took 2.039438081 seconds)
    (122/341) benchmarking ("map", "abs", "Bool", 0)...
    done (took 2.029338415 seconds)
    (123/341) benchmarking ("perf_sum", "Float64", 1)...
    done (took 2.036666468 seconds)
    (124/341) benchmarking ("sort", "BigInt", 0)...
    done (took 6.863306671 seconds)
    (125/341) benchmarking ("perf_sum2", "Int64", 0)...
    done (took 2.047028672 seconds)
    (126/341) benchmarking ("sort", "Union{Missing, Float64}", 1)...
    done (took 6.869333552 seconds)
    (127/341) benchmarking ("perf_countequals", "Float32")...
    done (took 2.202669689 seconds)
    (128/341) benchmarking ("perf_sum", "BigInt", 1)...
    done (took 6.857485542 seconds)
    (129/341) benchmarking ("perf_sum4", "Bool", 1)...
    done (took 3.499012557 seconds)
    (130/341) benchmarking ("sort", "Int8", 0)...
    done (took 6.263168081 seconds)
    (131/341) benchmarking ("perf_sum2", "Float32", 1)...
    done (took 2.249055761 seconds)
    (132/341) benchmarking ("map", "*", "Complex{Float64}", "(true, true)")...
    done (took 3.28768222 seconds)
    (133/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Float32}", 0)...
    done (took 3.523698786 seconds)
    (134/341) benchmarking ("skipmissing", "collect", "Union{Missing, Float64}", 1)...
    done (took 2.961073724 seconds)
    (135/341) benchmarking ("perf_binaryop", "*", "Bool", "(true, true)")...
    done (took 2.300298742 seconds)
    (136/341) benchmarking ("perf_simplecopy", "Bool", 1)...
    done (took 1.952583167 seconds)
    (137/341) benchmarking ("perf_sum", "Float32", 0)...
    done (took 2.050946353 seconds)
    (138/341) benchmarking ("map", "*", "BigInt", "(false, false)")...
    done (took 6.867311174 seconds)
    (139/341) benchmarking ("perf_sum2", "Int8", 0)...
    done (took 2.817744288 seconds)
    (140/341) benchmarking ("broadcast", "*", "Float64", "(false, false)")...
    done (took 2.235728205 seconds)
    (141/341) benchmarking ("perf_sum", "BigInt", 0)...
    done (took 6.919000134 seconds)
    (142/341) benchmarking ("perf_simplecopy", "Int64", 0)...
    done (took 3.434902703 seconds)
    (143/341) benchmarking ("perf_sum2", "Float64", 0)...
    done (took 2.037433566 seconds)
    (144/341) benchmarking ("perf_sum3", "Bool", 0)...
    done (took 1.97342185 seconds)
    (145/341) benchmarking ("perf_countequals", "Int64")...
    done (took 2.159233161 seconds)
    (146/341) benchmarking ("perf_sum3", "Int8", 0)...
    done (took 1.962954606 seconds)
    (147/341) benchmarking ("perf_sum3", "BigInt", 1)...
    done (took 6.860416965 seconds)
    (148/341) benchmarking ("map", "identity", "Complex{Float64}", 0)...
    done (took 4.432510054 seconds)
    (149/341) benchmarking ("collect", "all", "Complex{Float64}", 0)...
    done (took 2.078715131 seconds)
    (150/341) benchmarking ("perf_sum4", "Float64", 1)...
    done (took 1.878905794 seconds)
    (151/341) benchmarking ("collect", "filter", "Bool", 0)...
    done (took 2.694766736 seconds)
    (152/341) benchmarking ("perf_sum4", "Int8", 0)...
    done (took 1.883096547 seconds)
    (153/341) benchmarking ("perf_countequals", "Bool")...
    done (took 2.194610594 seconds)
    (154/341) benchmarking ("skipmissing", "collect", "Union{Missing, Int64}", 1)...
    done (took 3.082741465 seconds)
    (155/341) benchmarking ("perf_sum3", "BigFloat", 0)...
    done (took 6.977109574 seconds)
    (156/341) benchmarking ("skipmissing", "collect", "Union{Missing, BigFloat}", 1)...
    done (took 3.320446949 seconds)
    (157/341) benchmarking ("perf_sum4", "Float32", 1)...
    done (took 1.927559715 seconds)
    (158/341) benchmarking ("perf_binaryop", "*", "Float64", "(false, false)")...
    done (took 2.352070211 seconds)
    (159/341) benchmarking ("skipmissing", "collect", "Union{Nothing, BigInt}", 0)...
    done (took 3.174667892 seconds)
    (160/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Complex{Float64}}", 0)...
    done (took 2.08811944 seconds)
    (161/341) benchmarking ("map", "*", "Int64", "(false, true)")...
    done (took 2.579073622 seconds)
    (162/341) benchmarking ("broadcast", "abs", "Int8", 1)...
    done (took 2.135863503 seconds)
    (163/341) benchmarking ("perf_simplecopy", "Complex{Float64}", 0)...
    done (took 2.408432385 seconds)
    (164/341) benchmarking ("collect", "all", "BigInt", 0)...
    done (took 2.347432019 seconds)
    (165/341) benchmarking ("perf_sum", "BigFloat", 0)...
    done (took 6.905110601 seconds)
    (166/341) benchmarking ("map", "*", "Int8", "(false, false)")...
    done (took 2.248790112 seconds)
    (167/341) benchmarking ("sort", "Union{Missing, BigInt}", 1)...
    done (took 6.86745931 seconds)
    (168/341) benchmarking ("perf_sum4", "Complex{Float64}", 1)...
    done (took 2.169086851 seconds)
    (169/341) benchmarking ("sort", "Float32", 0)...
    done (took 6.868314032 seconds)
    (170/341) benchmarking ("collect", "all", "Float64", 0)...
    done (took 2.21172911 seconds)
    (171/341) benchmarking ("sort", "Union{Missing, Int64}", 1)...
    done (took 6.906090039 seconds)
    (172/341) benchmarking ("map", "identity", "Int8", 1)...
    done (took 2.136514711 seconds)
    (173/341) benchmarking ("collect", "filter", "Float32", 1)...
    done (took 3.690177619 seconds)
    (174/341) benchmarking ("sort", "BigFloat", 0)...
    done (took 7.010458983 seconds)
    (175/341) benchmarking ("perf_countnothing", "Bool", 0)...
    done (took 2.06486992 seconds)
    (176/341) benchmarking ("broadcast", "abs", "Int8", 0)...
    done (took 2.038021229 seconds)
    (177/341) benchmarking ("broadcast", "abs", "BigInt", 1)...
    done (took 6.880493519 seconds)
    (178/341) benchmarking ("perf_sum2", "Int8", 1)...
    done (took 3.42198011 seconds)
    (179/341) benchmarking ("map", "*", "Float64", "(false, true)")...
    done (took 2.688682221 seconds)
    (180/341) benchmarking ("perf_countnothing", "Bool", 1)...
    done (took 1.896459867 seconds)
    (181/341) benchmarking ("map", "abs", "BigFloat", 1)...
    done (took 6.86975648 seconds)
    (182/341) benchmarking ("sort", "Union{Nothing, BigFloat}", 0)...
    done (took 6.94569488 seconds)
    (183/341) benchmarking ("broadcast", "abs", "Bool", 0)...
    done (took 2.121711555 seconds)
    (184/341) benchmarking ("broadcast", "identity", "Int64", 1)...
    done (took 2.396310573 seconds)
    (185/341) benchmarking ("perf_sum2", "BigFloat", 0)...
    done (took 6.880517073 seconds)
    (186/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Int8}", 0)...
    done (took 2.11986945 seconds)
    (187/341) benchmarking ("perf_binaryop", "*", "Complex{Float64}", "(false, true)")...
    done (took 3.195766625 seconds)
    (188/341) benchmarking ("broadcast", "*", "BigFloat", "(true, true)")...
    done (took 6.868268685 seconds)
    (189/341) benchmarking ("map", "*", "Float32", "(false, false)")...
    done (took 2.401176596 seconds)
    (190/341) benchmarking ("collect", "filter", "Complex{Float64}", 0)...
    done (took 3.375967874 seconds)
    (191/341) benchmarking ("perf_simplecopy", "Float32", 0)...
    done (took 2.024824205 seconds)
    (192/341) benchmarking ("broadcast", "*", "BigFloat", "(false, true)")...
    done (took 6.881451244 seconds)
    (193/341) benchmarking ("perf_sum2", "Int64", 1)...
    done (took 2.186371793 seconds)
    (194/341) benchmarking ("perf_simplecopy", "BigFloat", 0)...
    done (took 2.239099308 seconds)
    (195/341) benchmarking ("skipmissing", "sum", "Complex{Float64}", 0)...
    done (took 1.967875381 seconds)
    (196/341) benchmarking ("perf_sum3", "Float32", 1)...
    done (took 2.197378999 seconds)
    (197/341) benchmarking ("skipmissing", "sum", "Bool", 0)...
    done (took 1.996458534 seconds)
    (198/341) benchmarking ("broadcast", "abs", "BigInt", 0)...
    done (took 6.88983893 seconds)
    (199/341) benchmarking ("perf_binaryop", "*", "Bool", "(false, false)")...
    done (took 2.342765968 seconds)
    (200/341) benchmarking ("skipmissing", "collect", "Float32", 0)...
    done (took 2.743074478 seconds)
    (201/341) benchmarking ("broadcast", "*", "Int8", "(true, true)")...
    done (took 2.388643723 seconds)
    (202/341) benchmarking ("sort", "Union{Missing, Float32}", 1)...
    done (took 6.969307136 seconds)
    (203/341) benchmarking ("perf_binaryop", "*", "Float32", "(false, false)")...
    done (took 2.25398877 seconds)
    (204/341) benchmarking ("broadcast", "identity", "Complex{Float64}", 0)...
    done (took 2.373058128 seconds)
    (205/341) benchmarking ("map", "identity", "Float64", 1)...
    done (took 2.284350456 seconds)
    (206/341) benchmarking ("perf_sum4", "Int8", 1)...
    done (took 1.874196784 seconds)
    (207/341) benchmarking ("map", "*", "Float32", "(false, true)")...
    done (took 2.344470795 seconds)
    (208/341) benchmarking ("map", "identity", "Bool", 0)...
    done (took 2.003344567 seconds)
    (209/341) benchmarking ("skipmissing", "sum", "Union{Missing, Int8}", 1)...
    done (took 1.92010147 seconds)
    (210/341) benchmarking ("perf_binaryop", "*", "BigInt", "(false, true)")...
    done (took 6.866006087 seconds)
    (211/341) benchmarking ("collect", "filter", "BigInt", 0)...
    done (took 4.454621436 seconds)
    (212/341) benchmarking ("perf_simplecopy", "Float64", 1)...
    done (took 2.151027488 seconds)
    (213/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Complex{Float64}}", 0)...
    done (took 3.720538102 seconds)
    (214/341) benchmarking ("broadcast", "abs", "Int64", 1)...
    done (took 2.23190016 seconds)
    (215/341) benchmarking ("collect", "filter", "Float32", 0)...
    done (took 2.838114335 seconds)
    (216/341) benchmarking ("perf_binaryop", "*", "Complex{Float64}", "(true, true)")...
    done (took 2.944038716 seconds)
    (217/341) benchmarking ("skipmissing", "sum", "BigFloat", 0)...
    done (took 6.931633346 seconds)
    (218/341) benchmarking ("skipmissing", "sum", "Union{Missing, BigFloat}", 1)...
    done (took 7.145058402 seconds)
    (219/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Int64}", 0)...
    done (took 2.163050069 seconds)
    (220/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Float64}", 0)...
    done (took 2.048873531 seconds)
    (221/341) benchmarking ("broadcast", "abs", "Float32", 0)...
    done (took 2.042767022 seconds)
    (222/341) benchmarking ("map", "identity", "BigFloat", 0)...
    done (took 2.367935398 seconds)
    (223/341) benchmarking ("sort", "Union{Nothing, Float64}", 0)...
    done (took 6.95072623 seconds)
    (224/341) benchmarking ("perf_sum4", "Float32", 0)...
    done (took 1.891675086 seconds)
    (225/341) benchmarking ("broadcast", "identity", "Bool", 0)...
    done (took 2.120330346 seconds)
    (226/341) benchmarking ("perf_sum", "Int64", 1)...
    done (took 1.884847602 seconds)
    (227/341) benchmarking ("skipmissing", "sum", "Float64", 0)...
    done (took 1.899136272 seconds)
    (228/341) benchmarking ("broadcast", "abs", "Float64", 0)...
    done (took 2.426271349 seconds)
    (229/341) benchmarking ("perf_simplecopy", "BigInt", 0)...
    done (took 2.199597225 seconds)
    (230/341) benchmarking ("perf_countequals", "BigInt")...
    done (took 3.057438687 seconds)
    (231/341) benchmarking ("perf_countequals", "Float64")...
    done (took 2.100887293 seconds)
    (232/341) benchmarking ("skipmissing", "collect", "Int64", 0)...
    done (took 3.107522603 seconds)
    (233/341) benchmarking ("perf_sum3", "BigInt", 0)...
    done (took 6.877878966 seconds)
    (234/341) benchmarking ("collect", "all", "Int8", 1)...
    done (took 2.964616278 seconds)
    (235/341) benchmarking ("perf_sum", "Bool", 0)...
    done (took 1.932261974 seconds)
    (236/341) benchmarking ("perf_countnothing", "Float32", 1)...
    done (took 1.891513229 seconds)
    (237/341) benchmarking ("perf_simplecopy", "Int64", 1)...
    done (took 2.260501523 seconds)
    (238/341) benchmarking ("collect", "all", "Float64", 1)...
    done (took 2.278145704 seconds)
    (239/341) benchmarking ("broadcast", "*", "Int8", "(false, false)")...
    done (took 2.219240516 seconds)
    (240/341) benchmarking ("perf_countnothing", "Complex{Float64}", 1)...
    done (took 1.897899705 seconds)
    (241/341) benchmarking ("perf_countnothing", "Complex{Float64}", 0)...
    done (took 1.900248027 seconds)
    (242/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(true, true)")...
    done (took 6.907285998 seconds)
    (243/341) benchmarking ("sort", "Union{Nothing, Int64}", 0)...
    done (took 7.133836945 seconds)
    (244/341) benchmarking ("map", "abs", "Float32", 1)...
    done (took 2.278819572 seconds)
    (245/341) benchmarking ("skipmissing", "sum", "Union{Missing, Float64}", 1)...
    done (took 2.076547209 seconds)
    (246/341) benchmarking ("perf_sum4", "Complex{Float64}", 0)...
    done (took 2.160880055 seconds)
    (247/341) benchmarking ("map", "identity", "Float32", 1)...
    done (took 2.188180003 seconds)
    (248/341) benchmarking ("map", "*", "Int8", "(false, true)")...
    done (took 2.374446205 seconds)
    (249/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Bool}", 0)...
    done (took 2.08344455 seconds)
    (250/341) benchmarking ("broadcast", "abs", "Complex{Float64}", 1)...
    done (took 4.6057571 seconds)
    (251/341) benchmarking ("perf_sum4", "Float64", 0)...
    done (took 1.902756422 seconds)
    (252/341) benchmarking ("perf_sum3", "Int64", 0)...
    done (took 2.042239371 seconds)
    (253/341) benchmarking ("map", "*", "BigFloat", "(false, true)")...
    done (took 6.872974876 seconds)
    (254/341) benchmarking ("broadcast", "*", "Bool", "(true, true)")...
    done (took 2.54086444 seconds)
    (255/341) benchmarking ("broadcast", "*", "Float32", "(true, true)")...
    done (took 2.383445528 seconds)
    (256/341) benchmarking ("map", "abs", "Int64", 0)...
    done (took 2.151616876 seconds)
    (257/341) benchmarking ("perf_sum", "Bool", 1)...
    done (took 1.933331841 seconds)
    (258/341) benchmarking ("map", "abs", "Float32", 0)...
    done (took 2.049962796 seconds)
    (259/341) benchmarking ("collect", "filter", "Float64", 0)...
    done (took 3.753941205 seconds)
    (260/341) benchmarking ("perf_sum", "Int8", 1)...
    done (took 1.891034839 seconds)
    (261/341) benchmarking ("perf_sum2", "Float64", 1)...
    done (took 2.03717147 seconds)
    (262/341) benchmarking ("perf_sum3", "Complex{Float64}", 1)...
    done (took 2.123029194 seconds)
    (263/341) benchmarking ("collect", "filter", "Complex{Float64}", 1)...
    done (took 3.941269182 seconds)
    (264/341) benchmarking ("collect", "filter", "Float64", 1)...
    done (took 3.963364667 seconds)
    (265/341) benchmarking ("map", "*", "Float64", "(true, true)")...
    done (took 2.569708812 seconds)
    (266/341) benchmarking ("skipmissing", "sum", "Int8", 0)...
    done (took 1.985874902 seconds)
    (267/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Int8}", 0)...
    done (took 3.36251176 seconds)
    (268/341) benchmarking ("perf_binaryop", "*", "BigInt", "(false, false)")...
    done (took 6.916904465 seconds)
    (269/341) benchmarking ("perf_sum3", "Float64", 0)...
    done (took 2.993882486 seconds)
    (270/341) benchmarking ("broadcast", "identity", "Float64", 0)...
    done (took 2.084803628 seconds)
    (271/341) benchmarking ("map", "identity", "Int64", 1)...
    done (took 2.380637653 seconds)
    (272/341) benchmarking ("perf_countnothing", "Float64", 0)...
    done (took 1.905157972 seconds)
    (273/341) benchmarking ("sort", "Int64", 0)...
    done (took 6.879070061 seconds)
    (274/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Float64}", 0)...
    done (took 3.776814758 seconds)
    (275/341) benchmarking ("perf_countnothing", "BigInt", 0)...
    done (took 1.946863849 seconds)
    (276/341) benchmarking ("map", "*", "Bool", "(false, true)")...
    done (took 2.317928052 seconds)
    (277/341) benchmarking ("collect", "filter", "BigInt", 1)...
    done (took 3.462187633 seconds)
    (278/341) benchmarking ("broadcast", "*", "Float64", "(false, true)")...
    done (took 2.572748014 seconds)
    (279/341) benchmarking ("skipmissing", "sum", "Union{Missing, Complex{Float64}}", 1)...
    done (took 2.084560271 seconds)
    (280/341) benchmarking ("perf_sum4", "Bool", 0)...
    done (took 1.915789559 seconds)
    (281/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Int64}", 0)...
    done (took 3.640686129 seconds)
    (282/341) benchmarking ("perf_simplecopy", "BigFloat", 1)...
    done (took 2.353044669 seconds)
    (283/341) benchmarking ("broadcast", "abs", "BigFloat", 0)...
    done (took 6.894493917 seconds)
    (284/341) benchmarking ("map", "abs", "Bool", 1)...
    done (took 2.094481393 seconds)
    (285/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Float32}", 0)...
    done (took 2.047513519 seconds)
    (286/341) benchmarking ("collect", "filter", "BigFloat", 1)...
    done (took 3.366099017 seconds)
    (287/341) benchmarking ("perf_sum2", "Bool", 0)...
    done (took 1.939119885 seconds)
    (288/341) benchmarking ("perf_sum4", "Int64", 1)...
    done (took 1.918668545 seconds)
    (289/341) benchmarking ("perf_countnothing", "Int64", 0)...
    done (took 1.948452322 seconds)
    (290/341) benchmarking ("collect", "filter", "Int8", 1)...
    done (took 3.420085621 seconds)
    (291/341) benchmarking ("perf_simplecopy", "Float64", 0)...
    done (took 2.242463026 seconds)
    (292/341) benchmarking ("perf_binaryop", "*", "Float64", "(true, true)")...
    done (took 2.489544949 seconds)
    (293/341) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.276797353 seconds)
    (294/341) benchmarking ("perf_binaryop", "*", "Int8", "(false, true)")...
    done (took 2.366602464 seconds)
    (295/341) benchmarking ("broadcast", "identity", "BigFloat", 0)...
    done (took 2.388323281 seconds)
    (296/341) benchmarking ("perf_sum2", "Complex{Float64}", 0)...
    done (took 2.152572151 seconds)
    (297/341) benchmarking ("perf_countnothing", "Int64", 1)...
    done (took 1.91014629 seconds)
    (298/341) benchmarking ("perf_countnothing", "BigInt", 1)...
    done (took 1.940992255 seconds)
    (299/341) benchmarking ("perf_binaryop", "*", "Bool", "(false, true)")...
    done (took 2.297221366 seconds)
    (300/341) benchmarking ("broadcast", "*", "Int8", "(false, true)")...
    done (took 2.361407394 seconds)
    (301/341) benchmarking ("broadcast", "*", "Complex{Float64}", "(false, true)")...
    done (took 3.114617944 seconds)
    (302/341) benchmarking ("skipmissing", "sum", "Union{Missing, Int64}", 1)...
    done (took 1.914258149 seconds)
    (303/341) benchmarking ("broadcast", "*", "Int64", "(false, false)")...
    done (took 2.207806595 seconds)
    (304/341) benchmarking ("map", "abs", "Float64", 1)...
    done (took 2.337011833 seconds)
    (305/341) benchmarking ("perf_sum3", "Float32", 0)...
    done (took 2.047451979 seconds)
    (306/341) benchmarking ("skipmissing", "collect", "Union{Missing, Float32}", 1)...
    done (took 3.01887474 seconds)
    (307/341) benchmarking ("broadcast", "abs", "Int64", 0)...
    done (took 2.124096203 seconds)
    (308/341) benchmarking ("sort", "Union{Missing, BigFloat}", 1)...
    done (took 6.89591129 seconds)
    (309/341) benchmarking ("broadcast", "identity", "Bool", 1)...
    done (took 2.129435941 seconds)
    (310/341) benchmarking ("map", "abs", "Int64", 1)...
    done (took 2.576785929 seconds)
    (311/341) benchmarking ("perf_simplecopy", "BigInt", 1)...
    done (took 2.343131728 seconds)
    (312/341) benchmarking ("perf_sum", "Float64", 0)...
    done (took 2.060782607 seconds)
    (313/341) benchmarking ("perf_simplecopy", "Int8", 1)...
    done (took 1.933810299 seconds)
    (314/341) benchmarking ("perf_countnothing", "Float32", 0)...
    done (took 1.916119658 seconds)
    (315/341) benchmarking ("map", "identity", "BigInt", 0)...
    done (took 2.287739753 seconds)
    (316/341) benchmarking ("sort", "Union{Nothing, Bool}", 0)...
    done (took 6.879697842 seconds)
    (317/341) benchmarking ("perf_binaryop", "*", "Int64", "(true, true)")...
    done (took 2.516526062 seconds)
    (318/341) benchmarking ("collect", "all", "BigInt", 1)...
    done (took 2.76059668 seconds)
    (319/341) benchmarking ("map", "abs", "Complex{Float64}", 1)...
    done (took 4.261292653 seconds)
    (320/341) benchmarking ("perf_countequals", "BigFloat")...
    done (took 4.33048416 seconds)
    (321/341) benchmarking ("map", "*", "BigFloat", "(true, true)")...
    done (took 6.924235847 seconds)
    (322/341) benchmarking ("map", "identity", "Complex{Float64}", 1)...
    done (took 2.909998327 seconds)
    (323/341) benchmarking ("broadcast", "identity", "Complex{Float64}", 1)...
    done (took 2.637699381 seconds)
    (324/341) benchmarking ("collect", "all", "Bool", 1)...
    done (took 2.146657508 seconds)
    (325/341) benchmarking ("map", "identity", "BigInt", 1)...
    done (took 2.72303076 seconds)
    (326/341) benchmarking ("skipmissing", "sum", "Int64", 0)...
    done (took 1.893737641 seconds)
    (327/341) benchmarking ("perf_binaryop", "*", "Float64", "(false, true)")...
    done (took 2.522824987 seconds)
    (328/341) benchmarking ("perf_countnothing", "Int8", 0)...
    done (took 1.907060685 seconds)
    (329/341) benchmarking ("perf_sum4", "BigFloat", 1)...
    done (took 6.874533484 seconds)
    (330/341) benchmarking ("perf_countnothing", "Int8", 1)...
    done (took 2.112815091 seconds)
    (331/341) benchmarking ("perf_sum3", "Int64", 1)...
    done (took 2.073603589 seconds)
    (332/341) benchmarking ("broadcast", "abs", "Float32", 1)...
    done (took 2.345076204 seconds)
    (333/341) benchmarking ("perf_binaryop", "*", "Int8", "(false, false)")...
    done (took 2.36490833 seconds)
    (334/341) benchmarking ("skipmissing", "collect", "Union{Missing, Bool}", 1)...
    done (took 2.80481669 seconds)
    (335/341) benchmarking ("broadcast", "identity", "Int64", 0)...
    done (took 2.169256731 seconds)
    (336/341) benchmarking ("perf_sum3", "Bool", 1)...
    done (took 2.079014988 seconds)
    (337/341) benchmarking ("skipmissing", "sum", "BigInt", 0)...
    done (took 6.922607994 seconds)
    (338/341) benchmarking ("broadcast", "identity", "Float64", 1)...
    done (took 3.119047617 seconds)
    (339/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Bool}", 0)...
    done (took 3.288208047 seconds)
    (340/341) benchmarking ("skipmissing", "collect", "BigFloat", 0)...
    done (took 3.218176993 seconds)
    (341/341) benchmarking ("collect", "filter", "Int64", 0)...
    done (took 3.028566298 seconds)
  done (took 1156.932849364 seconds)
done (took 1158.88969478 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 2.295165925 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 2.215310398 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 3.372755027 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 2.225728305 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.986798536 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 2.289213975 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.988842844 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 2.628246086 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 2.266509312 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 2.220604477 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 2.862769291 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 2.273006715 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 3.125039268 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 2.749454893 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 2.829562783 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 2.093209476 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.62160054 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 2.750762068 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 2.133165914 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 2.079184442 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 2.130046019 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 2.777279748 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 2.262187344 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 2.297796192 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 3.450716944 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 3.169498141 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 2.587327846 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 2.173368626 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.121775705 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 2.489100181 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 2.958662505 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 2.039892128 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.500375917 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 2.477753414 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 2.401840748 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 2.136453354 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 2.015738933 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 2.043613061 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 3.334182524 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 2.012055602 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.74294782 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 2.891995066 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 3.192825577 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 2.828729734 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 2.803190179 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 2.078772705 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 3.03342446 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 2.018998054 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 2.085555004 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 2.093976075 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.549096236 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.987069055 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 2.520988882 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 2.91787646 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 2.107721236 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 2.8950877 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 3.518453909 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 2.144641642 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 2.165828188 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 2.115193419 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.54043039 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 2.400224536 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 2.634245628 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 2.130194549 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 2.0102462 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.55002338 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 2.432243003 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 2.657697558 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.450734867 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 2.100787553 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.324015655 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 2.039946871 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 2.678398551 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.974802619 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 2.012351513 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.519940514 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 2.409637005 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 3.12479799 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 2.118779388 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 2.987729764 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 2.107958723 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 2.137270193 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 2.978596095 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 3.03931294 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 2.148367408 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 2.294095518 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.975027381 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 3.106561498 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 2.155367216 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 2.188223263 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 2.018301141 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 2.009252246 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 3.255317518 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 2.755685672 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 2.04670275 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 3.626324101 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 2.452245769 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 2.833908424 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 3.132814561 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.982693362 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.81096433 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 2.125238691 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 2.219731092 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 2.273529513 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 3.021377056 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 2.052793333 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.348413502 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 2.945926327 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 2.198000109 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 2.23754446 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 2.762585362 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.398424994 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 2.618175392 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 2.111425207 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 2.052646521 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 3.599929153 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 2.751547931 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.352201885 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.537249152 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 2.004443333 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 3.383036239 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 3.004871552 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 2.200424393 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 3.289451142 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 2.190553041 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.487405573 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 2.778089802 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 2.229868996 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.102654044 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 2.037362802 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 2.023176295 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 2.800871467 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 3.484739359 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 2.461043915 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 2.113709504 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 2.022631142 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 3.100849198 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 2.094401556 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 2.130970233 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 2.185439629 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 2.006938858 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.977300205 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 3.01023349 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 2.014945651 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 2.395657759 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 2.380580627 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 2.096035167 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 2.090158558 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 2.153897248 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.999987524 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 2.424955091 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.512539329 seconds)
done (took 375.860936156 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 2.699347639 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.35236901 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 2.490909995 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 2.306495634 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 2.551289075 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 2.483353779 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.999513333 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 2.505628312 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 2.021294667 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.481313414 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 2.192494588 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 2.976419586 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.313707699 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 2.15261644 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 2.454656703 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 2.195006941 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 2.021570418 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.495980333 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 2.551207507 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 2.452408015 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.966747855 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 2.333830456 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 2.202502994 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.566041617 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.944863374 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 3.305774503 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 2.46823389 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 2.03989465 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.450773801 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.865015742 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.862282271 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.44070132 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 2.446711408 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 5.829829686 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 3.225638245 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 2.858151884 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 2.524501954 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 2.918830289 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 2.488062579 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 2.4254017 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 2.380044002 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 4.592009628 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 3.027784314 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.97447811 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 2.121004177 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 2.642238729 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 2.063005386 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 4.03746614 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.894164876 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 2.858659149 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.433146253 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 2.957025043 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 2.97985952 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 2.501916557 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 2.157639531 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 5.765802559 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 2.563916433 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 2.591009702 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 2.442303299 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 2.466806257 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 2.475686983 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.624724832 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.608278701 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 2.269113589 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.89838901 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 2.50395135 seconds)
  done (took 195.61370028 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 2.377157636 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 2.300073156 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 2.553851622 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 3.560960881 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 2.563847387 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 2.421166093 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 3.530050984 seconds)
  done (took 21.199723151 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 3.156174817 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.959430914 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 2.493513722 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 2.488297314 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.962977612 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.110221457 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.888495034 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 2.047478418 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 2.849419232 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 2.248049446 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 2.130533199 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.989030992 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 3.014260703 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.920006373 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 2.606264688 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 2.544967141 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.081769747 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 3.280900163 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.373447981 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.636773197 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 2.886070578 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 2.849620093 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 2.294815153 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 2.072997695 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.087013338 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 3.134276941 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.728107502 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.891063277 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.993755101 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.973704085 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.982348065 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 2.416745434 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.96113397 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.832782242 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 2.004988602 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 2.073585747 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 2.029498358 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 2.102331425 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 2.179348739 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.901662204 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 2.042525144 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 2.060874791 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 2.113263882 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 2.017689558 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.938594166 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 2.169273332 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.972147941 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.95919983 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.934264217 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.959707624 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 2.232490988 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.980565439 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.967904781 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 2.809214162 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 2.309419762 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 2.844838712 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 2.046503273 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.963185951 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.994053977 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.983910825 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.622792884 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 2.786679627 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 2.083360646 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 2.725563792 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 2.042728324 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 2.044568767 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.95498583 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.95833122 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.06522273 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.982459776 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 2.498789785 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 2.034573338 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.482944513 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 2.17165805 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.893364642 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 2.930095434 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 2.876577639 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.963605905 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.945456751 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 3.209015142 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 2.01811078 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 3.7161275 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 3.068147918 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 2.971771034 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.984149032 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.061093444 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.072395073 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 2.043212035 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 3.972384937 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 3.889234146 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 2.096165144 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 2.338535893 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.979520845 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 2.025145619 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 2.01121017 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.082343845 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 2.286910763 seconds)
  done (took 233.448217688 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 3.904143832 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 4.038210892 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 5.013011518 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 2.234793925 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 3.577587508 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 3.793572332 seconds)
  done (took 24.37966727 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 3.855052335 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 2.98380982 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 2.059976662 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.995217544 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 2.155585459 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 2.126413361 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 2.119410114 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 3.405390776 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 3.330130891 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 2.020491165 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.976395665 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 2.054451391 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 2.044575531 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 2.171100563 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.948248722 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.968130585 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.949309482 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 2.049124054 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.972866722 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 2.098912144 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.095192418 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 2.024839693 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 2.104456189 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 3.054922528 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 3.112464612 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.989692652 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 3.663451374 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.96584217 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.962157846 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 3.816913478 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 2.163082607 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.962027695 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 2.883809078 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 5.083319756 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 3.111903493 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 2.961050815 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 3.437904505 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 2.138464844 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 2.115505107 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.974864472 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.999831372 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 2.112428212 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.992135021 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 2.001193606 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 3.57928787 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 3.985183277 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 3.161825609 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 2.440964168 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 2.024003658 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 2.005039739 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.993434721 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.993540232 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.953858108 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.992030112 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 5.063740776 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 3.6890148 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 3.087078236 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.9877967 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 2.061371979 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 3.495641686 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 3.298671968 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 2.075714856 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 3.504511351 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 3.114500609 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 2.950777634 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 2.021770673 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 3.033588161 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 3.275842873 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 2.134230161 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 2.053225909 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 2.053333389 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 2.035485584 seconds)
  done (took 186.104231903 seconds)
done (took 662.625212441 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.003769635 seconds)
  done (took 8.866842403 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.919396701 seconds)
  done (took 8.848120937 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.893833765 seconds)
  done (took 8.72714184 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.983188438 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 7.115163035 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.944682587 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.928718462 seconds)
  done (took 29.807099946 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.000532135 seconds)
  done (took 8.83271517 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.926815387 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.897843067 seconds)
  done (took 15.940657149 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 7.017071803 seconds)
  done (took 8.846248905 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.494083529 seconds)
  done (took 9.326640717 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.999099129 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 7.068969123 seconds)
  done (took 15.951497828 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.936617687 seconds)
  done (took 8.905952127 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.618353431 seconds)
  done (took 12.689682035 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 7.002190662 seconds)
  done (took 8.901193626 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 7.096565827 seconds)
  done (took 8.960681301 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.264729596 seconds)
  done (took 9.09497521 seconds)
done (took 165.529770368 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.98188644 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 7.140362539 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 7.0852801 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.909969655 seconds)
  done (took 29.983230402 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.953071283 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.958954176 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.96648719 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.949552991 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.959814513 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.956653346 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 2.214770116 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 2.295568468 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.964933138 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 2.058036731 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 2.005334683 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 2.263945944 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.956372174 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 2.279925005 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 2.33571667 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 2.06148898 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 2.006481507 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.97584824 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 2.25722751 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 2.00386093 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 2.753378497 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.953588051 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.951110173 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 2.730226578 seconds)
  done (took 52.641672826 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.143461235 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 2.327640826 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.10697088 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 2.39754747 seconds)
  done (took 10.800979165 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 2.327629939 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.972663922 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.984328114 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 2.102184629 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.063608963 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.988393179 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.920503785 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.953766867 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.960581053 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 2.077986752 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.292187541 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 2.072159212 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.169620889 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.970230239 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.311051841 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.937092058 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.902584798 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.973696095 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 2.09695564 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 2.109227881 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 2.168989176 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 2.413657696 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 2.072585665 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 2.236540268 seconds)
  done (took 51.928164052 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 2.493105304 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 3.07712822 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 3.450857362 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 3.131049137 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 2.457076769 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 2.82731713 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 3.364749673 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 2.733256604 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 2.57576986 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 3.330602609 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 2.860506587 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 3.503592555 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 2.169341345 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 2.982919866 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 2.50422833 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 2.107372686 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 2.200731894 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 2.882576341 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 2.393133144 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 3.376251348 seconds)
  done (took 58.250064603 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.906797411 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 6.947665195 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.262499047 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.197448399 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 7.003762812 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 7.047923981 seconds)
  done (took 34.195926235 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 4.748961947 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 2.080450141 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 2.507187704 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 2.779608745 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.111575062 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 2.510959709 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 2.747185133 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 2.09594743 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.058150146 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.691262936 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 3.908906471 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 2.203179902 seconds)
  done (took 34.363195875 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 7.034150956 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.961896508 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 7.206128729 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 2.096797703 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 3.061705061 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 3.001199406 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 3.499738087 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 7.214518439 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 3.371811444 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 2.122239702 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 2.897305766 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 2.131876433 seconds)
  done (took 52.481826485 seconds)
  (9/13) benchmarking "index"...
    (1/608) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.007882853 seconds)
    (2/608) benchmarking ("sumrange", "Array{Int64,2}")...
    done (took 6.903457002 seconds)
    (3/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.593109651 seconds)
    (4/608) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.591445856 seconds)
    (5/608) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.952980557 seconds)
    (6/608) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.587484012 seconds)
    (7/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int64,Array{Int64,2}}")...
    done (took 2.200612885 seconds)
    (8/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int32,Array{Int32,2}}")...
    done (took 3.68447281 seconds)
    (9/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.166711402 seconds)
    (10/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.93144272 seconds)
    (11/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.078388502 seconds)
    (12/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float64,Array{Float64,2}}")...
    done (took 6.90704085 seconds)
    (13/608) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 2.068516557 seconds)
    (14/608) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.78235708 seconds)
    (15/608) benchmarking ("sumrange_view", "Array{Float64,2}")...
    done (took 1.915685044 seconds)
    (16/608) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.7856171 seconds)
    (17/608) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.251477239 seconds)
    (18/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.398864006 seconds)
    (19/608) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.954201186 seconds)
    (20/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.01050183 seconds)
    (21/608) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.895087759 seconds)
    (22/608) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.393389217 seconds)
    (23/608) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.323957931 seconds)
    (24/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.009739127 seconds)
    (25/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int32,Array{Int32,2}}")...
    done (took 6.931129415 seconds)
    (26/608) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.728528182 seconds)
    (27/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int32,Array{Int32,2}}")...
    done (took 4.944433479 seconds)
    (28/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.955533936 seconds)
    (29/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.011010358 seconds)
    (30/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.101932712 seconds)
    (31/608) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.964441812 seconds)
    (32/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.95560193 seconds)
    (33/608) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.076134976 seconds)
    (34/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.477877604 seconds)
    (35/608) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.312468092 seconds)
    (36/608) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.964649573 seconds)
    (37/608) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.914565926 seconds)
    (38/608) benchmarking ("sumvector", "Base.ReinterpretArray{Float32,2,Int32,Array{Int32,2}}")...
    done (took 2.454287762 seconds)
    (39/608) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.038964097 seconds)
    (40/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.904629726 seconds)
    (41/608) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.792530467 seconds)
    (42/608) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.125744811 seconds)
    (43/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float64,Array{Float64,2}}")...
    done (took 6.551960114 seconds)
    (44/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float64,Array{Float64,2}}")...
    done (took 6.913926791 seconds)
    (45/608) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.05462417 seconds)
    (46/608) benchmarking ("sumeach", "Array{Float64,2}")...
    done (took 5.507810038 seconds)
    (47/608) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.158633891 seconds)
    (48/608) benchmarking ("sumvector", "Array{Int64,2}")...
    done (took 2.507750706 seconds)
    (49/608) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.991635972 seconds)
    (50/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float32,Array{Float32,2}}")...
    done (took 3.826424688 seconds)
    (51/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int64,Array{Int64,2}}")...
    done (took 2.157119076 seconds)
    (52/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.169216454 seconds)
    (53/608) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.921243637 seconds)
    (54/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int64,Array{Int64,2}}")...
    done (took 7.031147068 seconds)
    (55/608) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 5.825136021 seconds)
    (56/608) benchmarking ("sumrange", "Base.ReinterpretArray{Float32,2,Int32,Array{Int32,2}}")...
    done (took 6.999927827 seconds)
    (57/608) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.007552898 seconds)
    (58/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.326525454 seconds)
    (59/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float64,Array{Float64,2}}")...
    done (took 6.355353729 seconds)
    (60/608) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.954043745 seconds)
    (61/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.910735293 seconds)
    (62/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.305664539 seconds)
    (63/608) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.909913049 seconds)
    (64/608) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.061271319 seconds)
    (65/608) benchmarking ("sumvector", "100000:-1:1")...
    done (took 4.654913399 seconds)
    (66/608) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 7.123075344 seconds)
    (67/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 7.064355812 seconds)
    (68/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{Float32,2,Int32,Array{Int32,2}}")...
    done (took 7.166113959 seconds)
    (69/608) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.265957039 seconds)
    (70/608) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.922953616 seconds)
    (71/608) benchmarking ("sumrange_view", "1:100000")...
    done (took 2.051211827 seconds)
    (72/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.436208088 seconds)
    (73/608) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.811163847 seconds)
    (74/608) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.831382976 seconds)
    (75/608) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 7.003515753 seconds)
    (76/608) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.922228953 seconds)
    (77/608) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.526514278 seconds)
    (78/608) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.317428188 seconds)
    (79/608) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 7.046666578 seconds)
    (80/608) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 5.530420917 seconds)
    (81/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.085652624 seconds)
    (82/608) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.604229352 seconds)
    (83/608) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.589849746 seconds)
    (84/608) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.101534237 seconds)
    (85/608) benchmarking ("mapr_access", "Array{Int64,2}")...
    done (took 3.519369648 seconds)
    (86/608) benchmarking ("sumcolon_view", "1:100000")...
    done (took 2.059326738 seconds)
    (87/608) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.0699531 seconds)
    (88/608) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.276836229 seconds)
    (89/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.546682342 seconds)
    (90/608) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.986431186 seconds)
    (91/608) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.760379831 seconds)
    (92/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float64,Array{Float64,2}}")...
    done (took 1.974503846 seconds)
    (93/608) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.018625841 seconds)
    (94/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Float32,2,Int32,Array{Int32,2}}")...
    done (took 7.097441276 seconds)
    (95/608) benchmarking ("sum", "3dsubarray")...
    done (took 2.304473982 seconds)
    (96/608) benchmarking ("sumlogical_view", "Array{Float64,2}")...
    done (took 6.769140824 seconds)
    (97/608) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.775519136 seconds)
    (98/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 7.09457836 seconds)
    (99/608) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.536359827 seconds)
    (100/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float32,Array{Float32,2}}")...
    done (took 2.951879817 seconds)
    (101/608) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.349697105 seconds)
    (102/608) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.980863261 seconds)
    (103/608) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 5.317058397 seconds)
    (104/608) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.260395229 seconds)
    (105/608) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.027946827 seconds)
    (106/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.492241962 seconds)
    (107/608) benchmarking "5d"...
    done (took 4.738209334 seconds)
    (108/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.304020144 seconds)
    (109/608) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.281627937 seconds)
    (110/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int32,Array{Int32,2}}")...
    done (took 2.444228148 seconds)
    (111/608) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.927477718 seconds)
    (112/608) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.965637332 seconds)
    (113/608) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.073613562 seconds)
    (114/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.017584515 seconds)
    (115/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.943880076 seconds)
    (116/608) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.93146913 seconds)
    (117/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int64,Array{Int64,2}}")...
    done (took 6.913263082 seconds)
    (118/608) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.069751943 seconds)
    (119/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.373276991 seconds)
    (120/608) benchmarking ("sumelt", "BitArray{2}")...
    done (took 5.726523231 seconds)
    (121/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.144545806 seconds)
    (122/608) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 7.198312055 seconds)
    (123/608) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.023050304 seconds)
    (124/608) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.942874742 seconds)
    (125/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.020001635 seconds)
    (126/608) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.418271209 seconds)
    (127/608) benchmarking ("sumeach", "100000:-1:1")...
    done (took 2.017204333 seconds)
    (128/608) benchmarking ("sumrange", "Array{Float64,2}")...
    done (took 6.945761747 seconds)
    (129/608) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.394501944 seconds)
    (130/608) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.11474737 seconds)
    (131/608) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.930624659 seconds)
    (132/608) benchmarking ("sumvector_view", "Array{Float64,2}")...
    done (took 2.037809467 seconds)
    (133/608) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.770421988 seconds)
    (134/608) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.218118082 seconds)
    (135/608) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.08505867 seconds)
    (136/608) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 2.106979675 seconds)
    (137/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.967816891 seconds)
    (138/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.013150359 seconds)
    (139/608) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.414321397 seconds)
    (140/608) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.049595188 seconds)
    (141/608) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.263829424 seconds)
    (142/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.988919661 seconds)
    (143/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.445989792 seconds)
    (144/608) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.316278561 seconds)
    (145/608) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.9858047 seconds)
    (146/608) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.045242314 seconds)
    (147/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.833413253 seconds)
    (148/608) benchmarking ("sumcartesian_view", "Array{Float64,2}")...
    done (took 3.438616906 seconds)
    (149/608) benchmarking ("sumelt", "Array{Float64,2}")...
    done (took 5.462156906 seconds)
    (150/608) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.469840702 seconds)
    (151/608) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.149908897 seconds)
    (152/608) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.673322735 seconds)
    (153/608) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.01581965 seconds)
    (154/608) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.919815595 seconds)
    (155/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.924682515 seconds)
    (156/608) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.251503891 seconds)
    (157/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int32,Array{Int32,2}}")...
    done (took 2.570774013 seconds)
    (158/608) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.14059626 seconds)
    (159/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.73988133 seconds)
    (160/608) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 2.142628489 seconds)
    (161/608) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.976939014 seconds)
    (162/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.043986139 seconds)
    (163/608) benchmarking "ind2sub"...
    done (took 6.922926944 seconds)
    (164/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.399323439 seconds)
    (165/608) benchmarking ("sumlinear_view", "Array{Float64,2}")...
    done (took 6.984332058 seconds)
    (166/608) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 5.589531323 seconds)
    (167/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float32,Array{Float32,2}}")...
    done (took 6.918116418 seconds)
    (168/608) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.914906459 seconds)
    (169/608) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.70133496 seconds)
    (170/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float64,Array{Float64,2}}")...
    done (took 6.924696877 seconds)
    (171/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.557058459 seconds)
    (172/608) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.969815476 seconds)
    (173/608) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 3.049825779 seconds)
    (174/608) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.372169824 seconds)
    (175/608) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.820587093 seconds)
    (176/608) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.772071751 seconds)
    (177/608) benchmarking ("sumcolon", "Array{Float64,2}")...
    done (took 6.916869118 seconds)
    (178/608) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.270949018 seconds)
    (179/608) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 3.090288482 seconds)
    (180/608) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 7.119891154 seconds)
    (181/608) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.415485313 seconds)
    (182/608) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.984202471 seconds)
    (183/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.983457635 seconds)
    (184/608) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.200667863 seconds)
    (185/608) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.023262353 seconds)
    (186/608) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.04756467 seconds)
    (187/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int32,Array{Int32,2}}")...
    done (took 1.960252061 seconds)
    (188/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.003120136 seconds)
    (189/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float32,Array{Float32,2}}")...
    done (took 5.069959139 seconds)
    (190/608) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.982566667 seconds)
    (191/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.579957202 seconds)
    (192/608) benchmarking ("sumelt", "1:100000")...
    done (took 1.989266305 seconds)
    (193/608) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 2.253999359 seconds)
    (194/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int64,Array{Int64,2}}")...
    done (took 6.93945804 seconds)
    (195/608) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.355602604 seconds)
    (196/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.641991351 seconds)
    (197/608) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.93150671 seconds)
    (198/608) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 3.883706987 seconds)
    (199/608) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.055239622 seconds)
    (200/608) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.564000544 seconds)
    (201/608) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.949221838 seconds)
    (202/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.928153573 seconds)
    (203/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.019441964 seconds)
    (204/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float32,Array{Float32,2}}")...
    done (took 4.477744909 seconds)
    (205/608) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.991339803 seconds)
    (206/608) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.998939437 seconds)
    (207/608) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 4.974367301 seconds)
    (208/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int64,Array{Int64,2}}")...
    done (took 7.169609328 seconds)
    (209/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float64,Array{Float64,2}}")...
    done (took 2.023450726 seconds)
    (210/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.033454724 seconds)
    (211/608) benchmarking ("sumelt_boundscheck", "Array{Int64,2}")...
    done (took 3.092134793 seconds)
    (212/608) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.341450762 seconds)
    (213/608) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.273500632 seconds)
    (214/608) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 2.395541184 seconds)
    (215/608) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 5.069920089 seconds)
    (216/608) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.314177538 seconds)
    (217/608) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.930356524 seconds)
    (218/608) benchmarking ("sumcolon_view", "Array{Float64,2}")...
    done (took 1.936732211 seconds)
    (219/608) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 5.685501647 seconds)
    (220/608) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.05435915 seconds)
    (221/608) benchmarking ("sumelt", "Base.ReinterpretArray{Float32,2,Int32,Array{Int32,2}}")...
    done (took 6.159536803 seconds)
    (222/608) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.935734951 seconds)
    (223/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.419727328 seconds)
    (224/608) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.058424717 seconds)
    (225/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float64,Array{Float64,2}}")...
    done (took 6.918585208 seconds)
    (226/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int32,Array{Int32,2}}")...
    done (took 6.948008968 seconds)
    (227/608) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 5.374476319 seconds)
    (228/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float32,Array{Float32,2}}")...
    done (took 2.79423265 seconds)
    (229/608) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 7.160679453 seconds)
    (230/608) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.114500028 seconds)
    (231/608) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 6.949672101 seconds)
    (232/608) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.514769576 seconds)
    (233/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.958864187 seconds)
    (234/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Int32,3,Float64,Array{Float64,3}}")...
    done (took 2.18655808 seconds)
    (235/608) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.025236135 seconds)
    (236/608) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.957250403 seconds)
    (237/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.652372334 seconds)
    (238/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int32,Array{Int32,2}}")...
    done (took 4.17356301 seconds)
    (239/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.518204296 seconds)
    (240/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Float32,2,Int32,Array{Int32,2}}")...
    done (took 5.486253022 seconds)
    (241/608) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.980792323 seconds)
    (242/608) benchmarking ("sumlogical_view", "Array{Int64,2}")...
    done (took 7.21655991 seconds)
    (243/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.157143589 seconds)
    (244/608) benchmarking ("sumeach", "1:100000")...
    done (took 2.007706558 seconds)
    (245/608) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.938644898 seconds)
    (246/608) benchmarking ("sumvector", "1:100000")...
    done (took 4.659314132 seconds)
    (247/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int64,Array{Int64,2}}")...
    done (took 7.137213461 seconds)
    (248/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.975445716 seconds)
    (249/608) benchmarking ("sumlogical", "1:100000")...
    done (took 3.264999672 seconds)
    (250/608) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.337177527 seconds)
    (251/608) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.975024549 seconds)
    (252/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.98807666 seconds)
    (253/608) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.088685667 seconds)
    (254/608) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.996730757 seconds)
    (255/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.365590053 seconds)
    (256/608) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.11586334 seconds)
    (257/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Int32,3,Float64,Array{Float64,3}}")...
    done (took 2.203719417 seconds)
    (258/608) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 3.467774064 seconds)
    (259/608) benchmarking ("sumvector", "Array{Float64,2}")...
    done (took 2.830549633 seconds)
    (260/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Float32,2,Int32,Array{Int32,2}}")...
    done (took 5.491950145 seconds)
    (261/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.925439425 seconds)
    (262/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.582467182 seconds)
    (263/608) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.004641995 seconds)
    (264/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.720727959 seconds)
    (265/608) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.105495165 seconds)
    (266/608) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.420254331 seconds)
    (267/608) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.160930918 seconds)
    (268/608) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.931018154 seconds)
    (269/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.656811872 seconds)
    (270/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float32,Array{Float32,2}}")...
    done (took 5.099045991 seconds)
    (271/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float32,Array{Float32,2}}")...
    done (took 2.082433117 seconds)
    (272/608) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 2.107284257 seconds)
    (273/608) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.775970194 seconds)
    (274/608) benchmarking "4d"...
    done (took 3.858905883 seconds)
    (275/608) benchmarking ("sumlinear_view", "Array{Int64,2}")...
    done (took 7.011443761 seconds)
    (276/608) benchmarking ("sumlogical", "Base.ReinterpretArray{Float32,2,Int32,Array{Int32,2}}")...
    done (took 6.462983211 seconds)
    (277/608) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.964149588 seconds)
    (278/608) benchmarking ("sumeach", "Base.ReinterpretArray{Int32,3,Float64,Array{Float64,3}}")...
    done (took 2.438080353 seconds)
    (279/608) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.942146181 seconds)
    (280/608) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.166063815 seconds)
    (281/608) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.931886381 seconds)
    (282/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.728706196 seconds)
    (283/608) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.197763008 seconds)
    (284/608) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.705263835 seconds)
    (285/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int32,Array{Int32,2}}")...
    done (took 4.022416782 seconds)
    (286/608) benchmarking ("sumeach", "Array{Int64,2}")...
    done (took 2.859504638 seconds)
    (287/608) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.540435166 seconds)
    (288/608) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.529071904 seconds)
    (289/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float64,Array{Float64,2}}")...
    done (took 7.080008664 seconds)
    (290/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int32,Array{Int32,2}}")...
    done (took 5.722679885 seconds)
    (291/608) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.567811263 seconds)
    (292/608) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 7.117015443 seconds)
    (293/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.846277631 seconds)
    (294/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.083479811 seconds)
    (295/608) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.212150377 seconds)
    (296/608) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.298497246 seconds)
    (297/608) benchmarking ("sumvector_view", "Array{Int64,2}")...
    done (took 2.13881299 seconds)
    (298/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float32,Array{Float32,2}}")...
    done (took 6.940825243 seconds)
    (299/608) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.762830315 seconds)
    (300/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.040627673 seconds)
    (301/608) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.529834895 seconds)
    (302/608) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.999295893 seconds)
    (303/608) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 3.005276234 seconds)
    (304/608) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.66076149 seconds)
    (305/608) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.958141037 seconds)
    (306/608) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.233303436 seconds)
    (307/608) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.514141949 seconds)
    (308/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Int32,3,Float64,Array{Float64,3}}")...
    done (took 2.206429873 seconds)
    (309/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float32,Array{Float32,2}}")...
    done (took 3.780401321 seconds)
    (310/608) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.793299106 seconds)
    (311/608) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.176775216 seconds)
    (312/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.16738177 seconds)
    (313/608) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.15576656 seconds)
    (314/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 7.056872741 seconds)
    (315/608) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.729704036 seconds)
    (316/608) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 6.494013996 seconds)
    (317/608) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.974771521 seconds)
    (318/608) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.935042434 seconds)
    (319/608) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.275445933 seconds)
    (320/608) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.132805753 seconds)
    (321/608) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.795212305 seconds)
    (322/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int64,Array{Int64,2}}")...
    done (took 6.676613239 seconds)
    (323/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int32,Array{Int32,2}}")...
    done (took 6.968472777 seconds)
    (324/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.524184003 seconds)
    (325/608) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 7.177166119 seconds)
    (326/608) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.570802271 seconds)
    (327/608) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.049770909 seconds)
    (328/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.343002329 seconds)
    (329/608) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.235582878 seconds)
    (330/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.964369457 seconds)
    (331/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 7.016858983 seconds)
    (332/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float64,Array{Float64,2}}")...
    done (took 5.74912384 seconds)
    (333/608) benchmarking ("sumelt_boundscheck", "Array{Float64,2}")...
    done (took 5.337985619 seconds)
    (334/608) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.130549382 seconds)
    (335/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 7.045288309 seconds)
    (336/608) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.464714243 seconds)
    (337/608) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.622275864 seconds)
    (338/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.340134963 seconds)
    (339/608) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.959951657 seconds)
    (340/608) benchmarking ("sumcartesian_view", "Array{Int64,2}")...
    done (took 2.824919505 seconds)
    (341/608) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.660731673 seconds)
    (342/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float32,Array{Float32,2}}")...
    done (took 1.957795111 seconds)
    (343/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Int32,3,Float64,Array{Float64,3}}")...
    done (took 2.036478015 seconds)
    (344/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.93170457 seconds)
    (345/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float64,Array{Float64,2}}")...
    done (took 6.923903613 seconds)
    (346/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.961344582 seconds)
    (347/608) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 2.009018342 seconds)
    (348/608) benchmarking ("sumcolon", "Base.ReinterpretArray{Float32,2,Int32,Array{Int32,2}}")...
    done (took 6.923882513 seconds)
    (349/608) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.662680735 seconds)
    (350/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int64,Array{Int64,2}}")...
    done (took 7.05385219 seconds)
    (351/608) benchmarking ("sumcolon", "1:100000")...
    done (took 3.240981397 seconds)
    (352/608) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.59676164 seconds)
    (353/608) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.977920606 seconds)
    (354/608) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.148240316 seconds)
    (355/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.927298301 seconds)
    (356/608) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.462297418 seconds)
    (357/608) benchmarking "3d"...
    done (took 3.697253863 seconds)
    (358/608) benchmarking ("sum", "3darray")...
    done (took 4.234261928 seconds)
    (359/608) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.924894771 seconds)
    (360/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Int32,3,Float64,Array{Float64,3}}")...
    done (took 2.106627456 seconds)
    (361/608) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.326323893 seconds)
    (362/608) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 7.000548598 seconds)
    (363/608) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.078527857 seconds)
    (364/608) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.920136546 seconds)
    (365/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float64,Array{Float64,2}}")...
    done (took 2.790946388 seconds)
    (366/608) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.323759485 seconds)
    (367/608) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.007163476 seconds)
    (368/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.502495145 seconds)
    (369/608) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.553676088 seconds)
    (370/608) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 6.96435033 seconds)
    (371/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Int32,3,Float64,Array{Float64,3}}")...
    done (took 2.091613017 seconds)
    (372/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 7.012250448 seconds)
    (373/608) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.81302329 seconds)
    (374/608) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.487829129 seconds)
    (375/608) benchmarking ("sumlogical", "Array{Int64,2}")...
    done (took 7.236250423 seconds)
    (376/608) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.909129735 seconds)
    (377/608) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.990824934 seconds)
    (378/608) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.447126042 seconds)
    (379/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Float32,2,Int32,Array{Int32,2}}")...
    done (took 6.766773781 seconds)
    (380/608) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.97495251 seconds)
    (381/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.498021376 seconds)
    (382/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.442986484 seconds)
    (383/608) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 2.121213657 seconds)
    (384/608) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.26538388 seconds)
    (385/608) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.965173847 seconds)
    (386/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Float32,2,Int32,Array{Int32,2}}")...
    done (took 6.974544051 seconds)
    (387/608) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.960545364 seconds)
    (388/608) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.064829704 seconds)
    (389/608) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.756043325 seconds)
    (390/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float64,Array{Float64,2}}")...
    done (took 7.155856523 seconds)
    (391/608) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.53882587 seconds)
    (392/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.857536718 seconds)
    (393/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.345280155 seconds)
    (394/608) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.522926155 seconds)
    (395/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.326239955 seconds)
    (396/608) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.629890516 seconds)
    (397/608) benchmarking ("sumeach", "BitArray{2}")...
    done (took 5.735413807 seconds)
    (398/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.941845496 seconds)
    (399/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.145646061 seconds)
    (400/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.932871352 seconds)
    (401/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.959359687 seconds)
    (402/608) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.297646903 seconds)
    (403/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float32,Array{Float32,2}}")...
    done (took 6.957799375 seconds)
    (404/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{Float32,2,Int32,Array{Int32,2}}")...
    done (took 2.1257218 seconds)
    (405/608) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 7.058545773 seconds)
    (406/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Float32,2,Int32,Array{Int32,2}}")...
    done (took 7.100365586 seconds)
    (407/608) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 7.027844779 seconds)
    (408/608) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.812174036 seconds)
    (409/608) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.079008616 seconds)
    (410/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.853262348 seconds)
    (411/608) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.883829602 seconds)
    (412/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.80210943 seconds)
    (413/608) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.975712804 seconds)
    (414/608) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.113552154 seconds)
    (415/608) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.934761074 seconds)
    (416/608) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.93524122 seconds)
    (417/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.961250876 seconds)
    (418/608) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.027430905 seconds)
    (419/608) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.005987002 seconds)
    (420/608) benchmarking ("sumelt", "Array{Int64,2}")...
    done (took 3.182979792 seconds)
    (421/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.027237931 seconds)
    (422/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float64,Array{Float64,2}}")...
    done (took 6.972903105 seconds)
    (423/608) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 2.007763208 seconds)
    (424/608) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.065007952 seconds)
    (425/608) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.330426876 seconds)
    (426/608) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.98928268 seconds)
    (427/608) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.930479099 seconds)
    (428/608) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.429388511 seconds)
    (429/608) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.629138718 seconds)
    (430/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.565571766 seconds)
    (431/608) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.082050851 seconds)
    (432/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.94115879 seconds)
    (433/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int64,Array{Int64,2}}")...
    done (took 6.904369619 seconds)
    (434/608) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.412143995 seconds)
    (435/608) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.694818714 seconds)
    (436/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int64,Array{Int64,2}}")...
    done (took 7.010316905 seconds)
    (437/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.198324721 seconds)
    (438/608) benchmarking ("sumlogical", "Array{Float64,2}")...
    done (took 6.965608767 seconds)
    (439/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int64,Array{Int64,2}}")...
    done (took 7.478292496 seconds)
    (440/608) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.54882277 seconds)
    (441/608) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 3.073539996 seconds)
    (442/608) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.778807199 seconds)
    (443/608) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.715158597 seconds)
    (444/608) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.969872994 seconds)
    (445/608) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.899065797 seconds)
    (446/608) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 7.304395114 seconds)
    (447/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int64,Array{Int64,2}}")...
    done (took 7.066662686 seconds)
    (448/608) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.153121977 seconds)
    (449/608) benchmarking ("sumeach_view", "Array{Float64,2}")...
    done (took 6.941759282 seconds)
    (450/608) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 3.156618793 seconds)
    (451/608) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.945901304 seconds)
    (452/608) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.94031277 seconds)
    (453/608) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.767800064 seconds)
    (454/608) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.02745534 seconds)
    (455/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float32,Array{Float32,2}}")...
    done (took 3.870151259 seconds)
    (456/608) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.123360266 seconds)
    (457/608) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.267514864 seconds)
    (458/608) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.355042765 seconds)
    (459/608) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.590919328 seconds)
    (460/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.891470918 seconds)
    (461/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int64,Array{Int64,2}}")...
    done (took 7.358944719 seconds)
    (462/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.94095147 seconds)
    (463/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.095115402 seconds)
    (464/608) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.855802021 seconds)
    (465/608) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.115538545 seconds)
    (466/608) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.938897555 seconds)
    (467/608) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.989419098 seconds)
    (468/608) benchmarking ("sumcolon_view", "Array{Int64,2}")...
    done (took 2.034954898 seconds)
    (469/608) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.958905926 seconds)
    (470/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float32,Array{Float32,2}}")...
    done (took 2.476644038 seconds)
    (471/608) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.484022972 seconds)
    (472/608) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 3.567987134 seconds)
    (473/608) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.253128629 seconds)
    (474/608) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.405555597 seconds)
    (475/608) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.940001734 seconds)
    (476/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int32,Array{Int32,2}}")...
    done (took 6.934095892 seconds)
    (477/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.059901639 seconds)
    (478/608) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.134247404 seconds)
    (479/608) benchmarking "sub2ind"...
    done (took 8.062625087 seconds)
    (480/608) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.984499918 seconds)
    (481/608) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.531047359 seconds)
    (482/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.47902404 seconds)
    (483/608) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.890594769 seconds)
    (484/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.979333153 seconds)
    (485/608) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.455506291 seconds)
    (486/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.734748036 seconds)
    (487/608) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.833634389 seconds)
    (488/608) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.120031708 seconds)
    (489/608) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.025349135 seconds)
    (490/608) benchmarking ("mapr_access", "Array{Float64,2}")...
    done (took 4.004576742 seconds)
    (491/608) benchmarking "6d"...
    done (took 4.697985866 seconds)
    (492/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int64,Array{Int64,2}}")...
    done (took 2.740116594 seconds)
    (493/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.338146232 seconds)
    (494/608) benchmarking ("sumrange", "1:100000")...
    done (took 3.318136196 seconds)
    (495/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int64,Array{Int64,2}}")...
    done (took 1.977107598 seconds)
    (496/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.717954742 seconds)
    (497/608) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.965916812 seconds)
    (498/608) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.16750942 seconds)
    (499/608) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 6.954805489 seconds)
    (500/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.942170312 seconds)
    (501/608) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.441417275 seconds)
    (502/608) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.551717318 seconds)
    (503/608) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.932710218 seconds)
    (504/608) benchmarking ("sumrange", "100000:-1:1")...
    done (took 3.457185645 seconds)
    (505/608) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.073535436 seconds)
    (506/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float64,Array{Float64,2}}")...
    done (took 2.058746703 seconds)
    (507/608) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.970408383 seconds)
    (508/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.295782484 seconds)
    (509/608) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.332330833 seconds)
    (510/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float64,Array{Float64,2}}")...
    done (took 7.098102388 seconds)
    (511/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.590598598 seconds)
    (512/608) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.963807967 seconds)
    (513/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.946869403 seconds)
    (514/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.471112899 seconds)
    (515/608) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.449650242 seconds)
    (516/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{Float32,2,Int32,Array{Int32,2}}")...
    done (took 2.093538108 seconds)
    (517/608) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.087252292 seconds)
    (518/608) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.554936336 seconds)
    (519/608) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 2.083540563 seconds)
    (520/608) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.983782953 seconds)
    (521/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.149534443 seconds)
    (522/608) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.971801061 seconds)
    (523/608) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 3.641464989 seconds)
    (524/608) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 6.969941522 seconds)
    (525/608) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.678955998 seconds)
    (526/608) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 3.756159945 seconds)
    (527/608) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.035967433 seconds)
    (528/608) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.969196819 seconds)
    (529/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.503879506 seconds)
    (530/608) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.607769441 seconds)
    (531/608) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.113466789 seconds)
    (532/608) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.296881892 seconds)
    (533/608) benchmarking ("sumelt", "Base.ReinterpretArray{Int32,3,Float64,Array{Float64,3}}")...
    done (took 2.202498531 seconds)
    (534/608) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.342795108 seconds)
    (535/608) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 7.00802561 seconds)
    (536/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int32,Array{Int32,2}}")...
    done (took 2.615716468 seconds)
    (537/608) benchmarking ("sumrange_view", "Array{Int64,2}")...
    done (took 1.941406714 seconds)
    (538/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.982959119 seconds)
    (539/608) benchmarking ("sumcolon", "Array{Int64,2}")...
    done (took 7.093546617 seconds)
    (540/608) benchmarking ("sumcartesian", "Array{Int64,2}")...
    done (took 6.016492355 seconds)
    (541/608) benchmarking ("mapr_access", "Base.ReinterpretArray{Float32,2,Int32,Array{Int32,2}}")...
    done (took 7.188569477 seconds)
    (542/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float32,Array{Float32,2}}")...
    done (took 3.751075004 seconds)
    (543/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.944295624 seconds)
    (544/608) benchmarking ("sumlinear", "1:100000")...
    done (took 2.117499076 seconds)
    (545/608) benchmarking ("sumvector_view", "1:100000")...
    done (took 3.566339614 seconds)
    (546/608) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.242567965 seconds)
    (547/608) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.438431387 seconds)
    (548/608) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 3.089326858 seconds)
    (549/608) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.815708496 seconds)
    (550/608) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.953654544 seconds)
    (551/608) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.727938579 seconds)
    (552/608) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.636735295 seconds)
    (553/608) benchmarking ("sumeach_view", "Array{Int64,2}")...
    done (took 7.075122963 seconds)
    (554/608) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.674054436 seconds)
    (555/608) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 5.685688185 seconds)
    (556/608) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.192719429 seconds)
    (557/608) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.96866528 seconds)
    (558/608) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.383137085 seconds)
    (559/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.992689353 seconds)
    (560/608) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.802136525 seconds)
    (561/608) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.000504876 seconds)
    (562/608) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.951313107 seconds)
    (563/608) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.943453738 seconds)
    (564/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int64,Array{Int64,2}}")...
    done (took 7.010118802 seconds)
    (565/608) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 3.33808539 seconds)
    (566/608) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 6.963036761 seconds)
    (567/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.629619447 seconds)
    (568/608) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 4.910611319 seconds)
    (569/608) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 7.191729002 seconds)
    (570/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float64,Array{Float64,2}}")...
    done (took 6.916448972 seconds)
    (571/608) benchmarking ("sumlinear", "Array{Float64,2}")...
    done (took 5.521530294 seconds)
    (572/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float32,Array{Float32,2}}")...
    done (took 4.867656253 seconds)
    (573/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int32,Array{Int32,2}}")...
    done (took 1.994917777 seconds)
    (574/608) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.714963423 seconds)
    (575/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 7.143539389 seconds)
    (576/608) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.018759126 seconds)
    (577/608) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.257660028 seconds)
    (578/608) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.015532484 seconds)
    (579/608) benchmarking "2d"...
    done (took 3.283636833 seconds)
    (580/608) benchmarking ("sumeach", "Base.ReinterpretArray{Float32,2,Int32,Array{Int32,2}}")...
    done (took 7.323784464 seconds)
    (581/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float32,Array{Float32,2}}")...
    done (took 7.046052083 seconds)
    (582/608) benchmarking "7d"...
    done (took 2.43377651 seconds)
    (583/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.432687435 seconds)
    (584/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.944233294 seconds)
    (585/608) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 7.01571581 seconds)
    (586/608) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 2.034332 seconds)
    (587/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int32,Array{Int32,2}}")...
    done (took 4.804426557 seconds)
    (588/608) benchmarking ("sumlinear", "Array{Int64,2}")...
    done (took 2.828402369 seconds)
    (589/608) benchmarking ("sumcartesian", "Array{Float64,2}")...
    done (took 5.461390377 seconds)
    (590/608) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.955941194 seconds)
    (591/608) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.371755231 seconds)
    (592/608) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.170216476 seconds)
    (593/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.746261313 seconds)
    (594/608) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.434641858 seconds)
    (595/608) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 7.008389341 seconds)
    (596/608) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.947743797 seconds)
    (597/608) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.084095691 seconds)
    (598/608) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.168876708 seconds)
    (599/608) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.145039928 seconds)
    (600/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.815433894 seconds)
    (601/608) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.160226984 seconds)
    (602/608) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.938454602 seconds)
    (603/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int32,Array{Int32,2}}")...
    done (took 2.51205031 seconds)
    (604/608) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.103587908 seconds)
    (605/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int32,Array{Int32,2}}")...
    done (took 1.980581454 seconds)
    (606/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{Float32,2,Int32,Array{Int32,2}}")...
    done (took 1.962809927 seconds)
    (607/608) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 5.556849365 seconds)
    (608/608) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 7.123885693 seconds)
  done (took 2608.731398048 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.993253514 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.956739066 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.984350933 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 7.042632343 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.028789241 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.076026356 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 7.012152927 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.098859511 seconds)
  done (took 58.181578469 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 7.036879364 seconds)
    (2/17) benchmarking "4467"...
    done (took 7.071141323 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 7.19679782 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 7.18400855 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 6.672784425 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 7.008140419 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.971792242 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.950008441 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 6.945563282 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 7.20386649 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 7.176476573 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 7.112551884 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.109055313 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 6.955271873 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 7.137593796 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.942909041 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 6.967530961 seconds)
  done (took 111.57021909 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.992156929 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.390298538 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 7.073185127 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 7.199929772 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 11.746092239 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 7.131606341 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.705063655 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 7.035138547 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.953957381 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.059945203 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.495041198 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 7.208173524 seconds)
  done (took 92.968785312 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 3.531241089 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 3.649808975 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 3.650781999 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 3.574500065 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 3.607145897 seconds)
  done (took 19.940712935 seconds)
done (took 3218.045575286 seconds)
(18/20) benchmarking "misc"...
  (1/15) benchmarking "fastmath many args"...
  done (took 2.180794555 seconds)
  (2/15) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 5.349009895 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 3.192102937 seconds)
  done (took 10.405907112 seconds)
  (3/15) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.044394105 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.086622906 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.199390381 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.031823143 seconds)
  done (took 10.497149671 seconds)
  (4/15) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.373768663 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.556040703 seconds)
  done (took 6.911617478 seconds)
  (5/15) benchmarking "perf highdim generator"...
  done (took 2.606036056 seconds)
  (6/15) benchmarking "18129"...
  done (took 7.019051817 seconds)
  (7/15) benchmarking "20517"...
  done (took 2.590320675 seconds)
  (8/15) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.944906372 seconds)
    (2/3) benchmarking "Float64"...
    done (took 7.007214539 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.952878201 seconds)
  done (took 22.794627019 seconds)
  (9/15) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.970027526 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.97229025 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.978861489 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.972284772 seconds)
  done (took 9.763435045 seconds)
  (10/15) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.994421549 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 4.392458494 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 7.02073347 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 2.970893712 seconds)
  done (took 23.246979183 seconds)
  (11/15) benchmarking "foldl"...
    (1/3) benchmarking "foldl(+, filter(...))"...
    done (took 2.242327625 seconds)
    (2/3) benchmarking "foldl(+, filter(...); init = 0.0)"...
    done (took 2.237839967 seconds)
    (3/3) benchmarking "foldl(+, flatten(filter(...)))"...
    done (took 2.721480207 seconds)
  done (took 9.069302547 seconds)
  (12/15) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.887581381 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.338313266 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.869542673 seconds)
  done (took 9.964681143 seconds)
  (13/15) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.979522735 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.997951098 seconds)
  done (took 7.845226669 seconds)
  (14/15) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.13160861 seconds)
  done (took 3.997368563 seconds)
  (15/15) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.309054493 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.575727378 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 3.159337217 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 3.057498433 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 3.127613952 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.753532321 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.702202598 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.39225478 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.778219916 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.65505555 seconds)
  done (took 29.376690092 seconds)
done (took 160.220444176 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 4.298201719 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 8.179101866 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.996046333 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.045565331 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.4366965 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.212578318 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.668483541 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 4.08604651 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 3.393872553 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 3.164794874 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 4.130586731 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.120539375 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.336675146 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 8.116250156 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.532703886 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 8.518218736 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.842602952 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 4.546553811 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.415630085 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.319732739 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.210683377 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 3.262834606 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.927137446 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 3.380056213 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.196782853 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.256713143 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 4.277198089 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.190278496 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.442445379 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 4.307348609 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.98475941 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 5.47644026 seconds)
  done (took 191.140117131 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.95010343 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.94979236 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.066830723 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 7.191517974 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.074622103 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.954068668 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.95419283 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.956440698 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.949176664 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.954457383 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.973276986 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.218865758 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.134234453 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.961029422 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.953444811 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.948157041 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.972866477 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.949281491 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.949961428 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 7.201524998 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.0844542 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 7.044422722 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.948394334 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.978008934 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.947203716 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.951723926 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.963275819 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.062675632 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 7.14018967 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.979830938 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.952806929 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.948183749 seconds)
  done (took 226.144942972 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.951906286 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.951597739 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.94785635 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 7.012333224 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.161636065 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.975900311 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.956166756 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.956386781 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.961647677 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.965977719 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.952975912 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.953878245 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.160074167 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.142456728 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.957016156 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.958901327 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.955576289 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.951610072 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.981416888 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.948352987 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.138363048 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 7.139381466 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.962091178 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.957360738 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.95809656 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.957366652 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.9653017 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.947279313 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 7.013252442 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 7.156655522 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.982378759 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 7.012468351 seconds)
  done (took 225.875040538 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.311363442 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 2.01561494 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 2.919064335 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 3.592952268 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 2.895529178 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.980469335 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 3.915343944 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.29586889 seconds)
  done (took 23.80573648 seconds)
done (took 668.854924034 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 4.306441841 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.961973418 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.366827119 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 2.244893865 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.967338028 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.387678315 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 2.208845255 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.673775873 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.868355164 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.47356278 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.940743517 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 2.230679654 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.978433745 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 2.239879311 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.162032493 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.503163508 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.640900531 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.747367389 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.2655508 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.63304516 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.258522184 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 3.233818519 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.564937016 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 3.044278673 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 3.056524325 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.183644208 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.40571715 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.691692747 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 2.22751503 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.240437368 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.467430135 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.785800596 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 2.248629526 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 2.193658833 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.491877058 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.383128058 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.62287173 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 3.701977243 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.186675806 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.862461303 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.584222253 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.77690094 seconds)
  done (took 121.888474971 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 2.09028625 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 2.062305164 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 2.166393924 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 2.086411471 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 2.837677429 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 2.102792839 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 2.207217277 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 2.174198417 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 2.110851205 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 2.173732123 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 2.195561657 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 2.822303836 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 2.200735481 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 2.734741625 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 2.183711235 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 2.20698124 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 2.037812326 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 2.929602144 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 2.221225004 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 2.16517479 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 2.028707609 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 2.122050254 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 2.028382692 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 2.206758196 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 2.128864649 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 2.213917512 seconds)
  done (took 60.47197101 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 2.070259863 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.226822562 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.414257594 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 3.568229947 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 2.280927326 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 3.322083922 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 2.437984397 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 2.339287475 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 4.159790725 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 3.427587205 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.07410362 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 4.675440095 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 2.561534481 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.390840655 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 6.056819311 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 2.159522881 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 2.200694454 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 2.274074285 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.268229873 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 4.694781453 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 3.648757092 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 2.199057143 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 2.349081004 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 4.687662141 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 2.844263281 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 4.570330713 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 3.517593181 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.761049952 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 5.987621027 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.135766903 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.321845712 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 2.319503821 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.522608472 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.323455276 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.257351071 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 3.679123281 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 2.124024116 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.15391147 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 3.597562134 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 2.312425436 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.335344874 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 4.42723683 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.53729172 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.635414974 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 4.205030507 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 2.290935351 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.563103887 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.088955805 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.316079569 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 3.998872252 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.383986667 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 5.348290667 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 3.763565822 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 2.281676338 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.243080206 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.874521481 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 2.381306522 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.386177267 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 3.444447554 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 4.336610352 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 2.176254207 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 2.549692748 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.189436902 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 4.211688847 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.364777352 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 2.329979974 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 4.633458102 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 4.615541316 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.538348581 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 5.700505247 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.868982581 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 2.084657234 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 2.041349741 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.150367637 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.287586856 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.639732928 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 4.708296912 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.377214071 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.545460765 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.386020131 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 3.564301419 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.967840538 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 3.501545426 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 3.35547728 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 4.864541442 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 4.839807173 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 2.332306932 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.381094299 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 2.312707 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.599734195 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.642943519 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.396351258 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 3.973175257 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 4.821667119 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 4.77640263 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.641945136 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 2.015698769 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 2.010638763 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.348445984 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.693790137 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 2.093366695 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 4.794224336 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.84700451 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 5.023299248 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 4.039915142 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 3.155494998 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.420805756 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 4.213805492 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.522115999 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 2.012382965 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 5.228967577 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 4.893818176 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 3.957425182 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 3.565950322 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 2.00473173 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.66144756 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.107720436 seconds)
  done (took 362.697536997 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 7.125848465 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 7.006656286 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 7.103082778 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.967054227 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.965624688 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 2.841571757 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 7.22961094 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 7.103484362 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 2.675627607 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 7.077959853 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.963724772 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.967623029 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.970132783 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.969318353 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 5.076203168 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 5.270886352 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 4.119629808 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 7.026201359 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 7.006726274 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.974957911 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 4.265397874 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.975769798 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.973467699 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.989844776 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.988103427 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 7.263513378 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 7.085041076 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.98586904 seconds)
  done (took 180.859950617 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 2.027046276 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.782001367 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 2.072775135 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.148643667 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 2.061923249 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 2.034727104 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.654425644 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 2.194890074 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 2.0987401 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 2.043184504 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 2.034371395 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.383640542 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 2.287000933 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.977826963 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 2.273293602 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 3.449696626 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.995592647 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 2.220045239 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 2.10489264 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 2.053228365 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.40128473 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 2.407827107 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.395206751 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.475669427 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 2.213057349 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.489036145 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 2.126103385 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 2.106972367 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 2.184312257 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.761308155 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 2.060350708 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.473100704 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.291977738 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 2.06882121 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.717800329 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.604816612 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.728083865 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.795271556 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 2.383139743 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 2.092409058 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 2.067834409 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 2.320499967 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.505133664 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 2.168067597 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 2.024081632 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 3.051376018 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 2.126499881 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 2.329432353 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 2.040037733 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.989013837 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 2.237446422 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 2.152280771 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.485849004 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 3.462996112 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.386617888 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 2.24600938 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.7012656 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 7.026653468 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 2.293879363 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.694402672 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 2.139864262 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.770679261 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 3.703583332 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 2.175688912 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 2.103039453 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 2.936106572 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.241587634 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.712248112 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.935613468 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 2.084381421 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.577373363 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.49117329 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 2.036846397 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 2.328077852 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 2.216906825 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.714758086 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.831873886 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.181644157 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.210091983 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 2.131836429 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 2.328751614 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 2.009426305 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 2.627117356 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.296235736 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 2.132564485 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.68339843 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.647720042 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 2.032512828 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 2.152446572 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 2.165005796 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 2.239218055 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 2.289734544 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.548922166 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.127168426 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 3.155721711 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.457743196 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.465951084 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 2.063145695 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 2.160090608 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 2.01321454 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 3.303539648 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 2.259691787 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 2.007000602 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.483087664 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.550834004 seconds)
  done (took 257.606633073 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.989272092 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.15835775 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.367579902 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 3.087609235 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.644657443 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 3.332677843 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.558749192 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.114363861 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.550510389 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.471517862 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.316659276 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.182076528 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 4.963899391 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 2.879002214 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.060876105 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.308539268 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.080055009 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 3.076016532 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.366955787 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.671734977 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 3.660419564 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 3.022774102 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.502584785 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.673839362 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.90097299 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.806769892 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.885759344 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.335097312 seconds)
  done (took 78.875883944 seconds)
done (took 1064.285054765 seconds)
SAVING RESULT...
DONE!
