cset: moving following pidspec: 714676
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "broadcast"... done (took 1.750940388 seconds)
loading group "shootout"... done (took 1.143279232 seconds)
loading group "string"... done (took 0.65369004 seconds)
loading group "linalg"... done (took 8.492983331 seconds)
loading group "parallel"... done (took 0.162718718 seconds)
loading group "find"... done (took 2.982526246 seconds)
loading group "tuple"... done (took 2.056446221 seconds)
loading group "union"... done (took 14.227868329 seconds)
loading group "dates"... done (took 1.417155039 seconds)
loading group "micro"... done (took 0.211169117 seconds)
loading group "simd"... done (took 4.628643559 seconds)
loading group "io"... done (took 1.366750273 seconds)
loading group "random"... done (took 9.525745098 seconds)
loading group "problem"... done (took 1.607680901 seconds)
loading group "array"... done (took 24.919205149 seconds)
loading group "misc"... done (took 1.808013563 seconds)
loading group "scalar"... done (took 42.139779761 seconds)
loading group "sort"... done (took 3.216683473 seconds)
loading group "sparse"... done (took 12.766921196 seconds)
loading group "collection"... done (took 18.252480314 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.438359628 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.112689233 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.160661245 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.109177055 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.229140968 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.124419508 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.130402459 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.086810291 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.213274387 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.139390476 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.134046396 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.42103698 seconds)
done (took 5.725018447 seconds)
(2/20) benchmarking "string"...
  (1/7) benchmarking "join"...
  done (took 0.304976656 seconds)
  (2/7) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.240768115 seconds)
    (2/2) benchmarking "String"...
    done (took 0.161488585 seconds)
  done (took 1.558514137 seconds)
  (3/7) benchmarking "==(::SubString, ::String)"...
    (1/3) benchmarking "equal"...
    done (took 0.090944442 seconds)
    (2/3) benchmarking "different length"...
    done (took 0.057383758 seconds)
    (3/3) benchmarking "different"...
    done (took 0.064105572 seconds)
  done (took 1.367641799 seconds)
  (4/7) benchmarking "replace"...
  done (took 0.062782258 seconds)
  (5/7) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.138563004 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.063782972 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.06394311 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.064337089 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.063879456 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.063601863 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.06343583 seconds)
  done (took 1.676463578 seconds)
  (6/7) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.071528 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.065268422 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.062980433 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.064853162 seconds)
  done (took 1.418451682 seconds)
  (7/7) benchmarking "==(::AbstractString, ::AbstractString)"...
    (1/4) benchmarking "identical"...
    done (took 0.065328262 seconds)
    (2/4) benchmarking "equal"...
    done (took 0.117811311 seconds)
    (3/4) benchmarking "different length"...
    done (took 0.061930113 seconds)
    (4/4) benchmarking "different"...
    done (took 0.061948702 seconds)
  done (took 1.459352402 seconds)
done (took 9.021040437 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.15735435 seconds)
    (2/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 0.771348055 seconds)
    (3/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.853165092 seconds)
    (4/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 0.144993972 seconds)
    (5/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 0.310462763 seconds)
    (6/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 0.343474633 seconds)
    (7/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 0.119677395 seconds)
    (8/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.201436918 seconds)
    (9/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.112208977 seconds)
    (10/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 0.07441114 seconds)
    (11/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.148957774 seconds)
    (12/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 0.079163642 seconds)
    (13/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 0.480110122 seconds)
    (14/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 0.47301922 seconds)
    (15/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 0.070270424 seconds)
    (16/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 0.18280974 seconds)
    (17/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 0.628198781 seconds)
    (18/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.084321217 seconds)
    (19/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.11378538 seconds)
    (20/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.24593106 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 0.080609387 seconds)
    (22/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 0.081988161 seconds)
    (23/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.087700861 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 0.070978857 seconds)
    (25/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.15602161 seconds)
    (26/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 0.17760795 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.62830952 seconds)
    (28/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 0.098334585 seconds)
    (29/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 0.067199523 seconds)
    (30/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.192815169 seconds)
    (31/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 0.069828108 seconds)
    (32/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 0.073782423 seconds)
  done (took 10.563798426 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.11411404 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.110447198 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.066118654 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.101532876 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.092290581 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.067279397 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.072519453 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.066059696 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.085241475 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.130744953 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.089617451 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.121766109 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.065513709 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.067061735 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.097080664 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.162069875 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.081447205 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.079488854 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.067176356 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.081092262 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.092947254 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.077917722 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.075895436 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.07562361 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.11156055 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.135224978 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.08894389 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.10832489 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.065919624 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.078176774 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.094864746 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.107673246 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.066697132 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.064308538 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.107104944 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.084187609 seconds)
  done (took 4.442593157 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.026030066 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/118) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.093140132 seconds)
    (2/118) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.104817069 seconds)
    (3/118) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.096326797 seconds)
    (4/118) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.109377696 seconds)
    (5/118) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.094502672 seconds)
    (6/118) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.14668832 seconds)
    (7/118) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.121134007 seconds)
    (8/118) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.098102671 seconds)
    (9/118) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.072251742 seconds)
    (10/118) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.174703415 seconds)
    (11/118) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.671594875 seconds)
    (12/118) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.139519807 seconds)
    (13/118) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 2.087608186 seconds)
    (14/118) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.070479957 seconds)
    (15/118) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.148005481 seconds)
    (16/118) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.357711627 seconds)
    (17/118) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 0.918547398 seconds)
    (18/118) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.071786001 seconds)
    (19/118) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.066671009 seconds)
    (20/118) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.096893325 seconds)
    (21/118) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.068531628 seconds)
    (22/118) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 0.138471667 seconds)
    (23/118) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.06534937 seconds)
    (24/118) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.175578879 seconds)
    (25/118) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.638465952 seconds)
    (26/118) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.191056058 seconds)
    (27/118) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.072149407 seconds)
    (28/118) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.095644496 seconds)
    (29/118) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.063608819 seconds)
    (30/118) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.138195856 seconds)
    (31/118) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.092354016 seconds)
    (32/118) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.067733779 seconds)
    (33/118) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.57611779 seconds)
    (34/118) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.065288785 seconds)
    (35/118) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.062440219 seconds)
    (36/118) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.084233419 seconds)
    (37/118) benchmarking ("3-arg mul!", 2)...
    done (took 0.091719778 seconds)
    (38/118) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.064937688 seconds)
    (39/118) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.065668101 seconds)
    (40/118) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.062229577 seconds)
    (41/118) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.076058912 seconds)
    (42/118) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 0.063690303 seconds)
    (43/118) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.116160967 seconds)
    (44/118) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.078812004 seconds)
    (45/118) benchmarking ("5-arg mul!", 3)...
    done (took 0.547512081 seconds)
    (46/118) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.068357201 seconds)
    (47/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.628035923 seconds)
    (48/118) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.332033069 seconds)
    (49/118) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.072425484 seconds)
    (50/118) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.070527079 seconds)
    (51/118) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 0.100738387 seconds)
    (52/118) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.065972167 seconds)
    (53/118) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.066576294 seconds)
    (54/118) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.658794429 seconds)
    (55/118) benchmarking ("5-arg mul!", 2)...
    done (took 0.148617794 seconds)
    (56/118) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.066208178 seconds)
    (57/118) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.288103431 seconds)
    (58/118) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.066974464 seconds)
    (59/118) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.06612827 seconds)
    (60/118) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.066795139 seconds)
    (61/118) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.06767047 seconds)
    (62/118) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.098862945 seconds)
    (63/118) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.066317557 seconds)
    (64/118) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.067253731 seconds)
    (65/118) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.07168757 seconds)
    (66/118) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.083756384 seconds)
    (67/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.014110482 seconds)
    (68/118) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 0.150752713 seconds)
    (69/118) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.084969531 seconds)
    (70/118) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.067388648 seconds)
    (71/118) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.427135158 seconds)
    (72/118) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.076117338 seconds)
    (73/118) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.068691334 seconds)
    (74/118) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.069694244 seconds)
    (75/118) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.096317517 seconds)
    (76/118) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.135541995 seconds)
    (77/118) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.066217845 seconds)
    (78/118) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.065645952 seconds)
    (79/118) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 0.109955133 seconds)
    (80/118) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 0.231026301 seconds)
    (81/118) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.090785711 seconds)
    (82/118) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.068506804 seconds)
    (83/118) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.065434351 seconds)
    (84/118) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.064497569 seconds)
    (85/118) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 0.531578741 seconds)
    (86/118) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 0.977889388 seconds)
    (87/118) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.068760597 seconds)
    (88/118) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.066140013 seconds)
    (89/118) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.505700349 seconds)
    (90/118) benchmarking ("3-arg mul!", 3)...
    done (took 0.063829211 seconds)
    (91/118) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.06462869 seconds)
    (92/118) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.066262544 seconds)
    (93/118) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 0.087232885 seconds)
    (94/118) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.062986807 seconds)
    (95/118) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.064569281 seconds)
    (96/118) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.061973813 seconds)
    (97/118) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.062804997 seconds)
    (98/118) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.100347398 seconds)
    (99/118) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.067789104 seconds)
    (100/118) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 0.592884409 seconds)
    (101/118) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.066819806 seconds)
    (102/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.484316518 seconds)
    (103/118) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.069182546 seconds)
    (104/118) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.098015292 seconds)
    (105/118) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.122969726 seconds)
    (106/118) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.066517704 seconds)
    (107/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.103879343 seconds)
    (108/118) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.066342372 seconds)
    (109/118) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.063499134 seconds)
    (110/118) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.072103864 seconds)
    (111/118) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.064412857 seconds)
    (112/118) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.063307646 seconds)
    (113/118) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.068273693 seconds)
    (114/118) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.064627336 seconds)
    (115/118) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.065193225 seconds)
    (116/118) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.067433099 seconds)
    (117/118) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.067002207 seconds)
    (118/118) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.065807843 seconds)
  done (took 23.272321938 seconds)
done (took 40.461329233 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 512)...
    done (took 0.394863224 seconds)
    (2/5) benchmarking ("identity", 4096)...
    done (took 0.076620376 seconds)
    (3/5) benchmarking ("identity", 2)...
    done (took 0.076556768 seconds)
    (4/5) benchmarking ("identity", 1024)...
    done (took 0.076253929 seconds)
    (5/5) benchmarking ("identity", 64)...
    done (took 0.076158113 seconds)
  done (took 1.916027327 seconds)
done (took 3.228508172 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/41) benchmarking ("> q0.8", "Vector{UInt8}")...
    done (took 0.254224912 seconds)
    (2/41) benchmarking ("Vector{Bool}", "10-90")...
    done (took 0.076583758 seconds)
    (3/41) benchmarking ("BitVector", "10-90")...
    done (took 0.062369171 seconds)
    (4/41) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.204234642 seconds)
    (5/41) benchmarking ("> q0.95", "Vector{UInt8}")...
    done (took 0.086764521 seconds)
    (6/41) benchmarking ("> q0.99", "Vector{Float64}")...
    done (took 0.177493216 seconds)
    (7/41) benchmarking ("> q0.95", "Vector{UInt64}")...
    done (took 0.218344 seconds)
    (8/41) benchmarking ("> q0.8", "Vector{Int64}")...
    done (took 0.169251972 seconds)
    (9/41) benchmarking ("> q0.99", "Vector{Int64}")...
    done (took 0.088447504 seconds)
    (10/41) benchmarking ("> q0.99", "Vector{UInt8}")...
    done (took 0.08822045 seconds)
    (11/41) benchmarking ("> q0.5", "Vector{Float64}")...
    done (took 0.211085824 seconds)
    (12/41) benchmarking ("> q0.99", "Vector{Bool}")...
    done (took 0.223423786 seconds)
    (13/41) benchmarking ("> q0.8", "Vector{Float32}")...
    done (took 0.233271569 seconds)
    (14/41) benchmarking ("> q0.95", "Vector{Int64}")...
    done (took 0.089772841 seconds)
    (15/41) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.161481736 seconds)
    (16/41) benchmarking ("> q0.8", "Vector{Int8}")...
    done (took 0.233835538 seconds)
    (17/41) benchmarking ("> q0.99", "Vector{Int8}")...
    done (took 0.09112468 seconds)
    (18/41) benchmarking ("BitVector", "50-50")...
    done (took 0.064037206 seconds)
    (19/41) benchmarking ("> q0.5", "Vector{Bool}")...
    done (took 0.088955919 seconds)
    (20/41) benchmarking ("> q0.95", "Vector{Bool}")...
    done (took 0.090124878 seconds)
    (21/41) benchmarking ("> q0.95", "Vector{Float32}")...
    done (took 0.090505228 seconds)
    (22/41) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.064068893 seconds)
    (23/41) benchmarking ("> q0.8", "Vector{Bool}")...
    done (took 0.089018216 seconds)
    (24/41) benchmarking ("> q0.5", "Vector{Int8}")...
    done (took 0.090300352 seconds)
    (25/41) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.161527095 seconds)
    (26/41) benchmarking ("> q0.95", "Vector{Float64}")...
    done (took 0.089363533 seconds)
    (27/41) benchmarking ("BitVector", "90-10")...
    done (took 0.063178022 seconds)
    (28/41) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.163052759 seconds)
    (29/41) benchmarking ("> q0.95", "Vector{Int8}")...
    done (took 0.090327843 seconds)
    (30/41) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.166740278 seconds)
    (31/41) benchmarking ("> q0.8", "Vector{UInt64}")...
    done (took 0.091893599 seconds)
    (32/41) benchmarking ("> q0.8", "Vector{Float64}")...
    done (took 0.090850671 seconds)
    (33/41) benchmarking ("> q0.99", "Vector{UInt64}")...
    done (took 0.091050908 seconds)
    (34/41) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.163181719 seconds)
    (35/41) benchmarking ("> q0.5", "Vector{Float32}")...
    done (took 0.091740421 seconds)
    (36/41) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.163363088 seconds)
    (37/41) benchmarking ("Vector{Bool}", "90-10")...
    done (took 0.063748565 seconds)
    (38/41) benchmarking ("> q0.5", "Vector{Int64}")...
    done (took 0.091545261 seconds)
    (39/41) benchmarking ("> q0.99", "Vector{Float32}")...
    done (took 0.091463639 seconds)
    (40/41) benchmarking ("> q0.5", "Vector{UInt64}")...
    done (took 0.094316683 seconds)
    (41/41) benchmarking ("> q0.5", "Vector{UInt8}")...
    done (took 0.093520737 seconds)
  done (took 6.355529554 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.076474609 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.079276283 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.080655077 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.059793453 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.068968486 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.079196561 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.059913407 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.078661345 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.099550518 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.079694428 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.079159038 seconds)
  done (took 2.143093261 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.070343834 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.079797486 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.08090357 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.059556706 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.070489221 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.079843345 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.059727672 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.079483436 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.082693456 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.08012808 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.079997285 seconds)
  done (took 2.061854417 seconds)
done (took 11.78924263 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/2) benchmarking "longtuple"...
    done (took 0.190190452 seconds)
    (2/2) benchmarking "11899"...
    done (took 0.087672297 seconds)
  done (took 1.498175808 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.257486256 seconds)
    (2/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.509048111 seconds)
    (3/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.977423721 seconds)
    (4/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.121395193 seconds)
    (5/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.10207848 seconds)
    (6/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.11763673 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.23746716 seconds)
    (8/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.099562143 seconds)
  done (took 8.822661165 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.097260676 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.067537654 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.065179407 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.095404954 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.067274379 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.065300567 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.065539371 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.065101885 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.066183669 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.065497835 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.06529671 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.067225897 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.065495366 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.065789785 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.067401678 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.066105705 seconds)
  done (took 2.475944193 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("minimum", (8,))...
    done (took 0.100118285 seconds)
    (2/24) benchmarking ("sumabs", (4,))...
    done (took 0.066893637 seconds)
    (3/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.095864422 seconds)
    (4/24) benchmarking ("minimum", (2,))...
    done (took 0.05942878 seconds)
    (5/24) benchmarking ("sum", (8,))...
    done (took 0.069389513 seconds)
    (6/24) benchmarking ("sumabs", (2,))...
    done (took 0.060514443 seconds)
    (7/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.068338423 seconds)
    (8/24) benchmarking ("minimum", (4, 4))...
    done (took 0.070201439 seconds)
    (9/24) benchmarking ("sumabs", (8,))...
    done (took 0.067612527 seconds)
    (10/24) benchmarking ("sum", (2, 2))...
    done (took 0.067732195 seconds)
    (11/24) benchmarking ("minimum", (2, 2))...
    done (took 0.069254498 seconds)
    (12/24) benchmarking ("sum", (4,))...
    done (took 0.067706609 seconds)
    (13/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.068903413 seconds)
    (14/24) benchmarking ("sumabs", (16,))...
    done (took 0.068720274 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.069696596 seconds)
    (16/24) benchmarking ("sum", (4, 4))...
    done (took 0.070282908 seconds)
    (17/24) benchmarking ("sum", (8, 8))...
    done (took 0.07099237 seconds)
    (18/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.067868455 seconds)
    (19/24) benchmarking ("minimum", (8, 8))...
    done (took 0.070448764 seconds)
    (20/24) benchmarking ("sum", (16, 16))...
    done (took 0.071638672 seconds)
    (21/24) benchmarking ("minimum", (4,))...
    done (took 0.070729354 seconds)
    (22/24) benchmarking ("sum", (16,))...
    done (took 0.071750825 seconds)
    (23/24) benchmarking ("minimum", (16, 16))...
    done (took 0.073394385 seconds)
    (24/24) benchmarking ("sum", (2,))...
    done (took 0.071609318 seconds)
  done (took 3.065966326 seconds)
done (took 17.102130011 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.176505417 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.072342675 seconds)
  done (took 1.482316943 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.094001501 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.091356983 seconds)
  done (took 1.438831698 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.071977534 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.058214548 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.074034644 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.06691313 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.05898855 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.058605529 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.073189025 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.059210125 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.058966952 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.059107033 seconds)
  done (took 1.897323557 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.062865936 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.064827624 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.062858082 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.061288139 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.06357582 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.059402949 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.0619068 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.059773472 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.065547112 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.059203565 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.062499731 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.080170097 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.062080326 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.080536819 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.062037251 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.062532219 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.064233804 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.062598956 seconds)
  done (took 2.413543048 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.06150461 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.059044798 seconds)
  done (took 1.379000835 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.063994817 seconds)
    (2/7) benchmarking "second"...
    done (took 0.059055231 seconds)
    (3/7) benchmarking "month"...
    done (took 0.060915437 seconds)
    (4/7) benchmarking "year"...
    done (took 0.060608464 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.059143354 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.058591456 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.059091952 seconds)
  done (took 1.673701019 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.427230587 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.191921523 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.425090204 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.06807889 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.081147271 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.266810374 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.063042611 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.067318213 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.067281208 seconds)
  done (took 2.952291403 seconds)
done (took 14.50232291 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.083398971 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.181549249 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.11097516 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.417575683 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.077698345 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.06521918 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.094939289 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.209082282 seconds)
done (took 2.516285766 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.284373404 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 1.207665407 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 0.25621128 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 0.146947217 seconds)
  done (took 2.875256454 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.417998657 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.166728219 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.07455501 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.065166678 seconds)
  done (took 1.996768841 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.065705214 seconds)
    (2/2) benchmarking "read"...
    done (took 0.069140492 seconds)
  done (took 1.404111345 seconds)
done (took 7.839036834 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.072735038 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.093498692 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.058685956 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.060504098 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.060796189 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.060513436 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.059890121 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.060778555 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.058785377 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.06093948 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.060954203 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.061247725 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.060946016 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.060861947 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.061154146 seconds)
    (16/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.059080823 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.060723346 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.060698391 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.059279781 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.061381392 seconds)
    (21/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.060838775 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.061772678 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.060888027 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.061525104 seconds)
  done (took 2.789965313 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.079241054 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.063222998 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.063857594 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.063545161 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.064289226 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.064073598 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.064220114 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.06319741 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.064239412 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.063078317 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.064512051 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.064463521 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.062922721 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.0646984 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063227913 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.064895641 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.064387569 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063784859 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063619695 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.064850958 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.064258228 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063666408 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.065439563 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.065085186 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.065484499 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.065422532 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.064034794 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.064115419 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.065822727 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.06577733 seconds)
  done (took 3.225414342 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.066967837 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.057577725 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.057893275 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.067663673 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.057403761 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 0.057608084 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 0.058367068 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.057475074 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.057993822 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 0.0586879 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.058221564 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 0.057670216 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.058813002 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 0.057650902 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.057713493 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.057989214 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.062781254 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.078083342 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.058157845 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.057890024 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.062522843 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 0.058158235 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.057858815 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.057835114 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 0.058255096 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 0.058069935 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 0.058051417 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 0.058767117 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 0.058427522 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 0.059264954 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 0.058435919 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 0.063281272 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.064681879 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 0.058441378 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.068833973 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.063777506 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 0.058415003 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 0.065169593 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 0.059395065 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 0.058449883 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.058258642 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.058154861 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 0.058533919 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.058446143 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.068906173 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 0.058657018 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 0.059848873 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 0.061881424 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.059027609 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 0.058724658 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.058808476 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 0.060170418 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.06419501 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 0.059706325 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 0.058291372 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 0.06012005 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 0.0588828 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.059121229 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 0.058531138 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 0.058266544 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.058944122 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.062712829 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 0.059864258 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.059424864 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.079480445 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 0.05991055 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.069409449 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.058590939 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.058916723 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.062641064 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 0.058979275 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.077698165 seconds)
  done (took 5.652545024 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.071975016 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.068164238 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.076400698 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.06739407 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061386763 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.058676019 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.061732901 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.058563696 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067503349 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.062042351 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.058584768 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.06159606 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067701622 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.062097057 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.059601852 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.067478466 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.062012701 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061189069 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.059066441 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.062469927 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.06006995 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.062273652 seconds)
  done (took 2.699098338 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.143533054 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.063956196 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.105944836 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.06816362 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066264581 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.067533773 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.064412834 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.064047901 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064366998 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064693159 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064761693 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064139025 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066029658 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064501298 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064784679 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.064401696 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064205839 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.064798946 seconds)
  done (took 2.574931606 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.076930561 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.063499819 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.089794619 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.063256031 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.063557409 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.063331024 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067059517 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.067293115 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.063318425 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.06372943 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.067417848 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063335278 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.063354979 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063776013 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063801239 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.063951622 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.064408877 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065015079 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.068091793 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06740761 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.067906674 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.067888879 seconds)
  done (took 2.753010917 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078587492 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.062824872 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.078586198 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.064186667 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.05781101 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.058192797 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.064614988 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.063186287 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.064415161 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.062760501 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06328172 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.058182208 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.065258785 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.063414715 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.065410995 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063305315 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.062854619 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.063187042 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.062957477 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.058301739 seconds)
  done (took 2.571381895 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.098150499 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.060488975 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.060183674 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.064549381 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.060519778 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.060609395 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.076362042 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.060478097 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.060467706 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.08440615 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.060915637 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.060584383 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.065072425 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.063362234 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.060404686 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.064967825 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.065168157 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.065506718 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.061058812 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.060988404 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.085109639 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.061405069 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.066120442 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.061284103 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.061367821 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.062090868 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.061907231 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.064652762 seconds)
  done (took 3.127045709 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065282669 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.061379054 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.061445693 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.061390478 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.061276669 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.061100767 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.061487937 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.064363193 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.061432692 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.06198787 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.061553215 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.061378181 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.061318997 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.061266347 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.061434989 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.061279006 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.061361928 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.061538328 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06158438 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.061607753 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.061341868 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.061639911 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.061690023 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.061910369 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06198736 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.061806043 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062482128 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.0622793 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.062190398 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.062763337 seconds)
  done (took 3.157330486 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.073134739 seconds)
    (2/2) benchmarking "in"...
    done (took 0.068583689 seconds)
  done (took 1.438447459 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.062245511 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.075130981 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.057268692 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.070183664 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.065910563 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.061947763 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.066598588 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067544899 seconds)
  done (took 1.815930947 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 0.092779979 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 0.115558144 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 0.060029452 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.06052934 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.090407323 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.126698949 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.101306647 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.07208721 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.074008793 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.062735721 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 0.059946304 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.100863967 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 0.059138577 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.073286089 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 0.060542258 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.069354869 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067848312 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.078324928 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.073412362 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.058227933 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.073069821 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.060709777 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.059425378 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.060861616 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.060601874 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.067592091 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.076651184 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.072962782 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069075706 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.058151582 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 0.079374941 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.0588455 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.059711071 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068826462 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.092179307 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 0.059456767 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.09710525 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 0.059363214 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 0.064309984 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.058640609 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.071640834 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.080434172 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.073816521 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 0.077452795 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.06044146 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.061058367 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.058534249 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 0.060578152 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.063029039 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.06864947 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.058605718 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066869456 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.058083056 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 0.060733768 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.070268062 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.059329856 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 0.063830226 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.069167732 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.073554287 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.070235886 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.071996944 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.075389621 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.068328661 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 0.067364975 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.059728914 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.079248794 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 0.060549054 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.072906916 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.074475044 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 0.06037651 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.073210495 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.058846879 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.058187402 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.059093382 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.093975908 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.061355319 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 0.060567605 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 0.059497617 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.059350711 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 0.060628167 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070455311 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 0.066361861 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06855956 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 0.06412249 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.077334411 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.070591028 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 0.060651717 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.06871386 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 0.079746957 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.064785827 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.061111346 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 0.078843493 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.064702969 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.060372849 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.079664433 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.071842983 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 0.063315825 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.062586046 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.065429072 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 0.075956493 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.062840314 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.060159889 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070722268 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 0.063738319 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.250098606 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 0.06338103 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067577283 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 0.058523294 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.069442612 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 0.063670982 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 0.060121921 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.057445836 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.063073286 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 0.058914317 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.057007496 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.068040292 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 0.058294941 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.072774125 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.065180139 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 0.073393979 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.073851258 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 0.069125011 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.074390554 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 0.058115118 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.059749173 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 0.076528533 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.068078825 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 0.059290546 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.076360172 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.057466922 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.069079607 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.058056747 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 0.059410754 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 0.068004142 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.057394654 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 0.05964353 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.057971901 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 0.063267415 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 0.059152885 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 0.059491573 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.064116995 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.067102632 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.070574806 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 0.059087966 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.067424301 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.058313126 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.074369318 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.068951211 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.063508997 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 0.061280441 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 0.059566731 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.071331604 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.066206129 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.069121734 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.058643922 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 0.059885354 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.059327689 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.070442739 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.069163821 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.060697382 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.067141717 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.064217249 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 0.05957979 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.059443996 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 0.060215829 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.063313005 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.062562437 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.059865787 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067655203 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.068382939 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 0.073604714 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066127919 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.068748007 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.058276167 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.05855178 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 0.06056289 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.058503474 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.064094961 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.069180262 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 0.075334262 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.071101583 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.080786383 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 0.059316601 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.069465413 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.06052432 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.076689761 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.073167945 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 0.060673834 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 0.064082297 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.058212679 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 0.061074448 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.069480866 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07153522 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 0.074112175 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.076266641 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.065713011 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.065842879 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.060489828 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.076523894 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 0.061040014 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069754013 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 0.0705727 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.066840731 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 0.061023617 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.062449733 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.070511125 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.065711539 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.061545537 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 0.077019623 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.068969594 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.060916223 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.076771534 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 0.061859297 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 0.072933674 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.06109078 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.06545458 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.067100098 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.063426469 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.071821469 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.235227746 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.058311632 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.059239978 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.074704153 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 0.06007265 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 0.060034691 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.067077318 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 0.074079481 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.063496328 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.066668887 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069186968 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.068932225 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.063187415 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.068471296 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.058987931 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 0.067941031 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 0.060787489 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.070184735 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 0.058086767 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 0.076490775 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.057170941 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 0.07394843 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.058297542 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 0.069418743 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.058637128 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.068016106 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 0.059245989 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 0.07546422 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 0.05969295 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 0.058870291 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.070281973 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.057234633 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.068165009 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.057698304 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.063830265 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.065326781 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 0.06812985 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.060075966 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.068159085 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.05999484 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.0678403 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.063388329 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.0673584 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 0.067933457 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.063362717 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.058040081 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.067846303 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070306032 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.067575456 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 0.060167057 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 0.0602173 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.05942086 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.069104707 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.060541156 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.060521183 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067938327 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.064295433 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.065498654 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 0.060508354 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 0.060881265 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 0.060649906 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068223649 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069441767 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 0.080737973 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068367594 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.067154194 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.068981905 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.058675265 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.075479418 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 0.0592446 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.067129118 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.058151474 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.065993659 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.068921308 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 0.059273006 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 0.078878503 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.060768234 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.067697543 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071987092 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068226821 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.063357403 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.077730962 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 0.062327985 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.068450111 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.067953727 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.064407888 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.066540945 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.061291387 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.068549054 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.069494582 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.070730168 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.060445942 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.067636353 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069276849 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 0.062409816 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 0.070896857 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.062668348 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.069747068 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.062942603 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.059954532 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.065863382 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.073045511 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.066210222 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.066297476 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.061164017 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.059537474 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.061062009 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.069621818 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.066957532 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.070937346 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 0.078046257 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.060341335 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 0.062466609 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.061520517 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.065681594 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 0.08097995 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.233765305 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.068354447 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.064080734 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.057789793 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.059903479 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 0.060030785 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 0.058655591 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 0.061069914 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.057503615 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.057752797 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.06918494 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 0.059856375 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.06324985 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.058386591 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.059005798 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.068734335 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 0.061881263 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.05865396 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.065193361 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 0.057823113 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.064010962 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.057360011 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.059359861 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.063269648 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.057538398 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.062414068 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 0.069016082 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 0.075362073 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.065443639 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.067633969 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.059166066 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.066833525 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074046563 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 0.065190744 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.05911455 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.067866914 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.057474115 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 0.077063225 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.068200625 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067530646 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.068474588 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.059237951 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.075983821 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.063271074 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.068445572 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.074145782 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.05996792 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 0.066261534 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.058554618 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.07517499 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.063945221 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.05854036 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.067429535 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067541458 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.065322866 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.071127111 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 0.059464485 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.067798148 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.064367237 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.063192749 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 0.060749009 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 0.060711331 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.068552953 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.076003887 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 0.059869387 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.064511772 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.067922833 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.068342096 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.064270391 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071905379 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.067874801 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.060433659 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.060920713 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.06358596 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.060065094 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.071713158 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.060275177 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.064587745 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.064184176 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.058641858 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.066219876 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076382451 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.069168253 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069193836 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.058738009 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.058303862 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 0.077681307 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.063592517 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 0.062928668 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.068102029 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.069985875 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072522316 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.06961738 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.077583711 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.060469123 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.066146539 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074097895 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 0.061705867 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 0.060837832 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.064934106 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.062457841 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.070572733 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.071278032 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.069096894 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.063069831 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.071015105 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.075205625 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 0.062346558 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.065957585 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 0.067792756 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 0.062412515 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.072847946 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.070386921 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.070883422 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.063033824 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.061169401 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.065413143 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.228737307 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.067673464 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.068332552 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.059415121 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 0.065034224 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 0.072201937 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.066361612 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 0.060967968 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.057734539 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 0.060816633 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.067981823 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 0.062776656 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.057687547 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.063342391 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.062658723 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 0.065098237 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.068019021 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.063205217 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.057551685 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.075277642 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.066524249 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 0.067766546 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 0.059697268 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 0.060072311 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.058869479 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.057740729 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.06964744 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.057909866 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 0.05947975 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.063418453 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 0.059785998 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 0.076061432 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.066931556 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.075104512 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.059338562 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.063395185 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.057734197 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.068104077 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.063254485 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 0.05856129 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.069288958 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.057625255 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.074054886 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 0.070096045 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 0.064317976 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.058645813 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.064948385 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.067891924 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.074901177 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069055467 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.068489122 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 0.062171747 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.069203293 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 0.060709767 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 0.070444456 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.05859249 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.057967933 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.069448696 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068094954 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 0.072143787 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.059050965 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 0.07036652 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 0.061381725 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.068205551 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.068222732 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.061048697 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 0.060829928 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.060976401 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069322935 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.064415655 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.069116693 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.064513753 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.076862031 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 0.060328309 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.070852126 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.068864776 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 0.071005626 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.073808157 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07226213 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.068013093 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.060017453 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067360639 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.068015493 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 0.060454201 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.065809852 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 0.062872496 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 0.082042945 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.061321828 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.060980953 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.074599177 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 0.067479012 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 0.060253554 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.067494506 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.065247671 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 0.071376443 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 0.062020056 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 0.072195832 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 0.066985032 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 0.062120208 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.066664787 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.066305929 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.059862252 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.060518843 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.060830764 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.071500296 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.065554224 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.061510921 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 0.082080134 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 0.0639455 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.071499914 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073622567 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.068963115 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 0.063439585 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.060975689 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.220456507 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.073668347 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 0.07490664 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.062628899 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068017826 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.060202756 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.068322619 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.057434588 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.067612441 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.066900836 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.06749996 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.057870943 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.058596916 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.073874181 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 0.074240857 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.063418455 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.074634658 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.067834897 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.059623814 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 0.080104825 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.068195091 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.059333197 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 0.069584731 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.060313452 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.057631543 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.057466071 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 0.059551894 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.069993821 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.057876087 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 0.060215966 seconds)
  done (took 41.578732999 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.102553339 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.05972989 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.060730122 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.057989748 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.065070855 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.059451744 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.058270931 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.059436854 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.05974948 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.060352465 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.058194983 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.058305467 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.063502541 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.072954958 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.06589558 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.06168585 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.058544798 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.059479999 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.058902809 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.059478548 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.064689958 seconds)
  done (took 2.719768207 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.064667946 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.062052351 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.061471381 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.06170245 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061045544 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.058547357 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.062161998 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.058586592 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.062315256 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.05890084 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.062211692 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.058955893 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.059070744 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.058881068 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.058815704 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.059850217 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.062322992 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061515897 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.058475614 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.061804122 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.059876534 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.062332144 seconds)
  done (took 2.714491861 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.062889396 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.059055712 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.067887164 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.0577485 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 0.057607779 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.060850228 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 0.057909351 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 0.063074238 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 0.063212702 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 0.063225924 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.067906463 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 0.059736061 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 0.058084599 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 0.064422773 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 0.057841551 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 0.059008325 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.102586174 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 0.059758849 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.059260626 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 0.057860343 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 0.060929337 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.067835603 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.057883167 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.058392322 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.063498776 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.061555506 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 0.058341099 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 0.062022884 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 0.059314259 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.063483958 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.059634541 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.058135501 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.068057706 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.067465711 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.063391488 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.063387754 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 0.060067743 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.059462564 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.058288278 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.058394243 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.067484522 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 0.059982674 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 0.058513852 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.060285427 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.068191721 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 0.058455174 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 0.058084867 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.068118051 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.058609552 seconds)
  done (took 4.429402945 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.072778746 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.108275259 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.064194171 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.090594933 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.070191159 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.063375811 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.064124768 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.091716804 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.059468183 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.059635949 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.07077612 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.070791811 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.060669055 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.06177795 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.065300794 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.06049961 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.062479961 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.060843828 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.063533019 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.0607883 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.063386437 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.065674891 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.070611208 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.071140786 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.062019487 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.060416523 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.060601236 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.062206845 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.070674762 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.063689487 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.062301376 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.062852563 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.071153196 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.066349753 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.060665855 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.060903541 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.071931311 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.061697471 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.061474771 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.059896392 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.061189138 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.062619975 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.066152472 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.07237912 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.061613354 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.066511115 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.061401112 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.059713192 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.071885222 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.061663042 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.064839879 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.072497455 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.062313083 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.064556903 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.06280953 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.071488356 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.061357988 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.060325561 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.061644008 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.071235714 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.059943473 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.062113101 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.072289756 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.061257502 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.064756662 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.072776016 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.066857813 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.062452758 seconds)
  done (took 6.002976895 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.070739396 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.093583264 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072275174 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.073243159 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.068892551 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.068562342 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.068314582 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.068459349 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.068214307 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.07099443 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.069075116 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.132069465 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.065617582 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.069676607 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.068504495 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.068866411 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.069005185 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.068926123 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.069307589 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.069037031 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.06902312 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.073450212 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.069440164 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.073541672 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.073305408 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.065796063 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.06893607 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.068903285 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073612204 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.068840751 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.073463814 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.069139294 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.069074805 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.073817186 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.073381265 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.069177574 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.05994915 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.069207968 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.069370736 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.069434723 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.065936478 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.074249004 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.069291584 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.066104183 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.069485092 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.069285541 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.074269784 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.074437401 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.071299514 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.072440537 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.069471394 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.0743631 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.069416606 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.069617431 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.074328136 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.077051456 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07427522 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.074450906 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.069889179 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.074515016 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074516986 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.077640963 seconds)
  done (took 5.881418493 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.075420732 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.063549928 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.076378397 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.058009444 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.058041378 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.068194143 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.058264732 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.058314372 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.064239514 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.063990144 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065888701 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067443395 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069108935 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065280467 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.067298223 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072438541 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072226786 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.072671277 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068365215 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.069164 seconds)
  done (took 2.756477312 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.063161634 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.06295607 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.058494702 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.073903538 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.058782479 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.066442855 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.059010048 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.05892622 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.058897393 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.058969945 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.063379535 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.06335332 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.058798071 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067006643 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.062298152 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.066357378 seconds)
  done (took 2.399539288 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.064116651 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.065835107 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.093048958 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.059865331 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.061270848 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.058909257 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.059955797 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.058681478 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.060735047 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.072651961 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.0596698 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.061449917 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.059702957 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.058785989 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.058791611 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.061306371 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.060491654 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.059607181 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.059450968 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.094562927 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.067911167 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.060343634 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.062150708 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.060512714 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.06163654 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.067767759 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.061196342 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.061528132 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.060471508 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.061996159 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.061591187 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.070632391 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.061725348 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.063287844 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.059016017 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.059615736 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.059943765 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.062011453 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.06202252 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.060209228 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.059103164 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.061631335 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.060026504 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.060326445 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.061390499 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.062165035 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.061177771 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.069986488 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.060230817 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.062153322 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.060453091 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.061835518 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.061015231 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.071625622 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.062616249 seconds)
  done (took 4.870746037 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078832827 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.063644217 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.057857002 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.057750059 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.063313592 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.064118593 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.063732536 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.063828974 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06437725 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.058354133 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.064421647 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.063438217 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064230798 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.063751594 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.064203768 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.063760137 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.057902715 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.063781334 seconds)
  done (took 2.56438063 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.068185765 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.063327432 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.063547403 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.059809036 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.059745282 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.063852676 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.058386994 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.059609917 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.059667157 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.059970178 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.059940712 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.059758129 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.059578169 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.060045685 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.063736471 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.059968209 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.05961088 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.058531168 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.060268987 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.058331165 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.064639653 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.058852213 seconds)
  done (took 2.745244279 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.118957932 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.082128661 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.158229482 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.078851782 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.088736688 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.070233888 seconds)
  done (took 2.005858405 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.095278559 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.095291347 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.063471417 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.063301146 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067342317 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066499698 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066211627 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066224642 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069024649 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07162785 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.0661432 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069230951 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069082445 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070657993 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067627713 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067664788 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066312861 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066716632 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.064025842 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074376305 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067164958 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070353657 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066913423 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066644063 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066685848 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071555612 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069862404 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072635465 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066804531 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07062626 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068555279 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067026766 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070284769 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07251429 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.064522133 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070222928 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067006302 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07464173 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068770371 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072127524 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.064466423 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069036978 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070491501 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070760714 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070724019 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067426588 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070014353 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067395334 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067427669 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07903347 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069117205 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072096899 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069152149 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070964141 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070498076 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078606213 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073340126 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072354764 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069698842 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073526129 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072716199 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069319901 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072469557 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074096479 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069513099 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074269139 seconds)
  done (took 6.050374605 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104763536 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.0640699 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068975016 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071424472 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07098745 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067123034 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066698092 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066537513 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.06640307 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.064184863 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.101755145 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066847196 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071093413 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071873909 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066694057 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066522736 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066752455 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071573896 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.064785925 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078247775 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067390686 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071606024 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071597174 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071508421 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072609964 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068567624 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066939896 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067148042 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066956297 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067083205 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070004137 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067111266 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071700017 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.064543744 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071987399 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067273539 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066851249 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069779438 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067240809 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069101239 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072368704 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075213237 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067484636 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067301658 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073240253 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067425716 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067406163 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.064979041 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067593552 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.065038803 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073257418 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073337945 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073329877 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072392739 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067715353 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067562276 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067705614 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067594618 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067622589 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069198319 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072762735 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067694901 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079296378 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068208869 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068157521 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072859196 seconds)
  done (took 6.07064971 seconds)
done (took 125.86102466 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.260855732 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.219093834 seconds)
  done (took 1.873439784 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.074755737 seconds)
    (2/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.267892362 seconds)
    (3/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.075697687 seconds)
    (4/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.072080059 seconds)
    (5/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.132536985 seconds)
    (6/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.131602092 seconds)
    (7/16) benchmarking ("transpose", (600, 600))...
    done (took 0.107637319 seconds)
    (8/16) benchmarking ("transpose", (600, 400))...
    done (took 0.070264541 seconds)
    (9/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.072219275 seconds)
    (10/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.070299844 seconds)
    (11/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.169431837 seconds)
    (12/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.107981271 seconds)
    (13/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.070195028 seconds)
    (14/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.070003047 seconds)
    (15/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.093520102 seconds)
    (16/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.070530301 seconds)
  done (took 3.078479056 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.12189044 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.209603769 seconds)
    (3/18) benchmarking ("IJV", 10)...
    done (took 0.080138602 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.067885731 seconds)
    (5/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.151732245 seconds)
    (6/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.075605167 seconds)
    (7/18) benchmarking ("IJV", 100)...
    done (took 0.071163506 seconds)
    (8/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.074404612 seconds)
    (9/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.075561664 seconds)
    (10/18) benchmarking ("IV", 1000)...
    done (took 0.068806681 seconds)
    (11/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.117326122 seconds)
    (12/18) benchmarking ("Diagonal", 10)...
    done (took 0.082936871 seconds)
    (13/18) benchmarking ("Diagonal", 100)...
    done (took 0.07331092 seconds)
    (14/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.074385971 seconds)
    (15/18) benchmarking ("IJV", 1000)...
    done (took 0.070685386 seconds)
    (16/18) benchmarking ("Diagonal", 1000)...
    done (took 0.073099506 seconds)
    (17/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.074310824 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.075022271 seconds)
  done (took 3.062500056 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.104015817 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.111760019 seconds)
  done (took 1.639769865 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.159949564 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.108472896 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.146323526 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.616256612 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.139161298 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.141867363 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.14882656 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.141881552 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.113226103 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.13931627 seconds)
  done (took 3.278150278 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.106474273 seconds)
    (2/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.102353295 seconds)
    (3/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.305784244 seconds)
    (4/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.101142831 seconds)
    (5/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.079846516 seconds)
    (6/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.074575567 seconds)
    (7/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.072512292 seconds)
    (8/54) benchmarking ("spmat", "range", 100)...
    done (took 0.07739024 seconds)
    (9/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.072726701 seconds)
    (10/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.074305556 seconds)
    (11/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.120542047 seconds)
    (12/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.07313512 seconds)
    (13/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.070372667 seconds)
    (14/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.122659077 seconds)
    (15/54) benchmarking ("spmat", "array", 100)...
    done (took 0.097257 seconds)
    (16/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.104723962 seconds)
    (17/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.069267827 seconds)
    (18/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.07621076 seconds)
    (19/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.078079012 seconds)
    (20/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.069034487 seconds)
    (21/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.073570908 seconds)
    (22/54) benchmarking ("spmat", "range", 10)...
    done (took 0.077943436 seconds)
    (23/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.177421679 seconds)
    (24/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.077075615 seconds)
    (25/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.09912797 seconds)
    (26/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.073141101 seconds)
    (27/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.074913972 seconds)
    (28/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.072183125 seconds)
    (29/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.072218304 seconds)
    (30/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.076442527 seconds)
    (31/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.077047768 seconds)
    (32/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.099340017 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.076375696 seconds)
    (34/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.082664224 seconds)
    (35/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.074745509 seconds)
    (36/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.09523219 seconds)
    (37/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.069998221 seconds)
    (38/54) benchmarking ("spmat", "array", 10)...
    done (took 0.09800337 seconds)
    (39/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.072743052 seconds)
    (40/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.070709733 seconds)
    (41/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.07294901 seconds)
    (42/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.077053906 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.070446292 seconds)
    (44/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.079091155 seconds)
    (45/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.073270125 seconds)
    (46/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.075538802 seconds)
    (47/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.078685158 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.06973243 seconds)
    (49/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.073669502 seconds)
    (50/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.072845862 seconds)
    (51/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.071091135 seconds)
    (52/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.074410745 seconds)
    (53/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.074208703 seconds)
    (54/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.075234066 seconds)
  done (took 6.110784544 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.122774464 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.10972975 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.067676748 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.11752864 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.109084066 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067976814 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.123754654 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.104217478 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.121809879 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.067544358 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.067564624 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.067118238 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.074189188 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.078338107 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.119485667 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.113112499 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.06959425 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.068023439 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.112371896 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.112688467 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.066999407 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.124631682 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.115715008 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.112023266 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.067049726 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068253214 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.066709117 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.067359544 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.074855478 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.074545854 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.067081029 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.077173847 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.079137385 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.074205445 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.066447903 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.066980916 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.066536351 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.074846942 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.076212422 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.076127489 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.073363067 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.066372211 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.066606884 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.067124289 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067783585 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.066305422 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.07658806 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.075417238 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.076493613 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069389801 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.068485721 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.067027862 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.06824834 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.075077176 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.073826055 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.074995371 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.077643628 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068131986 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067281303 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.068579873 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.078314425 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.075969496 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.075439868 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068505794 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.0764439 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067682075 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.077438627 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.080583793 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067224223 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.067647103 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.06747036 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.067494606 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.067896247 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.073959636 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.074124753 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068103692 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.068476668 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068384683 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.07760845 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.076574603 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068971445 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.078114944 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068328949 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068771959 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069224105 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070039281 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.079579365 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.078040141 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070179545 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.070513344 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069681126 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069948559 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.069058358 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.080106404 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079119103 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.079065766 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.081004989 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070502552 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.081763528 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.079949188 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070840596 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.078287519 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.070125667 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070539834 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070468973 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.078375058 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.077826272 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.079673147 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070025853 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.069753198 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.079665503 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082033803 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.07037117 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.07772557 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080230578 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.078475976 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.069603077 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.08129442 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070526705 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.081133575 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070535186 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.08125101 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070755329 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.078641858 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070372861 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.0696094 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069985394 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.081783627 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.072559985 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070922472 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070474238 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.07020051 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.078805442 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.082604625 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071204251 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.07903604 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.078673177 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070528025 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.080842674 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070237217 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080984752 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070318094 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070369543 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069249627 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082963046 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.07052501 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.071793986 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.073222182 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.079955485 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070015217 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079936403 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.077460228 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069420394 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081287641 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080480401 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.077488478 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.080451322 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070769618 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.07047917 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069777277 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070033247 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.080536763 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.082314573 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072086522 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070405078 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.077203224 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.080976812 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.06961116 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.077544409 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.077402194 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.077851503 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.07045309 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.0705285 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081149207 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.082603312 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.0780043 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.081070727 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079087488 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.070098814 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.077476133 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.081470365 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070300343 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084574747 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069996927 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.081425549 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.081658359 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.077300378 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.081717164 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.401940642 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.076738846 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.07636918 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.078731679 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068163061 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068353598 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.074668093 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068116774 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068211398 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.073651245 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.068701921 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069637923 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.081397361 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069132169 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.077788899 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.068045393 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.0750469 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.067835734 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068467783 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079188598 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068543468 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068352421 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.075107346 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.067818738 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.073694656 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.07687168 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.074787822 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.06792744 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068460719 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.077728675 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.077558772 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.06797031 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.067724028 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.06827509 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.077116868 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.076414675 seconds)
  done (took 18.83863555 seconds)
done (took 39.326609094 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.172200738 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.113312472 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.226213518 seconds)
    (4/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.205124876 seconds)
  done (took 2.26136291 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("array", 5)...
    done (took 0.101721274 seconds)
    (2/6) benchmarking ("array", 3)...
    done (took 0.063602242 seconds)
    (3/6) benchmarking ("tuple", 5)...
    done (took 0.106964982 seconds)
    (4/6) benchmarking ("tuple", 10)...
    done (took 0.117345472 seconds)
    (5/6) benchmarking ("array", 10)...
    done (took 0.063821205 seconds)
    (6/6) benchmarking ("tuple", 3)...
    done (took 0.103893326 seconds)
  done (took 2.043503087 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.203955868 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.178573476 seconds)
    (3/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.257030686 seconds)
  done (took 2.125805747 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((10000000,), 2)...
    done (took 0.36966655 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.152793867 seconds)
    (3/4) benchmarking ((1000, 1000), 1)...
    done (took 0.261933705 seconds)
    (4/4) benchmarking ((1000, 1000), 2)...
    done (took 0.521971995 seconds)
  done (took 2.891969295 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (10, "tup_tup")...
    done (took 0.13657427 seconds)
    (2/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.133077226 seconds)
    (3/9) benchmarking (3, "scal_tup")...
    done (took 0.075680237 seconds)
    (4/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.146902987 seconds)
    (5/9) benchmarking (5, "scal_tup")...
    done (took 0.082812554 seconds)
    (6/9) benchmarking (3, "tup_tup")...
    done (took 0.060605275 seconds)
    (7/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.145603379 seconds)
    (8/9) benchmarking (5, "tup_tup")...
    done (took 0.067675201 seconds)
    (9/9) benchmarking (10, "scal_tup")...
    done (took 0.097381072 seconds)
  done (took 2.497065573 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.141772704 seconds)
done (took 13.464636397 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/341) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.359823891 seconds)
    (2/341) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.065121994 seconds)
    (3/341) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.10879471 seconds)
    (4/341) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.319786483 seconds)
    (5/341) benchmarking ("collect", "filter", Bool, true)...
    done (took 0.309123765 seconds)
    (6/341) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.10883336 seconds)
    (7/341) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.074004868 seconds)
    (8/341) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.129252489 seconds)
    (9/341) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.093175962 seconds)
    (10/341) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.110430273 seconds)
    (11/341) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.301869166 seconds)
    (12/341) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 0.332737336 seconds)
    (13/341) benchmarking ("collect", "filter", Float32, false)...
    done (took 0.251589098 seconds)
    (14/341) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.317089229 seconds)
    (15/341) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.076345177 seconds)
    (16/341) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.093174244 seconds)
    (17/341) benchmarking ("perf_sum", Bool, true)...
    done (took 0.07509197 seconds)
    (18/341) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.240714433 seconds)
    (19/341) benchmarking ("perf_sum", Float64, false)...
    done (took 0.070597486 seconds)
    (20/341) benchmarking ("collect", "all", BigFloat, true)...
    done (took 0.145754807 seconds)
    (21/341) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.126977644 seconds)
    (22/341) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.077075602 seconds)
    (23/341) benchmarking ("map", abs, BigInt, false)...
    done (took 0.26479187 seconds)
    (24/341) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.07736346 seconds)
    (25/341) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.122663145 seconds)
    (26/341) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.092533228 seconds)
    (27/341) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.064442221 seconds)
    (28/341) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.217658449 seconds)
    (29/341) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.073839622 seconds)
    (30/341) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.073860685 seconds)
    (31/341) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.303609661 seconds)
    (32/341) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.204104686 seconds)
    (33/341) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.068740962 seconds)
    (34/341) benchmarking ("sort", BigInt, false)...
    done (took 0.268560824 seconds)
    (35/341) benchmarking ("collect", "all", Int64, false)...
    done (took 0.252844793 seconds)
    (36/341) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.072700603 seconds)
    (37/341) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 0.112821594 seconds)
    (38/341) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.203490364 seconds)
    (39/341) benchmarking ("perf_sum", Int8, false)...
    done (took 0.073539604 seconds)
    (40/341) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.079997779 seconds)
    (41/341) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.113853428 seconds)
    (42/341) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.162885435 seconds)
    (43/341) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.117526833 seconds)
    (44/341) benchmarking ("map", identity, Float64, false)...
    done (took 0.150531108 seconds)
    (45/341) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.154366601 seconds)
    (46/341) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.088842346 seconds)
    (47/341) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 0.086129073 seconds)
    (48/341) benchmarking ("collect", "filter", Float64, true)...
    done (took 0.256583948 seconds)
    (49/341) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.088714095 seconds)
    (50/341) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.091377681 seconds)
    (51/341) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.302461451 seconds)
    (52/341) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.095512898 seconds)
    (53/341) benchmarking ("perf_sum", Float64, true)...
    done (took 0.067940869 seconds)
    (54/341) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 0.308835341 seconds)
    (55/341) benchmarking ("perf_countequals", "Int8")...
    done (took 0.07673468 seconds)
    (56/341) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.125649934 seconds)
    (57/341) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.189534911 seconds)
    (58/341) benchmarking ("map", identity, ComplexF64, false)...
    done (took 0.15395255 seconds)
    (59/341) benchmarking ("map", identity, Int64, true)...
    done (took 0.147549726 seconds)
    (60/341) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.06702545 seconds)
    (61/341) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.065588018 seconds)
    (62/341) benchmarking ("collect", "filter", Bool, false)...
    done (took 0.334234094 seconds)
    (63/341) benchmarking ("collect", "all", Float64, true)...
    done (took 0.08494667 seconds)
    (64/341) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.069082018 seconds)
    (65/341) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.072489722 seconds)
    (66/341) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.075802149 seconds)
    (67/341) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.076873449 seconds)
    (68/341) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 0.093192679 seconds)
    (69/341) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.244068377 seconds)
    (70/341) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.072665301 seconds)
    (71/341) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.071739708 seconds)
    (72/341) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 0.082007839 seconds)
    (73/341) benchmarking ("collect", "filter", Float64, false)...
    done (took 0.066288783 seconds)
    (74/341) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.071041033 seconds)
    (75/341) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.064478524 seconds)
    (76/341) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.072732173 seconds)
    (77/341) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.072026205 seconds)
    (78/341) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.187258438 seconds)
    (79/341) benchmarking ("map", identity, ComplexF64, true)...
    done (took 0.064407102 seconds)
    (80/341) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.201198597 seconds)
    (81/341) benchmarking ("collect", "filter", Int8, true)...
    done (took 0.151924182 seconds)
    (82/341) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.157955308 seconds)
    (83/341) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.207256867 seconds)
    (84/341) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.073597741 seconds)
    (85/341) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.179318056 seconds)
    (86/341) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.064407279 seconds)
    (87/341) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.149783128 seconds)
    (88/341) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.193204902 seconds)
    (89/341) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.227184792 seconds)
    (90/341) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.115639516 seconds)
    (91/341) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.065965373 seconds)
    (92/341) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.089576189 seconds)
    (93/341) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.073009192 seconds)
    (94/341) benchmarking ("map", abs, BigInt, true)...
    done (took 0.06565004 seconds)
    (95/341) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.071026972 seconds)
    (96/341) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.093611933 seconds)
    (97/341) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 0.140902236 seconds)
    (98/341) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.06578818 seconds)
    (99/341) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.229641596 seconds)
    (100/341) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.174995988 seconds)
    (101/341) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.064567827 seconds)
    (102/341) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.064763935 seconds)
    (103/341) benchmarking ("collect", "all", Int8, true)...
    done (took 0.142277501 seconds)
    (104/341) benchmarking ("collect", "all", Float32, false)...
    done (took 0.148521884 seconds)
    (105/341) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 0.064572341 seconds)
    (106/341) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.199555725 seconds)
    (107/341) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.065081894 seconds)
    (108/341) benchmarking ("perf_countequals", "Float32")...
    done (took 0.074450839 seconds)
    (109/341) benchmarking ("collect", "all", Int64, true)...
    done (took 0.069292609 seconds)
    (110/341) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.065778975 seconds)
    (111/341) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 0.064591684 seconds)
    (112/341) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.091659868 seconds)
    (113/341) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.063047271 seconds)
    (114/341) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.065746108 seconds)
    (115/341) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.196222562 seconds)
    (116/341) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.072507065 seconds)
    (117/341) benchmarking ("collect", "filter", Int8, false)...
    done (took 0.165006675 seconds)
    (118/341) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.073566696 seconds)
    (119/341) benchmarking ("map", identity, BigInt, true)...
    done (took 0.141345876 seconds)
    (120/341) benchmarking ("map", abs, Float32, false)...
    done (took 0.142988298 seconds)
    (121/341) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.065241219 seconds)
    (122/341) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.073310975 seconds)
    (123/341) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.063588461 seconds)
    (124/341) benchmarking ("perf_sum", Int64, false)...
    done (took 0.074038179 seconds)
    (125/341) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.064771425 seconds)
    (126/341) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 0.075853592 seconds)
    (127/341) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.08704928 seconds)
    (128/341) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.08704098 seconds)
    (129/341) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 0.071998104 seconds)
    (130/341) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.213469665 seconds)
    (131/341) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.213015744 seconds)
    (132/341) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 0.18492 seconds)
    (133/341) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.074327085 seconds)
    (134/341) benchmarking ("perf_countequals", "Int64")...
    done (took 0.075498044 seconds)
    (135/341) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.087777917 seconds)
    (136/341) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.151983107 seconds)
    (137/341) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.13260517 seconds)
    (138/341) benchmarking ("perf_countequals", "Bool")...
    done (took 0.074749349 seconds)
    (139/341) benchmarking ("sort", Bool, false)...
    done (took 0.149076328 seconds)
    (140/341) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.088845397 seconds)
    (141/341) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.067536312 seconds)
    (142/341) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 0.066222212 seconds)
    (143/341) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.065330648 seconds)
    (144/341) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 0.066513919 seconds)
    (145/341) benchmarking ("perf_sum", Int64, true)...
    done (took 0.072511266 seconds)
    (146/341) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.075418717 seconds)
    (147/341) benchmarking ("map", identity, Bool, false)...
    done (took 0.142002685 seconds)
    (148/341) benchmarking ("sort", Int64, false)...
    done (took 0.06715434 seconds)
    (149/341) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.095779565 seconds)
    (150/341) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.08143886 seconds)
    (151/341) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.134788476 seconds)
    (152/341) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.358761868 seconds)
    (153/341) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.231621201 seconds)
    (154/341) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 0.066019113 seconds)
    (155/341) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.090089405 seconds)
    (156/341) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.071939494 seconds)
    (157/341) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.063913445 seconds)
    (158/341) benchmarking ("collect", "filter", Int64, false)...
    done (took 0.152754863 seconds)
    (159/341) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.066023746 seconds)
    (160/341) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.075178285 seconds)
    (161/341) benchmarking ("map", identity, BigInt, false)...
    done (took 0.065504317 seconds)
    (162/341) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.063985986 seconds)
    (163/341) benchmarking ("collect", "all", Bool, true)...
    done (took 0.083344452 seconds)
    (164/341) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.06507575 seconds)
    (165/341) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.066762982 seconds)
    (166/341) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 0.070807299 seconds)
    (167/341) benchmarking ("sort", Int8, false)...
    done (took 0.151896011 seconds)
    (168/341) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.115929705 seconds)
    (169/341) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.073107766 seconds)
    (170/341) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.06455138 seconds)
    (171/341) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.208028094 seconds)
    (172/341) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.076560795 seconds)
    (173/341) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.065001067 seconds)
    (174/341) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.162135131 seconds)
    (175/341) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.21524495 seconds)
    (176/341) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.064542236 seconds)
    (177/341) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.075589724 seconds)
    (178/341) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.065066457 seconds)
    (179/341) benchmarking ("map", identity, Float32, false)...
    done (took 0.081238354 seconds)
    (180/341) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.062087663 seconds)
    (181/341) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.063835925 seconds)
    (182/341) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.211352475 seconds)
    (183/341) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 0.064429609 seconds)
    (184/341) benchmarking ("perf_sum", Float32, true)...
    done (took 0.067670939 seconds)
    (185/341) benchmarking ("collect", "filter", BigInt, true)...
    done (took 0.146998512 seconds)
    (186/341) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 0.068065612 seconds)
    (187/341) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.067168196 seconds)
    (188/341) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 0.075782128 seconds)
    (189/341) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.092545928 seconds)
    (190/341) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.063724064 seconds)
    (191/341) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.06364112 seconds)
    (192/341) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.15521381 seconds)
    (193/341) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.115005548 seconds)
    (194/341) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.072500729 seconds)
    (195/341) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.210141782 seconds)
    (196/341) benchmarking ("collect", "filter", Float32, true)...
    done (took 0.06763768 seconds)
    (197/341) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.087086008 seconds)
    (198/341) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.064602432 seconds)
    (199/341) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.084152003 seconds)
    (200/341) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.067301315 seconds)
    (201/341) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 0.171667297 seconds)
    (202/341) benchmarking ("map", identity, Int8, false)...
    done (took 0.083267522 seconds)
    (203/341) benchmarking ("map", abs, Float32, true)...
    done (took 0.065432783 seconds)
    (204/341) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.064935371 seconds)
    (205/341) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.079708029 seconds)
    (206/341) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.062718869 seconds)
    (207/341) benchmarking ("map", abs, Bool, true)...
    done (took 0.139797833 seconds)
    (208/341) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.145622532 seconds)
    (209/341) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.17653049 seconds)
    (210/341) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.072768188 seconds)
    (211/341) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.065506739 seconds)
    (212/341) benchmarking ("map", identity, Bool, true)...
    done (took 0.064981027 seconds)
    (213/341) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.072238383 seconds)
    (214/341) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.066351965 seconds)
    (215/341) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 0.082789395 seconds)
    (216/341) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.189619126 seconds)
    (217/341) benchmarking ("collect", "all", BigInt, false)...
    done (took 0.085673914 seconds)
    (218/341) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.067006416 seconds)
    (219/341) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.07238461 seconds)
    (220/341) benchmarking ("perf_sum", Bool, false)...
    done (took 0.071598967 seconds)
    (221/341) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.076173406 seconds)
    (222/341) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.065701448 seconds)
    (223/341) benchmarking ("map", abs, ComplexF64, true)...
    done (took 0.145285943 seconds)
    (224/341) benchmarking ("collect", "all", Float64, false)...
    done (took 0.070006689 seconds)
    (225/341) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 0.064690968 seconds)
    (226/341) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.078872985 seconds)
    (227/341) benchmarking ("collect", "filter", Int64, true)...
    done (took 0.067422095 seconds)
    (228/341) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.186117612 seconds)
    (229/341) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.071651379 seconds)
    (230/341) benchmarking ("collect", "filter", BigInt, false)...
    done (took 0.067347139 seconds)
    (231/341) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.066447314 seconds)
    (232/341) benchmarking ("collect", "all", BigInt, true)...
    done (took 0.069801608 seconds)
    (233/341) benchmarking ("collect", "filter", ComplexF64, false)...
    done (took 0.162778488 seconds)
    (234/341) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 0.065145404 seconds)
    (235/341) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.065773512 seconds)
    (236/341) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.072733687 seconds)
    (237/341) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.149007559 seconds)
    (238/341) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.066286312 seconds)
    (239/341) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.065117515 seconds)
    (240/341) benchmarking ("perf_countequals", "Float64")...
    done (took 0.075266847 seconds)
    (241/341) benchmarking ("collect", "all", Int8, false)...
    done (took 0.070575546 seconds)
    (242/341) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.077047056 seconds)
    (243/341) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.072237313 seconds)
    (244/341) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.065893337 seconds)
    (245/341) benchmarking ("map", identity, Float32, true)...
    done (took 0.065558489 seconds)
    (246/341) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.176759738 seconds)
    (247/341) benchmarking ("collect", "all", Float32, true)...
    done (took 0.07063647 seconds)
    (248/341) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.178608584 seconds)
    (249/341) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.072943064 seconds)
    (250/341) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.195020975 seconds)
    (251/341) benchmarking ("perf_sum", Int8, true)...
    done (took 0.072297584 seconds)
    (252/341) benchmarking ("collect", "filter", BigFloat, false)...
    done (took 0.152460458 seconds)
    (253/341) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.096176895 seconds)
    (254/341) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.068550825 seconds)
    (255/341) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.255901832 seconds)
    (256/341) benchmarking ("collect", "all", Bool, false)...
    done (took 0.072786659 seconds)
    (257/341) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.067735448 seconds)
    (258/341) benchmarking ("collect", "all", BigFloat, false)...
    done (took 0.069725398 seconds)
    (259/341) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.065389053 seconds)
    (260/341) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.084575326 seconds)
    (261/341) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 0.073407259 seconds)
    (262/341) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 0.089440939 seconds)
    (263/341) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.065462462 seconds)
    (264/341) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.062718361 seconds)
    (265/341) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.18093354 seconds)
    (266/341) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.065437866 seconds)
    (267/341) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 0.201077084 seconds)
    (268/341) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 0.072893719 seconds)
    (269/341) benchmarking ("collect", "filter", BigFloat, true)...
    done (took 0.066877258 seconds)
    (270/341) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.062776031 seconds)
    (271/341) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.064334821 seconds)
    (272/341) benchmarking ("map", identity, Int8, true)...
    done (took 0.064353991 seconds)
    (273/341) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.064304214 seconds)
    (274/341) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.06985176 seconds)
    (275/341) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.11223386 seconds)
    (276/341) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.063457312 seconds)
    (277/341) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.15088222 seconds)
    (278/341) benchmarking ("sort", Float32, false)...
    done (took 0.136894189 seconds)
    (279/341) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.08422272 seconds)
    (280/341) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.062200488 seconds)
    (281/341) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.064918573 seconds)
    (282/341) benchmarking ("map", abs, Int64, false)...
    done (took 0.141059945 seconds)
    (283/341) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.065017365 seconds)
    (284/341) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.063816632 seconds)
    (285/341) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.064303368 seconds)
    (286/341) benchmarking ("map", abs, Float64, false)...
    done (took 0.140654742 seconds)
    (287/341) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.150108076 seconds)
    (288/341) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.065608361 seconds)
    (289/341) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.1734961 seconds)
    (290/341) benchmarking ("map", abs, Int8, false)...
    done (took 0.138497868 seconds)
    (291/341) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.065023252 seconds)
    (292/341) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.075331895 seconds)
    (293/341) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.159298788 seconds)
    (294/341) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.064453302 seconds)
    (295/341) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.246844082 seconds)
    (296/341) benchmarking ("map", abs, Float64, true)...
    done (took 0.06496714 seconds)
    (297/341) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 0.095679991 seconds)
    (298/341) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.162927876 seconds)
    (299/341) benchmarking ("collect", "filter", ComplexF64, true)...
    done (took 0.066988991 seconds)
    (300/341) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.064560237 seconds)
    (301/341) benchmarking ("map", abs, Bool, false)...
    done (took 0.064617641 seconds)
    (302/341) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.064686571 seconds)
    (303/341) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 0.06429458 seconds)
    (304/341) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.07476431 seconds)
    (305/341) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.071569755 seconds)
    (306/341) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.076169292 seconds)
    (307/341) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.064418132 seconds)
    (308/341) benchmarking ("sort", Float64, false)...
    done (took 0.136606314 seconds)
    (309/341) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.064654943 seconds)
    (310/341) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 0.068958134 seconds)
    (311/341) benchmarking ("map", abs, Int64, true)...
    done (took 0.065506715 seconds)
    (312/341) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.064681621 seconds)
    (313/341) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.064789106 seconds)
    (314/341) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.064608609 seconds)
    (315/341) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.064657135 seconds)
    (316/341) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 0.064283731 seconds)
    (317/341) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 0.065403785 seconds)
    (318/341) benchmarking ("collect", "all", ComplexF64, true)...
    done (took 0.085644262 seconds)
    (319/341) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.063922977 seconds)
    (320/341) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.076200818 seconds)
    (321/341) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.064348624 seconds)
    (322/341) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.064435813 seconds)
    (323/341) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.071504332 seconds)
    (324/341) benchmarking ("collect", "all", ComplexF64, false)...
    done (took 0.069744998 seconds)
    (325/341) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.068650846 seconds)
    (326/341) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.064508515 seconds)
    (327/341) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.065397476 seconds)
    (328/341) benchmarking ("map", identity, Int64, false)...
    done (took 0.064906464 seconds)
    (329/341) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.064092165 seconds)
    (330/341) benchmarking ("map", abs, ComplexF64, false)...
    done (took 0.065302161 seconds)
    (331/341) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.064287826 seconds)
    (332/341) benchmarking ("map", identity, Float64, true)...
    done (took 0.06591648 seconds)
    (333/341) benchmarking ("sort", BigFloat, false)...
    done (took 0.14048768 seconds)
    (334/341) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.064213206 seconds)
    (335/341) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.0936687 seconds)
    (336/341) benchmarking ("map", abs, Int8, true)...
    done (took 0.0652823 seconds)
    (337/341) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.065802036 seconds)
    (338/341) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.063317886 seconds)
    (339/341) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.063234948 seconds)
    (340/341) benchmarking ("perf_sum", Float32, false)...
    done (took 0.066586352 seconds)
    (341/341) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.064110463 seconds)
  done (took 38.777300332 seconds)
done (took 40.284307729 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.124770839 seconds)
  (2/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.076902198 seconds)
  (3/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.075167822 seconds)
  (4/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.072003296 seconds)
  (5/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.075614581 seconds)
  (6/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.075791419 seconds)
  (7/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.075580284 seconds)
  (8/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.073156992 seconds)
  (9/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.077707514 seconds)
  (10/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.074673286 seconds)
  (11/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.107771783 seconds)
  (12/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.063145253 seconds)
  (13/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.07063336 seconds)
  (14/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.079886292 seconds)
  (15/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.07215742 seconds)
  (16/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.07915943 seconds)
  (17/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.07823554 seconds)
  (18/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.078249662 seconds)
  (19/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.064082189 seconds)
  (20/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.078498229 seconds)
  (21/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.089843305 seconds)
  (22/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.076987018 seconds)
  (23/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.07278348 seconds)
  (24/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.078242388 seconds)
  (25/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.064411597 seconds)
  (26/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.072555284 seconds)
  (27/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.121167163 seconds)
  (28/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.083881972 seconds)
  (29/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.069342151 seconds)
  (30/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.073764326 seconds)
  (31/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.071570693 seconds)
  (32/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.079979449 seconds)
  (33/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.071928035 seconds)
  (34/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.071184788 seconds)
  (35/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.073560508 seconds)
  (36/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.069140138 seconds)
  (37/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.073950326 seconds)
  (38/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.070421781 seconds)
  (39/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.121661337 seconds)
  (40/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.069403841 seconds)
  (41/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.064538321 seconds)
  (42/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.076906684 seconds)
  (43/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.071090851 seconds)
  (44/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.072207921 seconds)
  (45/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.073250721 seconds)
  (46/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.076093993 seconds)
  (47/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.06930392 seconds)
  (48/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.079478044 seconds)
  (49/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.063514292 seconds)
  (50/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.075296893 seconds)
  (51/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.122332307 seconds)
  (52/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069720941 seconds)
  (53/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.068973029 seconds)
  (54/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.072530362 seconds)
  (55/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.069297802 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.073860987 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.069034542 seconds)
  (58/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.075475812 seconds)
  (59/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.068975928 seconds)
  (60/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.075688734 seconds)
  (61/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.073794914 seconds)
  (62/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.071918987 seconds)
  (63/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.063908016 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.07250157 seconds)
  (65/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.070967496 seconds)
  (66/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.071269788 seconds)
  (67/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.062910793 seconds)
  (68/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.069593877 seconds)
  (69/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.063992057 seconds)
  (70/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.064368603 seconds)
  (71/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.063511995 seconds)
  (72/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.072739836 seconds)
  (73/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.071040445 seconds)
  (74/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.069242038 seconds)
  (75/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.063547878 seconds)
  (76/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.064278175 seconds)
  (77/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.063610999 seconds)
  (78/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.075970198 seconds)
  (79/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.071481861 seconds)
  (80/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.073203682 seconds)
  (81/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.064716652 seconds)
  (82/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.069635 seconds)
  (83/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.069592344 seconds)
  (84/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.065106912 seconds)
  (85/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070389842 seconds)
  (86/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.076161922 seconds)
  (87/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.063760914 seconds)
  (88/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.064959441 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.063845717 seconds)
  (90/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.079688296 seconds)
  (91/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.071205125 seconds)
  (92/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.064489157 seconds)
  (93/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.076253128 seconds)
  (94/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070091441 seconds)
  (95/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.0702702 seconds)
  (96/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.064696112 seconds)
  (97/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.064101103 seconds)
  (98/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070149399 seconds)
  (99/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.073264516 seconds)
  (100/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.064842615 seconds)
  (101/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.063590276 seconds)
  (102/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070441148 seconds)
  (103/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.070418124 seconds)
  (104/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.073709087 seconds)
  (105/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.065108996 seconds)
  (106/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070058832 seconds)
  (107/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070072582 seconds)
  (108/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.06370936 seconds)
  (109/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.074612165 seconds)
  (110/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.072893946 seconds)
  (111/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.07493466 seconds)
  (112/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.078721441 seconds)
  (113/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.074959982 seconds)
  (114/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.079511027 seconds)
  (115/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.066152895 seconds)
  (116/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.064552674 seconds)
  (117/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.075718653 seconds)
  (118/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.224448403 seconds)
  (119/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.069736232 seconds)
  (120/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.071232033 seconds)
  (121/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.068461389 seconds)
  (122/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.071267046 seconds)
  (123/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.063640366 seconds)
  (124/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.062303625 seconds)
  (125/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.068604916 seconds)
  (126/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.069226029 seconds)
  (127/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.063572273 seconds)
  (128/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.063766412 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.063475473 seconds)
  (130/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.071982526 seconds)
  (131/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.070461671 seconds)
  (132/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.062640584 seconds)
  (133/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.063450427 seconds)
  (134/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.073340585 seconds)
  (135/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.072155068 seconds)
  (136/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.06262635 seconds)
  (137/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.062539582 seconds)
  (138/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.0717658 seconds)
  (139/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.063581173 seconds)
  (140/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.069196872 seconds)
  (141/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.068548435 seconds)
  (142/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.071840227 seconds)
  (143/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.062805952 seconds)
  (144/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.063556021 seconds)
  (145/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.062326136 seconds)
  (146/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.062709294 seconds)
  (147/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.062724 seconds)
  (148/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.068939413 seconds)
  (149/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068832351 seconds)
  (150/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.06374963 seconds)
  (151/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.071732599 seconds)
  (152/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.070214579 seconds)
done (took 12.742734408 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.067814981 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.106553525 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.116603477 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.110669999 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.077233455 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.065218464 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.06784814 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.083781492 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.067524017 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.089287074 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.089442473 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.085536832 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.130526845 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.063008141 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.064316625 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.064927255 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.062460559 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.076189333 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.11469916 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.088164072 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.106245649 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.064218144 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.080103279 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.08481137 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.077296245 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.083801025 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.065950932 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.065292485 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.068114448 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.081908132 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.090614346 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.064363225 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.065532554 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.083318164 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.080467233 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.073293365 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.065361486 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.071166477 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.065266128 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.064741661 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.066555181 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.083162437 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.071603865 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.071804576 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.065628069 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.065654873 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.064889837 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.072138314 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.078338654 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.070610185 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.077210499 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.080914944 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.066073058 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.064944057 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.063092924 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.072430763 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.064799174 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.065520848 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.065262841 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.064670866 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.065447894 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.067726351 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.070176437 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.074821158 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.068569114 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.071980481 seconds)
  done (took 6.566993674 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.083328371 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.091945151 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.07778084 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.078222352 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.063914301 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.064611031 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.064681245 seconds)
  done (took 2.146885985 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.068203742 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.105686321 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.113305555 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.114067722 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.123065624 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.112565009 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.065622885 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.096998464 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.063922386 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.107738097 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 0.12147288 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.115939924 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.067845364 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.076845544 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.065279371 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 0.117034814 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.065905677 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.07219 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.112999686 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.117956621 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069419934 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.095260595 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.078925948 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.065994137 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 0.116821439 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.108612157 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 0.067733923 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.066287066 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067688784 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.064991332 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.064755697 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.087896363 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.108395134 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.079964908 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066049786 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 0.064308023 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.106804096 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066171164 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.105128871 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.072302834 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.107363093 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.067526191 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.067720167 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.06552465 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.065846011 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.110800447 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.066123881 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.064945199 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.064748511 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.109835861 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.064574063 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.108492209 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.067654969 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.070217719 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.072241863 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.071223402 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.072403583 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.06538804 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.111423734 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 0.075337831 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067063669 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.12117019 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.120440882 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.107767138 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.121385345 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 0.074957648 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.111391921 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.108590599 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.065505612 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 0.065346805 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.066061791 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.121806099 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 0.069362324 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 0.068297205 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.070741058 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.073207076 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.114614173 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.126677405 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.127206619 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.080388343 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.069087991 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.067011348 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.235338048 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.122186376 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069258029 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.064425452 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.065395791 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.063991849 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.069429333 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.066222938 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.069177375 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.064191614 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 0.074403613 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 0.06690034 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.066554975 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.115144086 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.064618684 seconds)
  done (took 9.988671423 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.069479198 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.066583203 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.065240504 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.065192204 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.065468404 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.065785815 seconds)
  done (took 2.034697685 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.0919937 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.065380106 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.077227937 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.067943455 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.086787028 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.110361893 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.109984472 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.067335195 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.081610517 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.076431542 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.110648915 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.111862905 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.112267487 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.067035303 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.110015621 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.066481792 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.11116051 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.069894375 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.076978075 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.067610262 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.07935957 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.067094324 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.067221883 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.118796034 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.068322894 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.066770836 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.074630792 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.077143326 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.076568701 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.067298186 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.067094945 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.068289873 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.075077215 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.067402647 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.113059578 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.075140329 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.06618397 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.070517388 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.067799573 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.068261187 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.11498694 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.067429386 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.069842235 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.070521533 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.067466189 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.075154421 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.070640774 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.070118965 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.113314979 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.070760671 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.070383386 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.066314382 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.067938829 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.070551268 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.074886088 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.067613296 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.070349122 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.113194821 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.067428795 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.074861599 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.066342182 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.068491531 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.067429449 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.06808413 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.071363214 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.071166805 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.075816371 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.067904192 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.067785621 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.066525101 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.071034076 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.066576377 seconds)
  done (took 7.217645324 seconds)
done (took 29.558990833 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.545630882 seconds)
  done (took 2.144781293 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.998799504 seconds)
  done (took 2.639517846 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 10.2356441 seconds)
  done (took 11.880713431 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.345147144 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.447837516 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.763081261 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.136140646 seconds)
  done (took 3.353864399 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.868467719 seconds)
  done (took 2.519831466 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.241258181 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.227683399 seconds)
  done (took 2.136530231 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.435388583 seconds)
  done (took 2.07432534 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.214093258 seconds)
  done (took 2.85845 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.238345218 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.161684912 seconds)
  done (took 2.0542293 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.629867162 seconds)
  done (took 2.273077383 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.759996083 seconds)
  done (took 6.411779 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.325246704 seconds)
  done (took 2.026456011 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.241187344 seconds)
  done (took 1.889785763 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 2.609550723 seconds)
  done (took 4.254508211 seconds)
done (took 50.184316497 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.085880615 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.084076455 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.083577725 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.0789354 seconds)
  done (took 1.952197407 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 0.075303328 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 0.068325878 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 0.071216978 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 0.07151229 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.068782864 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.070366639 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 0.072340028 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.068496972 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.069400937 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 0.068413485 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.066729075 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 0.068137661 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 0.07075859 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 0.067861054 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 0.070295244 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 0.071661661 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 0.068192726 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 0.06869439 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.070129411 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 0.06768045 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 0.070615293 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 0.068185326 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 0.065978219 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.067661439 seconds)
  done (took 3.3121 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.079072926 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.069757615 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.072752044 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.068358673 seconds)
  done (took 1.947408724 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 0.077597496 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 0.074096119 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 0.082656831 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 0.08785346 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.073662908 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 0.074634927 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 0.081715308 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 0.08175972 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 0.063467382 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 0.084601477 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 0.06575042 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 0.064620369 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 0.06478724 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 0.083779327 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 0.080839889 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.060149849 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.06152179 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 0.075004075 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 0.074054578 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 0.076816612 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.066215679 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 0.063466955 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.0740445 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 0.075054037 seconds)
  done (took 3.423733981 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.083029065 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.0635067 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.084976614 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.088438339 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.089682344 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.063592686 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.078377 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.090826658 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.126937066 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.064120165 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.072395343 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.063615555 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.103033272 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.063657274 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.07936639 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.108373568 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.111588789 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.068044785 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.097752934 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.064141284 seconds)
  done (took 3.329732364 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.078057877 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.067721096 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.068357031 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.063629584 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.074427094 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.070412323 seconds)
  done (took 2.09095375 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.069304393 seconds)
    (2/12) benchmarking ("push_single!", 256)...
    done (took 0.065896984 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.065040685 seconds)
    (4/12) benchmarking ("push_multiple!", 256)...
    done (took 0.070185282 seconds)
    (5/12) benchmarking ("push_single!", 2048)...
    done (took 0.065645449 seconds)
    (6/12) benchmarking ("push_single!", 8)...
    done (took 0.065667021 seconds)
    (7/12) benchmarking ("prerend!", 2048)...
    done (took 0.064879738 seconds)
    (8/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.064011517 seconds)
    (9/12) benchmarking ("push_multiple!", 8)...
    done (took 0.064157047 seconds)
    (10/12) benchmarking ("append!", 2048)...
    done (took 0.064955513 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.064872241 seconds)
    (12/12) benchmarking ("prerend!", 8)...
    done (took 0.065390081 seconds)
  done (took 2.44841459 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.215009194 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.070549541 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.068139481 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.063585827 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.065509522 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.064655018 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.078724988 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.066973107 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.082311126 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.065568136 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.065215452 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.067486281 seconds)
  done (took 2.635360744 seconds)
  (9/13) benchmarking "index"...
    (1/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.105605187 seconds)
    (2/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.108579065 seconds)
    (3/608) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.140778687 seconds)
    (4/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.113320433 seconds)
    (5/608) benchmarking ("sumvector", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.114277604 seconds)
    (6/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.093529304 seconds)
    (7/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.165683984 seconds)
    (8/608) benchmarking ("sumelt", "BitMatrix")...
    done (took 0.092555625 seconds)
    (9/608) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 0.158470154 seconds)
    (10/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.136535658 seconds)
    (11/608) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.116306818 seconds)
    (12/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.092844481 seconds)
    (13/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.086624818 seconds)
    (14/608) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 0.068230937 seconds)
    (15/608) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.098610343 seconds)
    (16/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.118499083 seconds)
    (17/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.138036496 seconds)
    (18/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.071430448 seconds)
    (19/608) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.11157287 seconds)
    (20/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.216550948 seconds)
    (21/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.131192687 seconds)
    (22/608) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.133916862 seconds)
    (23/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.146030826 seconds)
    (24/608) benchmarking ("sumvector", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.115193251 seconds)
    (25/608) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090843978 seconds)
    (26/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.145616767 seconds)
    (27/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.095569232 seconds)
    (28/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.10108428 seconds)
    (29/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.123650505 seconds)
    (30/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.126611695 seconds)
    (31/608) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.117300347 seconds)
    (32/608) benchmarking ("sumvector_view", "Matrix{Int64}")...
    done (took 0.096387497 seconds)
    (33/608) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 0.070299873 seconds)
    (34/608) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.069303895 seconds)
    (35/608) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.149363013 seconds)
    (36/608) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 0.106829461 seconds)
    (37/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.123255271 seconds)
    (38/608) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 0.092225377 seconds)
    (39/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.105651581 seconds)
    (40/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.088535129 seconds)
    (41/608) benchmarking ("sumcartesian", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.10839688 seconds)
    (42/608) benchmarking ("sumelt", "Array{Float64, 3}")...
    done (took 0.069124786 seconds)
    (43/608) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 0.083731885 seconds)
    (44/608) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 0.112681622 seconds)
    (45/608) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.085372369 seconds)
    (46/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.133634821 seconds)
    (47/608) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 0.093082543 seconds)
    (48/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.116690971 seconds)
    (49/608) benchmarking ("sumeach", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.080992584 seconds)
    (50/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.308238454 seconds)
    (51/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.124450857 seconds)
    (52/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.136371482 seconds)
    (53/608) benchmarking ("sumelt", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.084429234 seconds)
    (54/608) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.103268744 seconds)
    (55/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.135256906 seconds)
    (56/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.109729444 seconds)
    (57/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.131144365 seconds)
    (58/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.103654783 seconds)
    (59/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.079957288 seconds)
    (60/608) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 0.115725214 seconds)
    (61/608) benchmarking ("sumlinear_view", "Matrix{Float64}")...
    done (took 0.101933451 seconds)
    (62/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.096675754 seconds)
    (63/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.104833606 seconds)
    (64/608) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.077562367 seconds)
    (65/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.173626255 seconds)
    (66/608) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.086585767 seconds)
    (67/608) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.109021465 seconds)
    (68/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.108698682 seconds)
    (69/608) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.09274341 seconds)
    (70/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.093722049 seconds)
    (71/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.104083273 seconds)
    (72/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.133958428 seconds)
    (73/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.125817512 seconds)
    (74/608) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.126072962 seconds)
    (75/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.138895454 seconds)
    (76/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.094672091 seconds)
    (77/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.119274502 seconds)
    (78/608) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.100353264 seconds)
    (79/608) benchmarking ("mapr_access", "Matrix{Int64}")...
    done (took 0.128604188 seconds)
    (80/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.103732173 seconds)
    (81/608) benchmarking ("sumcartesian", "Matrix{Float64}")...
    done (took 0.071828422 seconds)
    (82/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.122163451 seconds)
    (83/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.129665744 seconds)
    (84/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.098416744 seconds)
    (85/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.101501519 seconds)
    (86/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.132480976 seconds)
    (87/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.092387058 seconds)
    (88/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.077119861 seconds)
    (89/608) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.101002679 seconds)
    (90/608) benchmarking ("sumlogical_view", "Matrix{Int64}")...
    done (took 0.120425741 seconds)
    (91/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.080250405 seconds)
    (92/608) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.114875729 seconds)
    (93/608) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080203015 seconds)
    (94/608) benchmarking ("sum", "3dsubarray")...
    done (took 0.111179462 seconds)
    (95/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.139167691 seconds)
    (96/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.099585043 seconds)
    (97/608) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.111857403 seconds)
    (98/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.122691136 seconds)
    (99/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.251475024 seconds)
    (100/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.150829664 seconds)
    (101/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.105627158 seconds)
    (102/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.0706782 seconds)
    (103/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.113731412 seconds)
    (104/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.109216695 seconds)
    (105/608) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.152035625 seconds)
    (106/608) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.09219702 seconds)
    (107/608) benchmarking ("sumcartesian", "Matrix{Int64}")...
    done (took 0.074106441 seconds)
    (108/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.098460455 seconds)
    (109/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.099880985 seconds)
    (110/608) benchmarking "5d"...
    done (took 0.150237484 seconds)
    (111/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.104370124 seconds)
    (112/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.077251569 seconds)
    (113/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.10558492 seconds)
    (114/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.136015932 seconds)
    (115/608) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.090958052 seconds)
    (116/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.213625811 seconds)
    (117/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.092788431 seconds)
    (118/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.139663659 seconds)
    (119/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.10724711 seconds)
    (120/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.084629306 seconds)
    (121/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.07307022 seconds)
    (122/608) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 0.088245838 seconds)
    (123/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.11173638 seconds)
    (124/608) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.106113422 seconds)
    (125/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.110387449 seconds)
    (126/608) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.092940087 seconds)
    (127/608) benchmarking ("sumrange_view", "Matrix{Float64}")...
    done (took 0.082837901 seconds)
    (128/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.085736036 seconds)
    (129/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.113901797 seconds)
    (130/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.092647328 seconds)
    (131/608) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.079571562 seconds)
    (132/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.113212018 seconds)
    (133/608) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 0.098503455 seconds)
    (134/608) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.073631754 seconds)
    (135/608) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.086922455 seconds)
    (136/608) benchmarking ("sumcolon_view", "Matrix{Float64}")...
    done (took 0.075238528 seconds)
    (137/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.141105876 seconds)
    (138/608) benchmarking ("sumrange", "Matrix{Float64}")...
    done (took 0.077427591 seconds)
    (139/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.137226567 seconds)
    (140/608) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.125829366 seconds)
    (141/608) benchmarking ("sumeach", "BitMatrix")...
    done (took 0.076474036 seconds)
    (142/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.107754038 seconds)
    (143/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.098425866 seconds)
    (144/608) benchmarking ("mapr_access", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.10960485 seconds)
    (145/608) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 0.098062624 seconds)
    (146/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.119869599 seconds)
    (147/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.144001494 seconds)
    (148/608) benchmarking ("sumlogical", "BitMatrix")...
    done (took 0.116354123 seconds)
    (149/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.09119084 seconds)
    (150/608) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.095718873 seconds)
    (151/608) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.109387232 seconds)
    (152/608) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149490383 seconds)
    (153/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.133277701 seconds)
    (154/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.265849558 seconds)
    (155/608) benchmarking ("sumcolon", "Matrix{Int64}")...
    done (took 0.075146141 seconds)
    (156/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.098947305 seconds)
    (157/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.110068803 seconds)
    (158/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.095000642 seconds)
    (159/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.123525984 seconds)
    (160/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.093251072 seconds)
    (161/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.103992418 seconds)
    (162/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.10063446 seconds)
    (163/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.137688447 seconds)
    (164/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.139288127 seconds)
    (165/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.095573863 seconds)
    (166/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.098191792 seconds)
    (167/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.104083399 seconds)
    (168/608) benchmarking "ind2sub"...
    done (took 0.119061369 seconds)
    (169/608) benchmarking ("sumeach", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.074208071 seconds)
    (170/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.152471682 seconds)
    (171/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.100436729 seconds)
    (172/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.115693715 seconds)
    (173/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.082604262 seconds)
    (174/608) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.138452506 seconds)
    (175/608) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 0.109825116 seconds)
    (176/608) benchmarking ("sumeach", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.087224406 seconds)
    (177/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.085442917 seconds)
    (178/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.098307599 seconds)
    (179/608) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.103627392 seconds)
    (180/608) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.107116443 seconds)
    (181/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.143264009 seconds)
    (182/608) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 0.095107125 seconds)
    (183/608) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 0.071342352 seconds)
    (184/608) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.091948873 seconds)
    (185/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.143523625 seconds)
    (186/608) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.076219589 seconds)
    (187/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.1086274 seconds)
    (188/608) benchmarking ("sumcartesian_view", "Matrix{Float64}")...
    done (took 0.090563671 seconds)
    (189/608) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 0.091285094 seconds)
    (190/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.118368682 seconds)
    (191/608) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.094277189 seconds)
    (192/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.080800415 seconds)
    (193/608) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 0.067812764 seconds)
    (194/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.127739347 seconds)
    (195/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.159395775 seconds)
    (196/608) benchmarking ("sumelt_boundscheck", "Matrix{Float64}")...
    done (took 0.069630355 seconds)
    (197/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.115097867 seconds)
    (198/608) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 0.109709965 seconds)
    (199/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.104181839 seconds)
    (200/608) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.12400677 seconds)
    (201/608) benchmarking ("sumelt", "1:100000")...
    done (took 0.069330608 seconds)
    (202/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.120502817 seconds)
    (203/608) benchmarking ("sumlogical", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.144621912 seconds)
    (204/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.122264424 seconds)
    (205/608) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.151012708 seconds)
    (206/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.336460701 seconds)
    (207/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.115357278 seconds)
    (208/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.11599639 seconds)
    (209/608) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.110415704 seconds)
    (210/608) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.103303694 seconds)
    (211/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.080358309 seconds)
    (212/608) benchmarking ("sumlogical", "Matrix{Float64}")...
    done (took 0.122450886 seconds)
    (213/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.131248992 seconds)
    (214/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.092644364 seconds)
    (215/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.088683905 seconds)
    (216/608) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.131344149 seconds)
    (217/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.116710878 seconds)
    (218/608) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.132291805 seconds)
    (219/608) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.113821687 seconds)
    (220/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.11583124 seconds)
    (221/608) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.102188765 seconds)
    (222/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.105644176 seconds)
    (223/608) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.09977279 seconds)
    (224/608) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 0.101269175 seconds)
    (225/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.141066306 seconds)
    (226/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.121442405 seconds)
    (227/608) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 0.123045556 seconds)
    (228/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.085488166 seconds)
    (229/608) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.105066886 seconds)
    (230/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.118815473 seconds)
    (231/608) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.135695267 seconds)
    (232/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.080798728 seconds)
    (233/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.141462615 seconds)
    (234/608) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.084217001 seconds)
    (235/608) benchmarking ("sumeach_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.120582609 seconds)
    (236/608) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.077541 seconds)
    (237/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.123325653 seconds)
    (238/608) benchmarking ("sumlinear", "BitMatrix")...
    done (took 0.0779644 seconds)
    (239/608) benchmarking ("sumrange", "BitMatrix")...
    done (took 0.108021534 seconds)
    (240/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.078086829 seconds)
    (241/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.100586399 seconds)
    (242/608) benchmarking ("sumelt_boundscheck", "Array{Float64, 3}")...
    done (took 0.068564127 seconds)
    (243/608) benchmarking ("sumeach", "1:100000")...
    done (took 0.07295772 seconds)
    (244/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.144119798 seconds)
    (245/608) benchmarking ("sumvector", "1:100000")...
    done (took 0.113623866 seconds)
    (246/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.108438299 seconds)
    (247/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.101678754 seconds)
    (248/608) benchmarking ("sumlogical", "1:100000")...
    done (took 0.140349385 seconds)
    (249/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.138988581 seconds)
    (250/608) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 0.079186867 seconds)
    (251/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.108409539 seconds)
    (252/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.118045902 seconds)
    (253/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.102522207 seconds)
    (254/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.120038167 seconds)
    (255/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.110870015 seconds)
    (256/608) benchmarking ("sumlinear_view", "Array{Float64, 3}")...
    done (took 0.264494845 seconds)
    (257/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.092770014 seconds)
    (258/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.105949779 seconds)
    (259/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.082909778 seconds)
    (260/608) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.078746064 seconds)
    (261/608) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.112464784 seconds)
    (262/608) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.091098747 seconds)
    (263/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.12151174 seconds)
    (264/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.081922854 seconds)
    (265/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.072905968 seconds)
    (266/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.136082426 seconds)
    (267/608) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.100917134 seconds)
    (268/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.091599513 seconds)
    (269/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.076069048 seconds)
    (270/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.104316781 seconds)
    (271/608) benchmarking "4d"...
    done (took 0.120707367 seconds)
    (272/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.090442103 seconds)
    (273/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.084215858 seconds)
    (274/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.114446695 seconds)
    (275/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.102704003 seconds)
    (276/608) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.137542069 seconds)
    (277/608) benchmarking ("sumcartesian_view", "Matrix{Int64}")...
    done (took 0.088584667 seconds)
    (278/608) benchmarking ("sumvector", "Matrix{Float64}")...
    done (took 0.094644828 seconds)
    (279/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.121602589 seconds)
    (280/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.077864273 seconds)
    (281/608) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 0.090311631 seconds)
    (282/608) benchmarking ("sumlinear", "Array{Float64, 3}")...
    done (took 0.067342693 seconds)
    (283/608) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 0.083938576 seconds)
    (284/608) benchmarking ("sumeach_view", "Array{Float64, 3}")...
    done (took 0.074415738 seconds)
    (285/608) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126397546 seconds)
    (286/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.074539151 seconds)
    (287/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.116273679 seconds)
    (288/608) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 0.067790785 seconds)
    (289/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.130332475 seconds)
    (290/608) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08598744 seconds)
    (291/608) benchmarking ("sumvector_view", "Matrix{Float64}")...
    done (took 0.092032701 seconds)
    (292/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.101349993 seconds)
    (293/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.109150088 seconds)
    (294/608) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.127011842 seconds)
    (295/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.093680802 seconds)
    (296/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.140908403 seconds)
    (297/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.088856924 seconds)
    (298/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.120064318 seconds)
    (299/608) benchmarking ("sumrange", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.106884009 seconds)
    (300/608) benchmarking ("sumelt", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.094238258 seconds)
    (301/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.088524251 seconds)
    (302/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.102937668 seconds)
    (303/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.10052024 seconds)
    (304/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.123857866 seconds)
    (305/608) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 0.096006095 seconds)
    (306/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.125341286 seconds)
    (307/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.146519947 seconds)
    (308/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.104261942 seconds)
    (309/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.144914804 seconds)
    (310/608) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.091439971 seconds)
    (311/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.125652796 seconds)
    (312/608) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.111803177 seconds)
    (313/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.301905062 seconds)
    (314/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.108985773 seconds)
    (315/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.163424978 seconds)
    (316/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.134843483 seconds)
    (317/608) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.108551974 seconds)
    (318/608) benchmarking ("sumrange", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.108958705 seconds)
    (319/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.07309934 seconds)
    (320/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.092933208 seconds)
    (321/608) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.101966612 seconds)
    (322/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.109733032 seconds)
    (323/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.169192628 seconds)
    (324/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.121855691 seconds)
    (325/608) benchmarking ("sumlinear", "Matrix{Int64}")...
    done (took 0.070565694 seconds)
    (326/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.104329937 seconds)
    (327/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.092208908 seconds)
    (328/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.106512655 seconds)
    (329/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.100893344 seconds)
    (330/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.079568892 seconds)
    (331/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.141390042 seconds)
    (332/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.099557991 seconds)
    (333/608) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 0.085712627 seconds)
    (334/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.108780349 seconds)
    (335/608) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.088699313 seconds)
    (336/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.10245626 seconds)
    (337/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.074579235 seconds)
    (338/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.099125269 seconds)
    (339/608) benchmarking ("sumcolon", "1:100000")...
    done (took 0.103609339 seconds)
    (340/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.094313853 seconds)
    (341/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.097025453 seconds)
    (342/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.117269724 seconds)
    (343/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.129252011 seconds)
    (344/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.112152245 seconds)
    (345/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.144008098 seconds)
    (346/608) benchmarking "3d"...
    done (took 0.100083758 seconds)
    (347/608) benchmarking ("sum", "3darray")...
    done (took 0.091355741 seconds)
    (348/608) benchmarking ("sumlogical", "Matrix{Int64}")...
    done (took 0.117877935 seconds)
    (349/608) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.10965745 seconds)
    (350/608) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.108991657 seconds)
    (351/608) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.085110722 seconds)
    (352/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.085517566 seconds)
    (353/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.138645034 seconds)
    (354/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.122633789 seconds)
    (355/608) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 0.128585627 seconds)
    (356/608) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 0.102396685 seconds)
    (357/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.10965718 seconds)
    (358/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.114183176 seconds)
    (359/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.101727214 seconds)
    (360/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.127290311 seconds)
    (361/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.10932231 seconds)
    (362/608) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.130338145 seconds)
    (363/608) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.082667395 seconds)
    (364/608) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.078926053 seconds)
    (365/608) benchmarking ("sumeach", "Array{Float64, 3}")...
    done (took 0.23969156 seconds)
    (366/608) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 0.07134794 seconds)
    (367/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.121283273 seconds)
    (368/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.104835298 seconds)
    (369/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.108750758 seconds)
    (370/608) benchmarking ("sumlinear", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.095970765 seconds)
    (371/608) benchmarking ("sumelt_boundscheck", "Matrix{Int64}")...
    done (took 0.070357526 seconds)
    (372/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.100938081 seconds)
    (373/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.10373748 seconds)
    (374/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.070579065 seconds)
    (375/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.085431036 seconds)
    (376/608) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.09073745 seconds)
    (377/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.092944019 seconds)
    (378/608) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.089357661 seconds)
    (379/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.104144724 seconds)
    (380/608) benchmarking ("sumvector", "BitMatrix")...
    done (took 0.10969803 seconds)
    (381/608) benchmarking ("sumrange", "Matrix{Int64}")...
    done (took 0.088789483 seconds)
    (382/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.100610605 seconds)
    (383/608) benchmarking ("sumcolon", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.096638809 seconds)
    (384/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.143040449 seconds)
    (385/608) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 0.099490243 seconds)
    (386/608) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.085636689 seconds)
    (387/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.140319848 seconds)
    (388/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.146207778 seconds)
    (389/608) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.085261017 seconds)
    (390/608) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.089784131 seconds)
    (391/608) benchmarking ("sumelt", "Matrix{Int64}")...
    done (took 0.070437424 seconds)
    (392/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.077505467 seconds)
    (393/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.110734849 seconds)
    (394/608) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.148797576 seconds)
    (395/608) benchmarking ("sumlinear_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.151665763 seconds)
    (396/608) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.07833112 seconds)
    (397/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.086421782 seconds)
    (398/608) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 0.085869054 seconds)
    (399/608) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.08582554 seconds)
    (400/608) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 0.070545875 seconds)
    (401/608) benchmarking ("sumeach_view", "Matrix{Float64}")...
    done (took 0.087287037 seconds)
    (402/608) benchmarking ("sumcolon", "Matrix{Float64}")...
    done (took 0.08756101 seconds)
    (403/608) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.105455225 seconds)
    (404/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.100798542 seconds)
    (405/608) benchmarking ("sumlogical_view", "Matrix{Float64}")...
    done (took 0.112710948 seconds)
    (406/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.105358338 seconds)
    (407/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.074253295 seconds)
    (408/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.10116179 seconds)
    (409/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.097806546 seconds)
    (410/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.092622585 seconds)
    (411/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.108546118 seconds)
    (412/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.122523334 seconds)
    (413/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.128528545 seconds)
    (414/608) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.144013177 seconds)
    (415/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.115968379 seconds)
    (416/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.109187589 seconds)
    (417/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.076240801 seconds)
    (418/608) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.080774015 seconds)
    (419/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.075825637 seconds)
    (420/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.079440923 seconds)
    (421/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.102156867 seconds)
    (422/608) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 0.079367985 seconds)
    (423/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.076861797 seconds)
    (424/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.317719484 seconds)
    (425/608) benchmarking ("sumcolon_view", "Matrix{Int64}")...
    done (took 0.090161311 seconds)
    (426/608) benchmarking ("sumvector", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.101856158 seconds)
    (427/608) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.105079725 seconds)
    (428/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.085428366 seconds)
    (429/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.073612228 seconds)
    (430/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.133573223 seconds)
    (431/608) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 0.067528276 seconds)
    (432/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.131018515 seconds)
    (433/608) benchmarking ("sumeach", "Matrix{Int64}")...
    done (took 0.06924481 seconds)
    (434/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.079144618 seconds)
    (435/608) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 0.079674152 seconds)
    (436/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.076518138 seconds)
    (437/608) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.090330876 seconds)
    (438/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.133859736 seconds)
    (439/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.108020217 seconds)
    (440/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.108002734 seconds)
    (441/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.105334031 seconds)
    (442/608) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.101194401 seconds)
    (443/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.157281018 seconds)
    (444/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.152939756 seconds)
    (445/608) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078545269 seconds)
    (446/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.140961622 seconds)
    (447/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.073899107 seconds)
    (448/608) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.074457662 seconds)
    (449/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.074244994 seconds)
    (450/608) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.108933176 seconds)
    (451/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.087820826 seconds)
    (452/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.114046345 seconds)
    (453/608) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.140828442 seconds)
    (454/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.089617435 seconds)
    (455/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.100715945 seconds)
    (456/608) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.07686651 seconds)
    (457/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.143923313 seconds)
    (458/608) benchmarking ("sumeach_view", "Matrix{Int64}")...
    done (took 0.098350247 seconds)
    (459/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.103752919 seconds)
    (460/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.085619988 seconds)
    (461/608) benchmarking ("sumeach", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.078519983 seconds)
    (462/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.143255542 seconds)
    (463/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.078654439 seconds)
    (464/608) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.08001365 seconds)
    (465/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.08833977 seconds)
    (466/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.111112984 seconds)
    (467/608) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 0.072537502 seconds)
    (468/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.104233804 seconds)
    (469/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.084899352 seconds)
    (470/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.079430182 seconds)
    (471/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.166771506 seconds)
    (472/608) benchmarking "sub2ind"...
    done (took 0.712232521 seconds)
    (473/608) benchmarking ("sumelt_boundscheck", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.091288798 seconds)
    (474/608) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.075649223 seconds)
    (475/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.096433067 seconds)
    (476/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.145569721 seconds)
    (477/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.13648631 seconds)
    (478/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.098690906 seconds)
    (479/608) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.285033483 seconds)
    (480/608) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 0.11671477 seconds)
    (481/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.097792406 seconds)
    (482/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.093278959 seconds)
    (483/608) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.104739935 seconds)
    (484/608) benchmarking "6d"...
    done (took 0.187609651 seconds)
    (485/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.073045923 seconds)
    (486/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.091853246 seconds)
    (487/608) benchmarking ("sumrange", "1:100000")...
    done (took 0.100800717 seconds)
    (488/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.095250979 seconds)
    (489/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.099162619 seconds)
    (490/608) benchmarking ("sumrange_view", "Matrix{Int64}")...
    done (took 0.096411596 seconds)
    (491/608) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 0.084851205 seconds)
    (492/608) benchmarking ("sumvector", "Matrix{Int64}")...
    done (took 0.089791421 seconds)
    (493/608) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 0.084864551 seconds)
    (494/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.077078536 seconds)
    (495/608) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.104437701 seconds)
    (496/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.085642484 seconds)
    (497/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.094146344 seconds)
    (498/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.10842058 seconds)
    (499/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.081421179 seconds)
    (500/608) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.085772358 seconds)
    (501/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.127611085 seconds)
    (502/608) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.10085391 seconds)
    (503/608) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.079897761 seconds)
    (504/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.085311536 seconds)
    (505/608) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 0.103108765 seconds)
    (506/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.085264865 seconds)
    (507/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.100464203 seconds)
    (508/608) benchmarking ("sumelt", "Matrix{Float64}")...
    done (took 0.067457303 seconds)
    (509/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.111830435 seconds)
    (510/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.090172998 seconds)
    (511/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.117258738 seconds)
    (512/608) benchmarking ("sumlinear_view", "Matrix{Int64}")...
    done (took 0.097072493 seconds)
    (513/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.107469072 seconds)
    (514/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.128816029 seconds)
    (515/608) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.093671408 seconds)
    (516/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.136769886 seconds)
    (517/608) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.106826264 seconds)
    (518/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.12253584 seconds)
    (519/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.087317633 seconds)
    (520/608) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.077433077 seconds)
    (521/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.12627765 seconds)
    (522/608) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.089653966 seconds)
    (523/608) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.077142606 seconds)
    (524/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.146017429 seconds)
    (525/608) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.096897026 seconds)
    (526/608) benchmarking ("sumcolon", "BitMatrix")...
    done (took 0.091249195 seconds)
    (527/608) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.103940141 seconds)
    (528/608) benchmarking ("sumcartesian_view", "Array{Float64, 3}")...
    done (took 0.097019938 seconds)
    (529/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.114019722 seconds)
    (530/608) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.118004367 seconds)
    (531/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.115100378 seconds)
    (532/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.097447034 seconds)
    (533/608) benchmarking ("sumeach", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.080120921 seconds)
    (534/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.105118698 seconds)
    (535/608) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.106469409 seconds)
    (536/608) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.260501641 seconds)
    (537/608) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077766466 seconds)
    (538/608) benchmarking ("sumlinear", "1:100000")...
    done (took 0.072646082 seconds)
    (539/608) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 0.074820537 seconds)
    (540/608) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.104079027 seconds)
    (541/608) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083238449 seconds)
    (542/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.081513909 seconds)
    (543/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.112090513 seconds)
    (544/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.086699306 seconds)
    (545/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.100797027 seconds)
    (546/608) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.10074535 seconds)
    (547/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.119828307 seconds)
    (548/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.08584718 seconds)
    (549/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.098771089 seconds)
    (550/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.108573589 seconds)
    (551/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.088813106 seconds)
    (552/608) benchmarking ("sumcartesian_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.107122241 seconds)
    (553/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.098930736 seconds)
    (554/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.125564652 seconds)
    (555/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.170058812 seconds)
    (556/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.121161364 seconds)
    (557/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.126620544 seconds)
    (558/608) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.131268353 seconds)
    (559/608) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.075611063 seconds)
    (560/608) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.073641434 seconds)
    (561/608) benchmarking ("sumeach", "Matrix{Float64}")...
    done (took 0.068009739 seconds)
    (562/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.115365305 seconds)
    (563/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.07815253 seconds)
    (564/608) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 0.087837573 seconds)
    (565/608) benchmarking ("sumelt", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.080218472 seconds)
    (566/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.133189348 seconds)
    (567/608) benchmarking "2d"...
    done (took 0.081721574 seconds)
    (568/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.112505137 seconds)
    (569/608) benchmarking "7d"...
    done (took 0.242097544 seconds)
    (570/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.08041881 seconds)
    (571/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.093945418 seconds)
    (572/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.09568634 seconds)
    (573/608) benchmarking ("sumlinear", "Matrix{Float64}")...
    done (took 0.069042633 seconds)
    (574/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.082954349 seconds)
    (575/608) benchmarking ("sumrange", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.106978327 seconds)
    (576/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.086396456 seconds)
    (577/608) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.079155515 seconds)
    (578/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.119130816 seconds)
    (579/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.082615696 seconds)
    (580/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.128517564 seconds)
    (581/608) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.110346414 seconds)
    (582/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.098866886 seconds)
    (583/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.095350335 seconds)
    (584/608) benchmarking ("sumelt", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.080565118 seconds)
    (585/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.115187936 seconds)
    (586/608) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 0.105231715 seconds)
    (587/608) benchmarking ("mapr_access", "BitMatrix")...
    done (took 0.131745745 seconds)
    (588/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.098880434 seconds)
    (589/608) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.07520151 seconds)
    (590/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.12560598 seconds)
    (591/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.104426953 seconds)
    (592/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.141433544 seconds)
    (593/608) benchmarking ("sumcartesian", "Array{Float64, 3}")...
    done (took 0.073488911 seconds)
    (594/608) benchmarking ("sumelt", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.082866863 seconds)
    (595/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.136945358 seconds)
    (596/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.276399315 seconds)
    (597/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.127579472 seconds)
    (598/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.078027247 seconds)
    (599/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.145557463 seconds)
    (600/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.140438455 seconds)
    (601/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.098046944 seconds)
    (602/608) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.130633632 seconds)
    (603/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.068986084 seconds)
    (604/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.085534401 seconds)
    (605/608) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.086635412 seconds)
    (606/608) benchmarking ("mapr_access", "Matrix{Float64}")...
    done (took 0.124363566 seconds)
    (607/608) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081782443 seconds)
    (608/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.108929016 seconds)
  done (took 68.054580896 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 0.146341088 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 0.174325267 seconds)
    (3/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 0.122372033 seconds)
    (4/8) benchmarking ("collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.132552939 seconds)
    (5/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.289969631 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.299710236 seconds)
    (7/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.152545255 seconds)
    (8/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 0.123792161 seconds)
  done (took 3.25359742 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hcat", 500)...
    done (took 0.070051092 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.081571055 seconds)
    (3/17) benchmarking ("vcat_setind", 5)...
    done (took 0.079245075 seconds)
    (4/17) benchmarking ("catnd_setind", 500)...
    done (took 0.245131942 seconds)
    (5/17) benchmarking ("vcat", 500)...
    done (took 0.096628736 seconds)
    (6/17) benchmarking ("vcat", 5)...
    done (took 0.066535788 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.071823265 seconds)
    (8/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.080478669 seconds)
    (9/17) benchmarking ("vcat_setind", 500)...
    done (took 0.065986618 seconds)
    (10/17) benchmarking ("hvcat", 5)...
    done (took 0.065485465 seconds)
    (11/17) benchmarking ("hcat_setind", 500)...
    done (took 0.099752359 seconds)
    (12/17) benchmarking ("hcat", 5)...
    done (took 0.065788882 seconds)
    (13/17) benchmarking ("hvcat", 500)...
    done (took 0.066002442 seconds)
    (14/17) benchmarking ("catnd", 500)...
    done (took 0.524498576 seconds)
    (15/17) benchmarking ("hcat_setind", 5)...
    done (took 0.06577127 seconds)
    (16/17) benchmarking ("catnd", 5)...
    done (took 0.071289367 seconds)
    (17/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.066006457 seconds)
  done (took 3.691992046 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.355898545 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.607160373 seconds)
    (3/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 1.32674069 seconds)
    (4/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 5.75171952 seconds)
    (5/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.168324015 seconds)
    (6/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.722358998 seconds)
    (7/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.074702435 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.081668861 seconds)
    (9/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.9432141 seconds)
    (10/12) benchmarking ("gramschmidt!", 1000)...
    done (took 3.399301619 seconds)
    (11/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.16096103 seconds)
    (12/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.088751078 seconds)
  done (took 21.487291727 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 4)...
    done (took 0.077618238 seconds)
    (2/5) benchmarking ("setindex!", 3)...
    done (took 0.122000852 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.120709895 seconds)
    (4/5) benchmarking ("setindex!", 1)...
    done (took 0.072720164 seconds)
    (5/5) benchmarking ("setindex!", 2)...
    done (took 0.072285126 seconds)
  done (took 2.265300515 seconds)
done (took 121.574715783 seconds)
(18/20) benchmarking "misc"...
  (1/15) benchmarking "fastmath many args"...
  done (took 0.085226081 seconds)
  (2/15) benchmarking "repeat"...
    (1/2) benchmarking (200, 24, 1)...
    done (took 0.171374276 seconds)
    (2/2) benchmarking (200, 1, 24)...
    done (took 0.067113198 seconds)
  done (took 2.071036015 seconds)
  (3/15) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 0.123544844 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.119164862 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.118973653 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 0.120865104 seconds)
  done (took 2.292251087 seconds)
  (4/15) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.076108148 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.074582623 seconds)
  done (took 1.957874336 seconds)
  (5/15) benchmarking "perf highdim generator"...
  done (took 0.227359187 seconds)
  (6/15) benchmarking "18129"...
  done (took 0.216859681 seconds)
  (7/15) benchmarking "20517"...
  done (took 0.090087165 seconds)
  (8/15) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.084277639 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.079301052 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.078991051 seconds)
  done (took 2.060792362 seconds)
  (9/15) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.072573042 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.069074522 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.069185083 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.069406739 seconds)
  done (took 2.083937644 seconds)
  (10/15) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.172907783 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.065532015 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.06754064 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.069320519 seconds)
  done (took 2.18070721 seconds)
  (11/15) benchmarking "foldl"...
    (1/3) benchmarking "foldl(+, filter(...))"...
    done (took 0.087087605 seconds)
    (2/3) benchmarking "foldl(+, filter(...); init = 0.0)"...
    done (took 0.085672914 seconds)
    (3/3) benchmarking "foldl(+, flatten(filter(...)))"...
    done (took 0.114402652 seconds)
  done (took 2.095569865 seconds)
  (12/15) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.084607564 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.082905502 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.077843214 seconds)
  done (took 2.057238071 seconds)
  (13/15) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.110801317 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.094795861 seconds)
  done (took 2.011770813 seconds)
  (14/15) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.080502966 seconds)
  done (took 1.888831092 seconds)
  (15/15) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.092972493 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.09682202 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.186418004 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.152058259 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.188462479 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.174249314 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.07535482 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.07550498 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.071496093 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.070464863 seconds)
  done (took 2.990865339 seconds)
done (took 26.113437593 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.08552941 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.192371463 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.318211941 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.085374412 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.652633796 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.313179016 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.730784457 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.089372795 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.098398187 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.066997215 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083527752 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.632075776 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.73188368 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.148457296 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.717477638 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.138956728 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.562365913 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068179316 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.066599307 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067538098 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.715710597 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.06881773 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067320499 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067319552 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.558542094 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.332173798 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068201619 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.134300003 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067390773 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.073705871 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.314088145 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.06873237 seconds)
  done (took 14.166303727 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.095605579 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.125079333 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.071770565 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.083070216 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.068706486 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.068400944 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.070739903 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.067526659 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.109336062 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067464446 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084511441 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067021206 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.071702388 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068398544 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087670746 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.067067391 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069383462 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067686786 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.066956721 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067590625 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086231468 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.066871072 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067510445 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067478771 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067353418 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.081402615 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068243065 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.066921521 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067245313 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.07095412 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.072096473 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068376527 seconds)
  done (took 4.219531777 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.129350906 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.128645372 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.072255827 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.106818237 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.115310465 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069921978 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.14975567 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.089728293 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.113213499 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068294725 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085778329 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067392948 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.102470008 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068657307 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087471915 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.067124603 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069459877 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067729677 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.066756738 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067729819 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.085896042 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.066895799 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067222098 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067700364 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067538287 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.082457195 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067967042 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.066909658 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.066967762 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.07091384 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.072563495 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068297545 seconds)
  done (took 4.472034622 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.070914279 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.069523595 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.075319829 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.078235454 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.06483137 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.06661843 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.067691457 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.064949196 seconds)
  done (took 2.386190712 seconds)
done (took 27.07036459 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.08022881 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.06570055 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.068718848 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.085443238 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.071719243 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.112157768 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.063131312 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.072869501 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.069403709 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.069653827 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.071032171 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.065817867 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.068312985 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.063050146 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.069893439 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.064064515 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.11553825 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.06842197 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.112285422 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.113682367 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.06666074 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.069450536 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.072648943 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.113674135 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.112897784 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.112810054 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.072985462 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.070147391 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.06447605 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.067477081 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.174705647 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.187598954 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.074178774 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.120574534 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.064937166 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.064545817 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.068764536 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.067247499 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.11718769 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.073721537 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.066718983 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.073193548 seconds)
  done (took 5.3375228 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.193451382 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.196691154 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.189215428 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.078731068 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.091318209 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.078668244 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.196915862 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.076337164 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.07444 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.195890797 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.070501435 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.074577598 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.076773753 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.0675348 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.074372947 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.070416767 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.075990172 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.068848835 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.074911583 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.075164001 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.195709696 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.068643669 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.07878495 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.075759539 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.069718565 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.076237089 seconds)
  done (took 4.513558168 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.073954137 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.087135875 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.090595001 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.145155352 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.109043637 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.081668043 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.080725306 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.092438231 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.100459656 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.066773239 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.070502434 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.097558624 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.095113163 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.073609824 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.106466535 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.085090716 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.07879858 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.068232966 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.073014685 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.100706987 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.089484065 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.084970678 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.099405201 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.086475869 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.065538866 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.075810457 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.073549915 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.082378438 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.07405097 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.079380793 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.070521439 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.069879039 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.066934247 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.078023017 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.070488214 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.064408745 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.089164096 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.07945731 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.081612723 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.106690364 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.077245588 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.117945462 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.093989284 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.131829298 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.066664293 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.068858484 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.07072204 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.079499996 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.068032691 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.097539484 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.082373769 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.066628033 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.08612108 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.068469176 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.068303891 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.08279232 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.068654786 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.0685988 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.078608023 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.072801682 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.087763257 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.072160581 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.087698084 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.066661113 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.078121566 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.068362441 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.068662236 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.065328209 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.100908433 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.074271736 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.117248023 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.06807549 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.064513463 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.078980995 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.078143892 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.073513352 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.066281432 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.086173011 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.07946301 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.070716149 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.077567951 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.06938377 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.069801765 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.103651612 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.065386645 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.064529975 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.064408299 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.068611315 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.069900097 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.067080006 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.079703783 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.066492352 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.070645444 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.082674528 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.067823331 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.067872061 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.069303554 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.067945886 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.066432582 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.077539649 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.070908003 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.069087975 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.080017218 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.068267994 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.070423408 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.082383378 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.076757076 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.06709162 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.068535627 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.069492977 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.06970544 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.073154171 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.071971292 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.070334346 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.073314188 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.076047034 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.075086994 seconds)
  done (took 11.05111157 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.21045162 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.196405226 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.068093136 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.193351645 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.075460238 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.128092369 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.19496195 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.133846674 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.067540015 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.067995139 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.066748541 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.143082094 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.135955403 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.146892091 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.118116933 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.067524574 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.09361556 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.146868439 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.199617888 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.19477844 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.093065813 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.075191283 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.069827492 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.068901651 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.068415422 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.076262043 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.083197014 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.075924645 seconds)
  done (took 5.149992078 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.075127107 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.082334846 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.070036176 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.090912273 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.082883834 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.066716962 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.068966418 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.067848897 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.083765257 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.07219241 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.066762938 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.071396346 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.069996001 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.067138353 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.067520064 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.0729933 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.073166608 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.066445619 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.070555273 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.071310916 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.077743437 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.154512405 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.071294067 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.069802034 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.069143697 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.067038741 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.0731753 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.074730698 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.066672237 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.101018748 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.064383861 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.071069037 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.081317873 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.067694293 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.066715339 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.067909685 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.067051559 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.06698191 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.067312609 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.064908522 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.064928233 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.073114645 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.065783277 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.072003537 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.082114085 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.076163746 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.068518607 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.069660074 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.069604664 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.064000801 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.070575557 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.070561644 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.070076908 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.075761512 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.070768005 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.069433007 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.068763967 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.096775519 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.073274406 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.066860008 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.067029962 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.065420021 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.068584699 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.074754413 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.084004943 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.068685417 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.065394456 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.067127761 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.07447147 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.082087806 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.066590394 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.072394843 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.064126359 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.067380863 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.069236901 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.069936746 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.068776827 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.065435116 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.067060481 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.067220276 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.068005542 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.066715897 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.067246592 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.069808811 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.06481232 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.065394119 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.068191241 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.068902861 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.072908273 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.066077787 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.069712686 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.068764566 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.066389892 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.07029162 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.073683192 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.070552206 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.087918404 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.07521623 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.067884312 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.065273808 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.08293419 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.069381713 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.066969493 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.071391146 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.071859015 seconds)
  done (took 9.441822969 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.09797195 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.067832986 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.08645552 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.097959336 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.076428727 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.071116869 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.080632388 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.067298217 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.088061427 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.0653963 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.07522946 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.064518493 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.080313641 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.07583266 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.06794474 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.077030829 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.068776913 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.08764822 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.081350021 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.064869902 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.075669027 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.078823085 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.078993473 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.085743001 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.085124022 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.086157891 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.079346914 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.069567786 seconds)
  done (took 4.080701493 seconds)
done (took 41.396364308 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.961196181 seconds)
  (2/12) benchmarking "fasta"...
  done (took 2.164949505 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.935870365 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.42072504 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 7.069238047 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.968589035 seconds)
  (7/12) benchmarking "nbody"...
  done (took 3.046348007 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.95872535 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 8.256309437 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 7.005235394 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.651646367 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.588297349 seconds)
done (took 69.937637048 seconds)
(2/20) benchmarking "string"...
  (1/7) benchmarking "join"...
  done (took 7.033835252 seconds)
  (2/7) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 2.057975691 seconds)
    (2/2) benchmarking "String"...
    done (took 2.144819774 seconds)
  done (took 6.123226804 seconds)
  (3/7) benchmarking "==(::SubString, ::String)"...
    (1/3) benchmarking "equal"...
    done (took 2.345227806 seconds)
    (2/3) benchmarking "different length"...
    done (took 1.901599297 seconds)
    (3/3) benchmarking "different"...
    done (took 1.941119781 seconds)
  done (took 8.021912066 seconds)
  (4/7) benchmarking "replace"...
  done (took 3.209516928 seconds)
  (5/7) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 6.654302598 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.176648355 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.901663673 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.906740208 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.3877227 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 3.058121821 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.548215087 seconds)
  done (took 33.480227192 seconds)
  (6/7) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.9050388 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.279526505 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 5.264218599 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 5.338588782 seconds)
  done (took 21.703056157 seconds)
  (7/7) benchmarking "==(::AbstractString, ::AbstractString)"...
    (1/4) benchmarking "identical"...
    done (took 2.344746353 seconds)
    (2/4) benchmarking "equal"...
    done (took 2.225983506 seconds)
    (3/4) benchmarking "different length"...
    done (took 2.22493477 seconds)
    (4/4) benchmarking "different"...
    done (took 2.372644975 seconds)
  done (took 11.098231524 seconds)
done (took 92.653748848 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.903285016 seconds)
    (2/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 7.178643309 seconds)
    (3/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.927651022 seconds)
    (4/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 2.08427181 seconds)
    (5/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 6.923467942 seconds)
    (6/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 6.982028845 seconds)
    (7/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 6.906612692 seconds)
    (8/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.918163912 seconds)
    (9/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.908023663 seconds)
    (10/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 6.911053781 seconds)
    (11/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.91052724 seconds)
    (12/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 6.905736382 seconds)
    (13/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 6.899941259 seconds)
    (14/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 6.948271907 seconds)
    (15/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 6.905002817 seconds)
    (16/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 6.927054141 seconds)
    (17/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 7.167888222 seconds)
    (18/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.907469334 seconds)
    (19/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.947052054 seconds)
    (20/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.631764652 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 4.098178679 seconds)
    (22/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 6.911646852 seconds)
    (23/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.922176656 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 1.962269226 seconds)
    (25/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.282308645 seconds)
    (26/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 6.928680667 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.321533251 seconds)
    (28/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 6.90963999 seconds)
    (29/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 2.500783979 seconds)
    (30/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.908216573 seconds)
    (31/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 6.906471477 seconds)
    (32/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 6.909900328 seconds)
  done (took 208.191292262 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.904062912 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 4.714034828 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 4.73830975 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.91242061 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 5.231678943 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 3.246711859 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.755343926 seconds)
    (8/36) benchmarking "gemv"...
    done (took 5.256971232 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.906577174 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.907841724 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.901691931 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.906884022 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.896285995 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.467063218 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.936241499 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.917630437 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.749524778 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.656397568 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.941872788 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.851150329 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.912027108 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 4.386615599 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 4.358765998 seconds)
    (24/36) benchmarking "symv!"...
    done (took 3.708453232 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.925406294 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.95868954 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.908624689 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.928024894 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.398697873 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 3.725520373 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.934731028 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.927577747 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.079729211 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 3.136868425 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.911522835 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.915499293 seconds)
  done (took 181.761756793 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.154887574 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/118) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.913858344 seconds)
    (2/118) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.950438158 seconds)
    (3/118) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 2.016536296 seconds)
    (4/118) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.800752058 seconds)
    (5/118) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 4.718043908 seconds)
    (6/118) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.906460154 seconds)
    (7/118) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.902368493 seconds)
    (8/118) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.903420535 seconds)
    (9/118) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.909576396 seconds)
    (10/118) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.907519339 seconds)
    (11/118) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.972166989 seconds)
    (12/118) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.906977884 seconds)
    (13/118) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 22.655816458 seconds)
    (14/118) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 2.085519804 seconds)
    (15/118) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.908685395 seconds)
    (16/118) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.904097356 seconds)
    (17/118) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 22.395513288 seconds)
    (18/118) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.911179944 seconds)
    (19/118) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.904448126 seconds)
    (20/118) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 2.428368367 seconds)
    (21/118) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 2.028493116 seconds)
    (22/118) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 2.248622385 seconds)
    (23/118) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 2.241125698 seconds)
    (24/118) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.913988419 seconds)
    (25/118) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.923690706 seconds)
    (26/118) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 2.033722076 seconds)
    (27/118) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.919034232 seconds)
    (28/118) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.910517051 seconds)
    (29/118) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 2.015548508 seconds)
    (30/118) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.910159515 seconds)
    (31/118) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 2.043210088 seconds)
    (32/118) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 2.017609012 seconds)
    (33/118) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.918312116 seconds)
    (34/118) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.966178636 seconds)
    (35/118) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.918570908 seconds)
    (36/118) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.096699038 seconds)
    (37/118) benchmarking ("3-arg mul!", 2)...
    done (took 1.911111341 seconds)
    (38/118) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.905486828 seconds)
    (39/118) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.909702215 seconds)
    (40/118) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.906946225 seconds)
    (41/118) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.953056554 seconds)
    (42/118) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 1.910075941 seconds)
    (43/118) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 5.914857898 seconds)
    (44/118) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 2.012981594 seconds)
    (45/118) benchmarking ("5-arg mul!", 3)...
    done (took 1.910460745 seconds)
    (46/118) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.92514679 seconds)
    (47/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 3.360782978 seconds)
    (48/118) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.497971764 seconds)
    (49/118) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.917389322 seconds)
    (50/118) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.907704781 seconds)
    (51/118) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 1.920841329 seconds)
    (52/118) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.910248125 seconds)
    (53/118) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.907604715 seconds)
    (54/118) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.412647867 seconds)
    (55/118) benchmarking ("5-arg mul!", 2)...
    done (took 1.911237219 seconds)
    (56/118) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.941270531 seconds)
    (57/118) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.460065041 seconds)
    (58/118) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.90886875 seconds)
    (59/118) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.906656552 seconds)
    (60/118) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.906869763 seconds)
    (61/118) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.909899342 seconds)
    (62/118) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.90727771 seconds)
    (63/118) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.906639726 seconds)
    (64/118) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.91247834 seconds)
    (65/118) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.953999382 seconds)
    (66/118) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 3.527314959 seconds)
    (67/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.65462314 seconds)
    (68/118) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 2.262856251 seconds)
    (69/118) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 3.588692653 seconds)
    (70/118) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.912348437 seconds)
    (71/118) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.624128864 seconds)
    (72/118) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.974733449 seconds)
    (73/118) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.914620997 seconds)
    (74/118) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 2.082705582 seconds)
    (75/118) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.912852834 seconds)
    (76/118) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.908123721 seconds)
    (77/118) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.90985343 seconds)
    (78/118) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.909642196 seconds)
    (79/118) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 4.019538043 seconds)
    (80/118) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 3.926507302 seconds)
    (81/118) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.914639313 seconds)
    (82/118) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 2.016564826 seconds)
    (83/118) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.914765367 seconds)
    (84/118) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.911838969 seconds)
    (85/118) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 22.380089433 seconds)
    (86/118) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 22.115767017 seconds)
    (87/118) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.919356502 seconds)
    (88/118) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.928387362 seconds)
    (89/118) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.970907854 seconds)
    (90/118) benchmarking ("3-arg mul!", 3)...
    done (took 1.913548377 seconds)
    (91/118) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.908057267 seconds)
    (92/118) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.914610215 seconds)
    (93/118) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 3.904100359 seconds)
    (94/118) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.911969198 seconds)
    (95/118) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.909467012 seconds)
    (96/118) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.908345643 seconds)
    (97/118) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.91391301 seconds)
    (98/118) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 5.256880754 seconds)
    (99/118) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.912256112 seconds)
    (100/118) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 22.394403009 seconds)
    (101/118) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.296531405 seconds)
    (102/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 2.00303949 seconds)
    (103/118) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.33555623 seconds)
    (104/118) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.831865122 seconds)
    (105/118) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.916885497 seconds)
    (106/118) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.910180986 seconds)
    (107/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.928998765 seconds)
    (108/118) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.911507592 seconds)
    (109/118) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.91142187 seconds)
    (110/118) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.924439924 seconds)
    (111/118) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.912030686 seconds)
    (112/118) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.910114519 seconds)
    (113/118) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.911906221 seconds)
    (114/118) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.91132953 seconds)
    (115/118) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.910148637 seconds)
    (116/118) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.913768906 seconds)
    (117/118) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.930457956 seconds)
    (118/118) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.911466393 seconds)
  done (took 425.032344468 seconds)
done (took 819.056753278 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 512)...
    done (took 2.579775566 seconds)
    (2/5) benchmarking ("identity", 4096)...
    done (took 2.677817148 seconds)
    (3/5) benchmarking ("identity", 2)...
    done (took 2.491099574 seconds)
    (4/5) benchmarking ("identity", 1024)...
    done (took 2.552160542 seconds)
    (5/5) benchmarking ("identity", 64)...
    done (took 2.502010117 seconds)
  done (took 14.647760164 seconds)
done (took 16.490469739 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/41) benchmarking ("> q0.8", "Vector{UInt8}")...
    done (took 1.938297387 seconds)
    (2/41) benchmarking ("Vector{Bool}", "10-90")...
    done (took 1.939173716 seconds)
    (3/41) benchmarking ("BitVector", "10-90")...
    done (took 1.923273614 seconds)
    (4/41) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.940332908 seconds)
    (5/41) benchmarking ("> q0.95", "Vector{UInt8}")...
    done (took 1.932196171 seconds)
    (6/41) benchmarking ("> q0.99", "Vector{Float64}")...
    done (took 1.93044367 seconds)
    (7/41) benchmarking ("> q0.95", "Vector{UInt64}")...
    done (took 1.939253909 seconds)
    (8/41) benchmarking ("> q0.8", "Vector{Int64}")...
    done (took 1.949542537 seconds)
    (9/41) benchmarking ("> q0.99", "Vector{Int64}")...
    done (took 1.94409427 seconds)
    (10/41) benchmarking ("> q0.99", "Vector{UInt8}")...
    done (took 1.92960555 seconds)
    (11/41) benchmarking ("> q0.5", "Vector{Float64}")...
    done (took 1.939825735 seconds)
    (12/41) benchmarking ("> q0.99", "Vector{Bool}")...
    done (took 1.933211546 seconds)
    (13/41) benchmarking ("> q0.8", "Vector{Float32}")...
    done (took 1.942252366 seconds)
    (14/41) benchmarking ("> q0.95", "Vector{Int64}")...
    done (took 1.945794133 seconds)
    (15/41) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.958373267 seconds)
    (16/41) benchmarking ("> q0.8", "Vector{Int8}")...
    done (took 1.946275146 seconds)
    (17/41) benchmarking ("> q0.99", "Vector{Int8}")...
    done (took 1.933070556 seconds)
    (18/41) benchmarking ("BitVector", "50-50")...
    done (took 1.923726894 seconds)
    (19/41) benchmarking ("> q0.5", "Vector{Bool}")...
    done (took 1.938267294 seconds)
    (20/41) benchmarking ("> q0.95", "Vector{Bool}")...
    done (took 1.935373635 seconds)
    (21/41) benchmarking ("> q0.95", "Vector{Float32}")...
    done (took 1.931277661 seconds)
    (22/41) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.93642773 seconds)
    (23/41) benchmarking ("> q0.8", "Vector{Bool}")...
    done (took 1.936081413 seconds)
    (24/41) benchmarking ("> q0.5", "Vector{Int8}")...
    done (took 1.938719944 seconds)
    (25/41) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.948592087 seconds)
    (26/41) benchmarking ("> q0.95", "Vector{Float64}")...
    done (took 1.935093453 seconds)
    (27/41) benchmarking ("BitVector", "90-10")...
    done (took 1.932313276 seconds)
    (28/41) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.93750424 seconds)
    (29/41) benchmarking ("> q0.95", "Vector{Int8}")...
    done (took 1.934176801 seconds)
    (30/41) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.937229361 seconds)
    (31/41) benchmarking ("> q0.8", "Vector{UInt64}")...
    done (took 1.952394273 seconds)
    (32/41) benchmarking ("> q0.8", "Vector{Float64}")...
    done (took 1.960754662 seconds)
    (33/41) benchmarking ("> q0.99", "Vector{UInt64}")...
    done (took 1.944212168 seconds)
    (34/41) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.959019299 seconds)
    (35/41) benchmarking ("> q0.5", "Vector{Float32}")...
    done (took 1.945951562 seconds)
    (36/41) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.943400573 seconds)
    (37/41) benchmarking ("Vector{Bool}", "90-10")...
    done (took 1.93844694 seconds)
    (38/41) benchmarking ("> q0.5", "Vector{Int64}")...
    done (took 1.947860494 seconds)
    (39/41) benchmarking ("> q0.99", "Vector{Float32}")...
    done (took 1.932759369 seconds)
    (40/41) benchmarking ("> q0.5", "Vector{UInt64}")...
    done (took 1.949770469 seconds)
    (41/41) benchmarking ("> q0.5", "Vector{UInt8}")...
    done (took 1.944263673 seconds)
  done (took 81.397032176 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.923121923 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 2.090121481 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.195647652 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.960542974 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.924690449 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.203650913 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.990961705 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 2.098245646 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 2.084752422 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.240500322 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.219838878 seconds)
  done (took 24.782719646 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.92125682 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 2.091363385 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.203108567 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.96449764 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.927124281 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.21360629 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.994115072 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 2.077198283 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 2.09068204 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.217532285 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.226189947 seconds)
  done (took 24.792367295 seconds)
done (took 132.824982086 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/2) benchmarking "longtuple"...
    done (took 2.469338327 seconds)
    (2/2) benchmarking "11899"...
    done (took 1.971481491 seconds)
  done (took 6.288459433 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.915858092 seconds)
    (2/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.933424916 seconds)
    (3/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 2.093510724 seconds)
    (4/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.918874024 seconds)
    (5/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.915385158 seconds)
    (6/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.921834511 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.921598129 seconds)
    (8/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.915862215 seconds)
  done (took 17.383738102 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.916210766 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.915894916 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.916671404 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.916729961 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.915853798 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.916806586 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.916643483 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.918723263 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.917821412 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.918232781 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.917931115 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.917122027 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.925141336 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.925107914 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.916605239 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.918961907 seconds)
  done (took 32.537665037 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("minimum", (8,))...
    done (took 1.916260661 seconds)
    (2/24) benchmarking ("sumabs", (4,))...
    done (took 1.917708384 seconds)
    (3/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.917657374 seconds)
    (4/24) benchmarking ("minimum", (2,))...
    done (took 1.916158957 seconds)
    (5/24) benchmarking ("sum", (8,))...
    done (took 1.915878808 seconds)
    (6/24) benchmarking ("sumabs", (2,))...
    done (took 1.916212759 seconds)
    (7/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.920685363 seconds)
    (8/24) benchmarking ("minimum", (4, 4))...
    done (took 1.918046528 seconds)
    (9/24) benchmarking ("sumabs", (8,))...
    done (took 1.916693799 seconds)
    (10/24) benchmarking ("sum", (2, 2))...
    done (took 1.917719932 seconds)
    (11/24) benchmarking ("minimum", (2, 2))...
    done (took 1.916070445 seconds)
    (12/24) benchmarking ("sum", (4,))...
    done (took 1.919164108 seconds)
    (13/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.919804406 seconds)
    (14/24) benchmarking ("sumabs", (16,))...
    done (took 1.918649396 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.920010841 seconds)
    (16/24) benchmarking ("sum", (4, 4))...
    done (took 1.919650896 seconds)
    (17/24) benchmarking ("sum", (8, 8))...
    done (took 1.920722691 seconds)
    (18/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.917963391 seconds)
    (19/24) benchmarking ("minimum", (8, 8))...
    done (took 1.91874333 seconds)
    (20/24) benchmarking ("sum", (16, 16))...
    done (took 1.917915021 seconds)
    (21/24) benchmarking ("minimum", (4,))...
    done (took 1.919118973 seconds)
    (22/24) benchmarking ("sum", (16,))...
    done (took 1.920808231 seconds)
    (23/24) benchmarking ("minimum", (16, 16))...
    done (took 1.927172782 seconds)
    (24/24) benchmarking ("sum", (2,))...
    done (took 1.918902277 seconds)
  done (took 47.897880192 seconds)
done (took 105.976082591 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.496614004 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.902224188 seconds)
  done (took 9.250301397 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.92135209 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.918673378 seconds)
  done (took 5.787054631 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.919081379 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.916737824 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.917073205 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.921224975 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.918518472 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.918257801 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.920127051 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.918764839 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.91944387 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.920120038 seconds)
  done (took 21.040884909 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.917633587 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.918556341 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.918423 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.917961189 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.918402545 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.918791662 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.918840087 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.9196417 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.922551919 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.918938792 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.918743423 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.920812808 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.919988288 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.927045574 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.919336488 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.918483485 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.918838337 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.935039403 seconds)
  done (took 36.419137247 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.91866016 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.9200856 seconds)
  done (took 5.690107383 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.917906687 seconds)
    (2/7) benchmarking "second"...
    done (took 1.921902975 seconds)
    (3/7) benchmarking "month"...
    done (took 1.919162115 seconds)
    (4/7) benchmarking "year"...
    done (took 1.919485896 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.921159877 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.918847412 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.917939589 seconds)
  done (took 15.287400622 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.920560078 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 2.067216254 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.109827399 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.390805326 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.922936587 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.921279787 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.517230371 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.924695645 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.924264734 seconds)
  done (took 20.549724211 seconds)
done (took 115.874527998 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 5.777826186 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.981582354 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.56669628 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 7.026662386 seconds)
  (5/8) benchmarking "pisum"...
  done (took 7.00226817 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.272589726 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.943781546 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.523677231 seconds)
done (took 44.944047933 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 7.014317658 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 6.920126382 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 6.959264119 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 6.963360241 seconds)
  done (took 22.70420001 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.929786125 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.566532172 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.956010615 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 4.024492645 seconds)
  done (took 23.431026157 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.417616848 seconds)
    (2/2) benchmarking "read"...
    done (took 2.440264067 seconds)
  done (took 6.722539143 seconds)
done (took 61.728094456 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.922053679 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.919082186 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.920345665 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.925625506 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.923971866 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.923449095 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.922486037 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.922704266 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.923575643 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.91987045 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.920578796 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.92284239 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.920711784 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.921489606 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.921307658 seconds)
    (16/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.920722488 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.922025814 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.920225941 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.919898963 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.923310373 seconds)
    (21/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.921990519 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.92039494 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.920948338 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.921813396 seconds)
  done (took 47.975398838 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.922271608 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.924632008 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.921052398 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.921641587 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.924518991 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.922268265 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.922701738 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.921313394 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.920857532 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.923256177 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.923493801 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.925989596 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.921417327 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.923361927 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.922391756 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.922381876 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.924159051 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.922572972 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.922979687 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.921691747 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.922127742 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.922278977 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.922291172 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.921123863 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.921354739 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.922581248 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.923687638 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.924765189 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.92233992 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.923735058 seconds)
  done (took 59.537529099 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.923006036 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.922158837 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.925243688 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.931943308 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.922757869 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 1.923299955 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 1.925216209 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.923994961 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.922498144 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 1.92270974 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.925541236 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 1.92820897 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.92426876 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 1.924072382 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.924026485 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.92420211 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.924172782 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.925886038 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.924504003 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.927445378 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.924569207 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 1.923538662 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.923599219 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.923266436 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 1.927364851 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 1.924165818 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 1.925253087 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 1.924878987 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 1.924131417 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 1.925711569 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 1.922830101 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 1.922737388 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.927154378 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 1.928049553 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.940447996 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.926329914 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 1.9260794 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 1.930494529 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 1.936380125 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 1.92739516 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.926658289 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.926214279 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 1.926502906 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.926410598 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.924532156 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 1.926685501 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 1.92653207 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 1.925931402 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.926821117 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 1.924591546 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.928240458 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 1.925882242 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.925777702 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 1.925571091 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 1.927376293 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 1.924804033 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 1.925824894 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.924408176 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 1.925695312 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 1.925214625 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.924379084 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.926110569 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 1.925523277 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.926605664 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.927604276 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 1.92618039 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.927371828 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.930233855 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.927287978 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.929370345 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 1.924809602 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.926601392 seconds)
  done (took 140.528457864 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.929894768 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.929379193 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.928086922 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.925397325 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.927778023 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.927161124 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.926994938 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.926880923 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.92980118 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.928037307 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.92912851 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.929788262 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.92836922 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.927393258 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.92554825 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.926095378 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.929638325 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.926503894 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.928020983 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.926308904 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.927646211 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.926601108 seconds)
  done (took 44.272009083 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.926523988 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.926770026 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.928288988 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.92789298 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.927888927 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.929271031 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.932932447 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.928600052 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.929488151 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.92945215 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.93080843 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.929352272 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.930163351 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.927112556 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.931698194 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.927585258 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.928084605 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.93296122 seconds)
  done (took 36.584147477 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.928747319 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.927983547 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.92823521 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.929850416 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.928845192 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.928903665 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.927323665 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.927917291 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.929913289 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.929068305 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.932151627 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.928498842 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.931864551 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.929977397 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.93017694 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.929715652 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.929753781 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.929087868 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.929484433 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.931272524 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.929472564 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.931103226 seconds)
  done (took 44.309197251 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.932043097 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.929714437 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.929980944 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.945626314 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.930532166 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.931005973 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.929569541 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.929226201 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.930301821 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.929644702 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.929556967 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.928944108 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.929407002 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.933308746 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.929276861 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.930742651 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.93225833 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.931608132 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.931067383 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.930673199 seconds)
  done (took 40.487876656 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.932195352 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.932205549 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.93228929 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.931436435 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.930230407 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.932265019 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.930727896 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.932344717 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.934681674 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.934416137 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.935452852 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.934349432 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.953094842 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.932878953 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.933836257 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.934726993 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.933009173 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.931369932 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.933291469 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.9301508 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.932467718 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.932950978 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.932233774 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.934084113 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.931983525 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.933550049 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.934206741 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.933768583 seconds)
  done (took 56.004145298 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.93004263 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.930380414 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.931799961 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.931422814 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.932725002 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.930474701 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.932890531 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.93211658 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.931750051 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.933203783 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.934140651 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.93402824 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.932854118 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.932347874 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.933342087 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.934275315 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.933333708 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.933577214 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.934366195 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.932850635 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.932411467 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.932003363 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.933287384 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.933044976 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.932463571 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.93339215 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.93267137 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.932322655 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.932737879 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.933708438 seconds)
  done (took 59.844550282 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.953663402 seconds)
    (2/2) benchmarking "in"...
    done (took 1.957266956 seconds)
  done (took 5.776418283 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.932712936 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.933205765 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.934379151 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.937781256 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.934014879 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.933174744 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.934460799 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.935020683 seconds)
  done (took 17.34005187 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 1.934118988 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 1.937321784 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 1.934376129 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.93572679 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.936545606 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.944310236 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.938186307 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.93751013 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.939483102 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.937034361 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 1.943164941 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.959770315 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 1.944808182 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.941037455 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 1.935194422 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.936506312 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.938707121 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.938779883 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.939398577 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.934506676 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.939414648 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.934979341 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.935234312 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.938539798 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.936562223 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.938301095 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.948933987 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.939919765 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.938518667 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.938843986 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 1.947285812 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.93708597 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.934937498 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.938126895 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.935762323 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 1.935041471 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.945361963 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 1.938281392 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 1.937063766 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.93737558 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.940666883 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.938188693 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.940546167 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 1.944851171 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.940513449 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.938291937 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.937997613 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 1.938053717 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.935804836 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.944037668 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.947916736 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.939449659 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.93688169 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 1.93838267 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.94079038 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.938694082 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 1.937763337 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.941112823 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.946628496 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.944982554 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.943886618 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.962717123 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.948735237 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 1.937851164 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.936913952 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.951635157 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 1.96714638 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.943374645 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.942985079 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 1.938374168 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.945689811 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.939076237 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.940005026 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.936503072 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.953968374 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.948406597 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 1.941073475 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 1.937903844 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.938135925 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 1.93826663 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.941198805 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 1.93965619 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.940274096 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 1.939037767 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.949890951 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.98452552 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 1.939082887 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.940066438 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 1.942303901 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.943254218 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.948007662 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 1.942364719 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.942038298 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.937950068 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.940211229 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.945491395 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 1.940890411 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.94401561 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.940700353 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 1.948393004 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.937183324 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.939011246 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.945218609 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 1.951885469 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.938456625 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 1.941946988 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.941333104 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 1.939307468 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.949286548 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 1.945971008 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 1.944596427 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.940086662 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.940322666 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 1.94527342 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.939008983 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.945786511 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 1.950288879 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.948789087 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.944298159 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 1.947366407 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.947199955 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 1.944638932 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.954223739 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 1.971095195 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.940544118 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 1.945900653 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.948609728 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 1.957990448 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.947558066 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.941383798 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.945928351 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.94201094 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 1.941376525 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 1.945310311 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.944387167 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 1.941057712 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.940298071 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 1.943775539 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 1.939892201 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 1.945886917 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.945004521 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.947781408 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.945101833 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 1.941916008 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.946392014 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.944811459 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.945068762 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.952258074 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.941905812 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 1.942870428 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 1.941602 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.946016281 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.945855469 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.943022149 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.941415679 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 1.944136414 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.943466643 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.944632946 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.946333297 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.944259345 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.947835208 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.945811589 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 1.949406837 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.944254237 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 1.945176929 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.94391693 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.94205404 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.942802048 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.945288444 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.946780224 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 1.947736993 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.943061171 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.949502916 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.942415905 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.94094038 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 1.943349892 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.941902723 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.943025935 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.967444565 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 1.959254348 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.949026648 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.956072521 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 1.944653047 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.951429964 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.94446686 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.947464413 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.94703997 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 1.945124428 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 1.94471118 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.942463415 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 1.943733768 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.949999775 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.970847034 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 1.960051293 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.946436086 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.946956634 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.953270637 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.948309513 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.950910205 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 1.94640543 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.947196494 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 1.949106236 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.944951415 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 1.94528443 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.943023977 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.948076671 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.943759933 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.942866707 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 1.950512863 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.945944544 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.943504905 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.947099896 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 1.945762385 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 1.9486107 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.944622745 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.946353651 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.946510942 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.944919151 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.955188724 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.948021212 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.944893729 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.946617039 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.950065281 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 1.945292386 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 1.946631972 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.947436091 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 1.950155514 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.945965907 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.947231739 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.953607977 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.946510696 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.946454163 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.946628646 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.944683378 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 1.94976163 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 1.944992405 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.951939034 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 1.955392845 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 1.949141488 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.945546798 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 1.954574214 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.950445662 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 1.950972611 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.952902099 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.947796042 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 1.952075139 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 1.948400765 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 1.948794328 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 1.948545417 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.954633225 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.946509592 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.949476597 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.947475827 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.952665763 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.94926673 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 1.950428431 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.949333636 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.95495648 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.958001006 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.95331438 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.946958999 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.95049915 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 1.949675722 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.948490987 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.951880614 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.95115213 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.963965982 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.961536908 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 1.948370432 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 1.949549282 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.948322012 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.952091156 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.947694265 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.949636765 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.961687604 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.951069095 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.950876326 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 1.952718728 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 1.948253401 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 1.947929362 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.956897562 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.951269995 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 1.952637478 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.953998971 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.953467236 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.95113523 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.948154667 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.951672066 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 1.950601905 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.953666845 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.954140185 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.949490132 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.949594646 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 1.950433704 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 1.957768991 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.949774392 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.951334137 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.957178419 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.952155988 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.962719078 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.95287359 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 1.952785544 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.950810279 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.95396581 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.951046524 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.952762934 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.952638794 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.955364107 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.962321438 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.955830465 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.959737657 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.953856166 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.962545523 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 1.950397866 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 1.951394746 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.952083249 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.956977183 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.962751849 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.955667531 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.950060223 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.960973427 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 2.010936391 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.989224043 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.998725629 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.990841021 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.972596167 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.986854663 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.974739488 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.998516198 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 1.992475284 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.991725369 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 1.972273149 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.961732868 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.989713435 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 2.008181221 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.982269915 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.98969505 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.956118386 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.951686178 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.953180314 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 1.951968598 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 1.952089721 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 1.952665046 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.949302783 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.954420636 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.961387975 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 1.953595567 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.955379674 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.957391135 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.955324995 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.962030947 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 1.95386307 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.956377252 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.956632541 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 1.952671566 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.956069709 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.953024236 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.95372056 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.952954932 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.952661413 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.955604779 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 1.966246428 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 1.963431902 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.956946938 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.956914558 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.953535568 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.956162957 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.967770396 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 1.986516891 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.955540053 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.95685752 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.957275563 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 1.961832608 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.955554524 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.962178783 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.962826498 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.965228475 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.958984594 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.953592036 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.958164636 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.971733178 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.95561574 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 1.95444566 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.953085236 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.960531925 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.958363601 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.952806461 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.955028493 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.95772362 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.956343269 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.969740281 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 1.954452064 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.957588121 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.95536185 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.954787976 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 1.957358388 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 1.957476547 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.961430058 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.959177313 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 1.955823691 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.955656043 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.959810567 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.962387199 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.95530936 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.959419723 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.970659898 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.956053843 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.957849909 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.988303142 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.959274153 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.959771304 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.956889486 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.954993735 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.960713631 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.956763519 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.960517454 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.96191004 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.968611349 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.959812382 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.953775015 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.955189137 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 1.960385051 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.956509197 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 1.958801241 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.959231512 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.96612029 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.964157522 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.974280343 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.969377657 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.955807263 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.957580777 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.96929722 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 1.966043499 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 1.957013822 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.95700171 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.956932415 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.962165744 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.960470618 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.958743709 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.960731793 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.959173269 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.966264588 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 1.956302036 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.957237091 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 1.959150858 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 1.95827918 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.96124447 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.962616285 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.96681182 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.960026783 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.959411431 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.959129867 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.9603027 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.957228798 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.963048535 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.959794538 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 1.958823189 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 1.960815695 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.965364054 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 1.961571188 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.957287658 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 1.959268626 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.96307097 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 1.958072589 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.959711567 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.957903136 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.960081961 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 1.959067284 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.963630823 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.969921483 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.95910553 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.964522717 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.95925085 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 1.963789861 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 1.960311883 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 1.960124337 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.959006222 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.960853271 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.967704617 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.9596837 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 1.959897925 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.958996608 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 1.97671834 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 1.96457559 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.961919391 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.967438945 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.959936132 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.959630238 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.960358574 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.965578033 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.973118182 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 1.963776705 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.966620079 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.968573573 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.964152353 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 1.961855465 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 1.959269986 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.959243374 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.962232504 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.962521285 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.965274705 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.962065627 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.965708945 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 1.959989595 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.964627662 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 1.964564356 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 1.963741271 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.961337382 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.959141571 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.965894407 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.975359956 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 1.968466464 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.961390938 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 1.965518795 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 1.96080997 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.967133723 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.974248974 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.962381833 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 1.96135753 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.962716039 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.962654566 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.964888064 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.971768561 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.973024681 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.96733054 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 1.964488633 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.96693911 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.985046126 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 1.964872184 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.974857359 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 2.003529615 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.962113812 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.961727199 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.965696671 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.963829543 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 1.963086805 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.96589011 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 1.967668466 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 1.97092179 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.960884705 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.961898789 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.971047302 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 1.961049424 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 1.963280714 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.964549787 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.964419604 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 1.969985698 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 1.960911596 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 1.969990839 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 1.962706269 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 1.961813563 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.96387397 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.965548549 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.960743579 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.963662273 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.961424305 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.966098591 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.96076996 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.963395165 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 1.973014075 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 1.964728588 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.967271712 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.977269932 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.978713951 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 1.966115571 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.962664133 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.981794366 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.970593379 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 1.968706789 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.962234822 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.968203638 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.973764116 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.967770387 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.972675226 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.965234132 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.963352432 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.96546962 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.961996006 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.962763155 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.980356087 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 1.977574686 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.966065981 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.966235501 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.971576066 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.963524419 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 1.971945008 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.973462498 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.965279318 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 1.967054995 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.96723919 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.963997901 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.963878524 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 1.965025652 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.968177688 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.97408015 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 1.964127336 seconds)
  done (took 1166.844721617 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.963656853 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.962495535 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.965402444 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.967226224 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.96796419 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.966215116 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.964382676 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.964661882 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.963361334 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.965812661 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.965486395 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.963389895 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.964783217 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.963981834 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.965097001 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.965714061 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.964862155 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.965411404 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.964887279 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.966303286 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.965108042 seconds)
  done (took 43.161961985 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.965540777 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.966378165 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.965292288 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.968736448 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.964106504 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.964975099 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.964224577 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.966812196 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.9672 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.964692604 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.96619062 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.966100964 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.965524985 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.967269005 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.96593625 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.96561517 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.966336488 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.966713122 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.967931198 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.964965451 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.970649099 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.968956752 seconds)
  done (took 45.15471074 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.968207329 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.9668828 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.966905769 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.965835013 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 1.965727436 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.966980346 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 1.965120347 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 1.9681336 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 1.969331839 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 1.970250297 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.97778583 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 1.975382163 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 1.964735668 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 1.97047389 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 1.965738321 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 1.96950174 seconds)
    (17/49) benchmarking "13786"...
    done (took 2.102981364 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 1.969165858 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.96934511 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 1.965385864 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 1.966992248 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.974504121 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.966109917 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.966753976 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.96774476 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.965472975 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 1.968141003 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 1.965955364 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 1.966747612 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.972823428 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.97196587 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.967312753 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.970696352 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.973040333 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.968147969 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.971965804 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 1.973076514 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.967295783 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.967454099 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.968061664 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.979966077 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 1.998183036 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 1.966829985 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.970326296 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.977227538 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 1.966959484 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 1.970293617 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.975806665 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.979973924 seconds)
  done (took 98.569258651 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.966731712 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.97183893 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.966596071 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.968964859 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.971892172 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.970988125 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.969736967 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.967235872 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.96783401 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.970626866 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.968679351 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.969959814 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.968086775 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.9669445 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.968228521 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.967096486 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.969245523 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.967619578 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.969959571 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.971997536 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.970394044 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.970903185 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.968041973 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.969380895 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.972307988 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.967241293 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.96809722 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.969394497 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.970130296 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.97324789 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.96870262 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.969349012 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.969573532 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.969615847 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.968967074 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.969961479 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.970331511 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.969481908 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.967433889 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.969217178 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.972722032 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.97233012 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.97290559 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.971454669 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.970716257 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.970121538 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.968659671 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.969533181 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.969308732 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.969251905 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.969782812 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.96976017 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.970648237 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.971086274 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.970454227 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.969563808 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.969330583 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.972175447 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.971109388 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.973619441 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.971339472 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.971107358 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.971834864 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.97042709 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.970776372 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.971256199 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.970630096 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.972569018 seconds)
  done (took 135.856627938 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.970015806 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.973012033 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.974213626 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.974406343 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.973668704 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.971611165 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.973517579 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.972028869 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.9747831 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.972243752 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.972089876 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.975115966 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.972555069 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.972214297 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.972580714 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.972610152 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.975517084 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.972637894 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.97573987 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.974092903 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.97425385 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.975782775 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.972774142 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.975763357 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.973973922 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.973386361 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.975240835 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.974254713 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.976231978 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.976222861 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.974595079 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.975395692 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.977107973 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.975867108 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.974388574 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.976954397 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.973770202 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.974497074 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.973710505 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.976673275 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.977401317 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.975068251 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.97572486 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.974019313 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.97341698 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.973539556 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.977458369 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.973453589 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.972194942 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.976033204 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.975594585 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.977113313 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.976470616 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.974579397 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.977083332 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.974354328 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.975751246 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.974712038 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.973938464 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.977148796 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.9756276 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.974629974 seconds)
  done (took 124.322639103 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.974172295 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.975591431 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.974128132 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.975161117 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.974240277 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.975578093 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.97542827 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.973450807 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.974634438 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.974554662 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.9730007 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.97476099 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.975946415 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.973983583 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.9756924 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.97601319 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.977590662 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.974556389 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.975252558 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.977457096 seconds)
  done (took 41.405534573 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.975394679 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.976705367 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.973565312 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.976789365 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.974454008 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.976739067 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.975282163 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.974637217 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.975529499 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.975424879 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.974928737 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.975425496 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.975492576 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.977323695 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.976053905 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.975713409 seconds)
  done (took 33.514706429 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.978447504 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.977956661 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.978356139 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.979107849 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.977133864 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.976189981 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.976560357 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.975481035 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.975110675 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.977073789 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.976768869 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.977067857 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.976862723 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.978493048 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.978431097 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.978773177 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.979381126 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.980715281 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.976024582 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.979494955 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.979802222 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.977988923 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.976306826 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.977102723 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.977566432 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.977835121 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.976657912 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.977042758 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.977995797 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.979314062 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.975741275 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.979131166 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.978322968 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.976524063 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.979034046 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.977619588 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.976896292 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.978519837 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.976220381 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.977861899 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.977625735 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.98116212 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.981674927 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.978047804 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.978870829 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.978881505 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.979337448 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.98046618 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.977030129 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.980906739 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.977431105 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.978400015 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.977850136 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.979837957 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.979410275 seconds)
  done (took 110.700848231 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.977674651 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.979550115 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.978511402 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.979551305 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.978145082 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.977713774 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.980749904 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.978573208 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.97978616 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.980040577 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.981402221 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.980825771 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.978656583 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.979665842 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.980063908 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.978570362 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.980425261 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.978770201 seconds)
  done (took 37.54093997 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.994094583 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.977700557 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.980785216 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.981209867 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.979838148 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.980155973 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.983643555 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.982355312 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.979082958 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.980248159 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.98213864 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.979301363 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.980312488 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.980527979 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.980372448 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.979859323 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.978553216 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.980975609 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.979071967 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.978533851 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.980622549 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.979853664 seconds)
  done (took 45.487928842 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.980554985 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.979420844 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.999422736 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 2.008580804 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 2.008333433 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 2.026108454 seconds)
  done (took 13.914868246 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.981955504 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.980570379 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.980233319 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.981194838 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.980491894 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.982440829 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.981379577 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.98233553 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.980816282 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.981902328 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.982166023 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.981654557 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.981876329 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.985100292 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.980504094 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.982373313 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.982931253 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.982966026 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.983222603 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.983221154 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.982967818 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.983600287 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.983160478 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.983015962 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.981374016 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.982565492 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.981782664 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.982440627 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.982422963 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.981562593 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.982983409 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.982946107 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.981584808 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.98378683 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.982144111 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.983670431 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.984151556 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.984535986 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.983503122 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.984523887 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.983489543 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.982284724 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.983439529 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.982731611 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.982485806 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.983616392 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.981611652 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.981752067 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.984397525 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.981712551 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.984564636 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.984084217 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.982185576 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.985393828 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.983526005 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.984966516 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.987523269 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.983537496 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.985445293 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.983068954 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.985395367 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.983838646 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.986628061 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.986006218 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.984281332 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.985239245 seconds)
  done (took 132.794437341 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.983453336 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.983661768 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.984118913 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.988093328 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.985723985 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.984889121 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.985332851 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.984005769 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.987412859 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.985318988 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.984575055 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.98632785 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.985812513 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.98618332 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.984525386 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.984842817 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.98573164 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.985381517 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.986105624 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.984493797 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.985790585 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.986078697 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.984654121 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.987797306 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.988139952 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.988483625 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.987325231 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.99263427 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 2.002490554 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.987626644 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.985381726 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.98589249 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.985434707 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.986597692 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.986952058 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.991054442 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.986304826 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.985527302 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.987864577 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.986191251 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.985779422 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.985904862 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.984617995 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.987457924 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.988399584 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.985383792 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.987272532 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.987723673 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.987349345 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.988482939 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.988589099 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.988636335 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.988647729 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.986641919 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.987811278 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.986792257 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.988444586 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.987731377 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.987058185 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.988088304 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.987032387 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.987186601 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.987866081 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.988289833 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.988211192 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.989430424 seconds)
  done (took 133.055882335 seconds)
done (took 2716.841161248 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 7.06311248 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 7.166941689 seconds)
  done (took 16.148640387 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.124648111 seconds)
    (2/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 7.026447515 seconds)
    (3/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.139997515 seconds)
    (4/16) benchmarking ("adjoint!", (600, 400))...
    done (took 2.085590342 seconds)
    (5/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 7.001525123 seconds)
    (6/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 7.039865313 seconds)
    (7/16) benchmarking ("transpose", (600, 600))...
    done (took 2.002332042 seconds)
    (8/16) benchmarking ("transpose", (600, 400))...
    done (took 1.991710467 seconds)
    (9/16) benchmarking ("transpose!", (600, 400))...
    done (took 2.076041663 seconds)
    (10/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.992076424 seconds)
    (11/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 7.00228409 seconds)
    (12/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.996038211 seconds)
    (13/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.991548855 seconds)
    (14/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.992049513 seconds)
    (15/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.990999034 seconds)
    (16/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.995487887 seconds)
  done (took 54.378045478 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.997985023 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.997556064 seconds)
    (3/18) benchmarking ("IJV", 10)...
    done (took 1.9943778 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.992790223 seconds)
    (5/18) benchmarking ("Bidiagonal", 100)...
    done (took 2.018210566 seconds)
    (6/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.09583976 seconds)
    (7/18) benchmarking ("IJV", 100)...
    done (took 2.020454596 seconds)
    (8/18) benchmarking ("Bidiagonal", 10)...
    done (took 2.000450873 seconds)
    (9/18) benchmarking ("Tridiagonal", 100)...
    done (took 2.019068939 seconds)
    (10/18) benchmarking ("IV", 1000)...
    done (took 2.043684405 seconds)
    (11/18) benchmarking ("SymTridiagonal", 100)...
    done (took 2.021411587 seconds)
    (12/18) benchmarking ("Diagonal", 10)...
    done (took 2.007126786 seconds)
    (13/18) benchmarking ("Diagonal", 100)...
    done (took 2.009595671 seconds)
    (14/18) benchmarking ("SymTridiagonal", 10)...
    done (took 2.00456102 seconds)
    (15/18) benchmarking ("IJV", 1000)...
    done (took 2.102007138 seconds)
    (16/18) benchmarking ("Diagonal", 1000)...
    done (took 2.056852641 seconds)
    (17/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.069736363 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.091804804 seconds)
  done (took 38.4615938 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 2.098161639 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 7.005502063 seconds)
  done (took 11.032109374 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.992932753 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 7.020751414 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 7.00016045 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 7.011674207 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 7.006615843 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 7.027847551 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.99886277 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 7.035182378 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 7.026937225 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 7.015252064 seconds)
  done (took 72.086734134 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.998772278 seconds)
    (2/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.996291889 seconds)
    (3/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.364841306 seconds)
    (4/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 2.006114256 seconds)
    (5/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 2.004747391 seconds)
    (6/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 2.026370709 seconds)
    (7/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.995505425 seconds)
    (8/54) benchmarking ("spmat", "range", 100)...
    done (took 2.031822245 seconds)
    (9/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.996800695 seconds)
    (10/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.992920941 seconds)
    (11/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 2.006811378 seconds)
    (12/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.372999119 seconds)
    (13/54) benchmarking ("spmat", "logical", 10)...
    done (took 2.011056252 seconds)
    (14/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.996046969 seconds)
    (15/54) benchmarking ("spmat", "array", 100)...
    done (took 2.426624024 seconds)
    (16/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 2.01424424 seconds)
    (17/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 2.001546267 seconds)
    (18/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 2.032688996 seconds)
    (19/54) benchmarking ("spvec", "logical", 1000)...
    done (took 2.038186873 seconds)
    (20/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 2.001228312 seconds)
    (21/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 2.002268445 seconds)
    (22/54) benchmarking ("spmat", "range", 10)...
    done (took 2.000277243 seconds)
    (23/54) benchmarking ("spmat", "splogical", 100)...
    done (took 2.241125987 seconds)
    (24/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.736510121 seconds)
    (25/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.998330108 seconds)
    (26/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 2.005537352 seconds)
    (27/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 2.002337983 seconds)
    (28/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.990592311 seconds)
    (29/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.991223406 seconds)
    (30/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.995258957 seconds)
    (31/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.997906593 seconds)
    (32/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.996331741 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 2.021837494 seconds)
    (34/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.995306624 seconds)
    (35/54) benchmarking ("spvec", "range", 10000)...
    done (took 2.01401245 seconds)
    (36/54) benchmarking ("spmat", "splogical", 10)...
    done (took 2.002903656 seconds)
    (37/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.633761596 seconds)
    (38/54) benchmarking ("spmat", "array", 10)...
    done (took 2.019324794 seconds)
    (39/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 2.004343572 seconds)
    (40/54) benchmarking ("spmat", "logical", 100)...
    done (took 2.090154107 seconds)
    (41/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 2.059143796 seconds)
    (42/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 2.005095629 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.993820826 seconds)
    (44/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 2.002002841 seconds)
    (45/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.992354567 seconds)
    (46/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 2.001525148 seconds)
    (47/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.728378753 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 2.077781858 seconds)
    (49/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.998570633 seconds)
    (50/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 2.158483346 seconds)
    (51/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.58983224 seconds)
    (52/54) benchmarking ("spvec", "range", 100000)...
    done (took 2.018886012 seconds)
    (53/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 2.132827455 seconds)
    (54/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 2.146166481 seconds)
  done (took 140.890106993 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.992174045 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.453683822 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.165678808 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.994998188 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.359569945 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.208792325 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 5.777175006 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.03962484 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.996406596 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.199416923 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.157550901 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.126151377 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.997658876 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.996700728 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.997082991 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.995155892 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.166874017 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.063414264 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.997554957 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.99539451 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.017483192 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.231229301 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.113383568 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.996413381 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 2.015391271 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.208588617 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.044195994 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.122593038 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.401869579 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.993050738 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.060136649 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.997961916 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.995068235 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.996934376 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.040624303 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.106403077 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.091605846 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.995693907 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.631923796 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.996748255 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.621039063 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.196355891 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.109549685 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.130252212 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.141779966 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.206838116 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.693151964 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.999495322 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.738263012 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.160875415 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.213757876 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.205106572 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.089583667 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.997494806 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.424792072 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.998062854 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.99670566 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.254952959 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.14339292 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.113206323 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.997252575 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.997296178 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.999226779 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.228724832 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.997883044 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.10478233 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 7.000347728 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 7.000137756 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.107902844 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.11613055 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.14384947 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.217853131 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.029776789 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.960156905 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.292084737 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.205861825 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.06146132 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.251403858 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 7.000117265 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.999440728 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.096277501 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.462067785 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.147744893 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.235972103 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.302968989 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.035623136 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.519288253 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.998299504 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.216658351 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.147820246 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.305969237 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.141150864 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.052529383 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.855971836 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.997755269 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 7.00087005 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 3.846528626 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.11899011 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 7.001195913 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.547961402 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.238109023 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.75301702 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.017209646 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.471667091 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.104398834 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 7.003563127 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.627317683 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.999518109 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.21636975 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.041285958 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.998401947 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 7.000360316 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.150328447 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.917527309 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 7.001008127 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.308479187 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 2.059551071 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 7.001714522 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.159784992 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 7.007305849 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.255769555 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.735890597 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.234996215 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 7.002034104 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.035198992 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.177521043 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.142126793 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 7.003777785 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.326903203 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.238973375 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.094999928 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.308125122 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 7.001985679 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 7.00198901 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.289231642 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 7.012760622 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 7.000392957 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.166122531 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 5.977828299 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.159977229 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 7.002543118 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.347084917 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.021927065 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.054130242 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 7.002217911 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.23616247 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.03577078 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.052832622 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 7.003917121 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.137931728 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 7.002347537 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.962360159 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.163029801 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.999536934 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 7.023751684 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.997378193 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 7.004239614 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.152158143 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.23001264 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.01809578 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.069287129 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.394410042 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.999776298 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.110119948 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.026271688 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.441184261 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 5.549139826 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.161751785 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 7.00275257 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 7.002957227 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 7.003245161 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.232146042 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.271798884 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 7.004139603 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 7.003538496 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.759864453 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 5.453655775 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 7.003832898 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.185337516 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.82025145 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 5.362373834 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.220692369 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 7.00953019 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.054965456 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 7.006464773 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 4.27590654 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.544089361 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.31737755 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 7.020871549 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 7.004391704 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 7.004609401 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 7.003819632 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.209241145 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.036136602 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.749639236 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.142992778 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.267832803 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.243178606 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.31273272 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.065496199 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 7.008882052 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.252091962 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 7.006902395 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 2.066748702 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 7.003976853 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.01813563 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.241937741 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 7.006179135 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.306075946 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.358488972 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 3.192740534 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.050074265 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 7.005247287 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 7.007280469 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 7.006756459 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.169229351 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.104871396 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 7.006263844 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.134317189 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.048367952 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.120174114 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.223487067 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 5.274001621 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.963457886 seconds)
  done (took 917.464506192 seconds)
done (took 1252.377537027 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 7.003064164 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 7.005633148 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 7.006090624 seconds)
    (4/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 7.003350202 seconds)
  done (took 29.949733551 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("array", 5)...
    done (took 2.003250707 seconds)
    (2/6) benchmarking ("array", 3)...
    done (took 2.003728926 seconds)
    (3/6) benchmarking ("tuple", 5)...
    done (took 2.005807544 seconds)
    (4/6) benchmarking ("tuple", 10)...
    done (took 2.005655808 seconds)
    (5/6) benchmarking ("array", 10)...
    done (took 2.004368615 seconds)
    (6/6) benchmarking ("tuple", 3)...
    done (took 2.005999389 seconds)
  done (took 13.970298656 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 7.00229745 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 7.005146428 seconds)
    (3/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 7.008121425 seconds)
  done (took 22.948650805 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((10000000,), 2)...
    done (took 2.446566042 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.295929071 seconds)
    (3/4) benchmarking ((1000, 1000), 1)...
    done (took 2.10304242 seconds)
    (4/4) benchmarking ((1000, 1000), 2)...
    done (took 2.172139827 seconds)
  done (took 10.963165737 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (10, "tup_tup")...
    done (took 2.010329536 seconds)
    (2/9) benchmarking (3, "scal_tup_x3")...
    done (took 2.005379262 seconds)
    (3/9) benchmarking (3, "scal_tup")...
    done (took 2.006654512 seconds)
    (4/9) benchmarking (5, "scal_tup_x3")...
    done (took 2.008612137 seconds)
    (5/9) benchmarking (5, "scal_tup")...
    done (took 2.00493865 seconds)
    (6/9) benchmarking (3, "tup_tup")...
    done (took 2.005467281 seconds)
    (7/9) benchmarking (10, "scal_tup_x3")...
    done (took 2.007162633 seconds)
    (8/9) benchmarking (5, "tup_tup")...
    done (took 2.005805399 seconds)
    (9/9) benchmarking (10, "scal_tup")...
    done (took 2.006309331 seconds)
  done (took 20.004728347 seconds)
  (6/6) benchmarking "26942"...
  done (took 6.831010564 seconds)
done (took 106.605586104 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/341) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.388129817 seconds)
    (2/341) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.378482036 seconds)
    (3/341) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 7.012773558 seconds)
    (4/341) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 7.257051522 seconds)
    (5/341) benchmarking ("collect", "filter", Bool, true)...
    done (took 3.276684183 seconds)
    (6/341) benchmarking ("perf_sum4", Int8, false)...
    done (took 2.027063613 seconds)
    (7/341) benchmarking ("perf_sum3", Float64, false)...
    done (took 2.154460261 seconds)
    (8/341) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 7.06825118 seconds)
    (9/341) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.405780652 seconds)
    (10/341) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.243177274 seconds)
    (11/341) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.270106024 seconds)
    (12/341) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 2.45001022 seconds)
    (13/341) benchmarking ("collect", "filter", Float32, false)...
    done (took 2.88274026 seconds)
    (14/341) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.5440397 seconds)
    (15/341) benchmarking ("perf_sum2", Int8, true)...
    done (took 2.011362775 seconds)
    (16/341) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.321482045 seconds)
    (17/341) benchmarking ("perf_sum", Bool, true)...
    done (took 2.031095038 seconds)
    (18/341) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 7.00422323 seconds)
    (19/341) benchmarking ("perf_sum", Float64, false)...
    done (took 2.159602263 seconds)
    (20/341) benchmarking ("collect", "all", BigFloat, true)...
    done (took 2.544413237 seconds)
    (21/341) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.31492876 seconds)
    (22/341) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.031683188 seconds)
    (23/341) benchmarking ("map", abs, BigInt, false)...
    done (took 7.006806419 seconds)
    (24/341) benchmarking ("perf_sum2", Int64, false)...
    done (took 2.949263787 seconds)
    (25/341) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 8.967427396 seconds)
    (26/341) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 2.412331172 seconds)
    (27/341) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 7.005304276 seconds)
    (28/341) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 7.134168711 seconds)
    (29/341) benchmarking ("perf_countnothing", Float32, false)...
    done (took 2.022912226 seconds)
    (30/341) benchmarking ("perf_countnothing", Int64, true)...
    done (took 2.022367536 seconds)
    (31/341) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.005866854 seconds)
    (32/341) benchmarking ("map", *, Float32, (false, true))...
    done (took 3.885592701 seconds)
    (33/341) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 2.082004231 seconds)
    (34/341) benchmarking ("sort", BigInt, false)...
    done (took 7.006034089 seconds)
    (35/341) benchmarking ("collect", "all", Int64, false)...
    done (took 2.219841385 seconds)
    (36/341) benchmarking ("perf_sum2", Float64, true)...
    done (took 2.161979797 seconds)
    (37/341) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 2.7050391 seconds)
    (38/341) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.535008438 seconds)
    (39/341) benchmarking ("perf_sum", Int8, false)...
    done (took 2.014363613 seconds)
    (40/341) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 2.119160533 seconds)
    (41/341) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.323442268 seconds)
    (42/341) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 7.014680888 seconds)
    (43/341) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.22497617 seconds)
    (44/341) benchmarking ("map", identity, Float64, false)...
    done (took 2.151253823 seconds)
    (45/341) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.009082453 seconds)
    (46/341) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 5.136593451 seconds)
    (47/341) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 2.533367024 seconds)
    (48/341) benchmarking ("collect", "filter", Float64, true)...
    done (took 3.623735045 seconds)
    (49/341) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.428837182 seconds)
    (50/341) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.127047298 seconds)
    (51/341) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.419341799 seconds)
    (52/341) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.960334748 seconds)
    (53/341) benchmarking ("perf_sum", Float64, true)...
    done (took 2.183569808 seconds)
    (54/341) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 2.982214417 seconds)
    (55/341) benchmarking ("perf_countequals", "Int8")...
    done (took 2.303085518 seconds)
    (56/341) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 7.010892088 seconds)
    (57/341) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 7.124100102 seconds)
    (58/341) benchmarking ("map", identity, ComplexF64, false)...
    done (took 2.377169764 seconds)
    (59/341) benchmarking ("map", identity, Int64, true)...
    done (took 2.360940484 seconds)
    (60/341) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.295032619 seconds)
    (61/341) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.409223712 seconds)
    (62/341) benchmarking ("collect", "filter", Bool, false)...
    done (took 2.785460389 seconds)
    (63/341) benchmarking ("collect", "all", Float64, true)...
    done (took 2.370984464 seconds)
    (64/341) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 2.027331529 seconds)
    (65/341) benchmarking ("perf_countnothing", Bool, true)...
    done (took 2.018800495 seconds)
    (66/341) benchmarking ("perf_sum4", BigInt, false)...
    done (took 7.006443517 seconds)
    (67/341) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 8.904569295 seconds)
    (68/341) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 2.055307117 seconds)
    (69/341) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.438588738 seconds)
    (70/341) benchmarking ("perf_sum3", Int8, false)...
    done (took 2.104720937 seconds)
    (71/341) benchmarking ("perf_countnothing", Int64, false)...
    done (took 2.029678383 seconds)
    (72/341) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 2.928492591 seconds)
    (73/341) benchmarking ("collect", "filter", Float64, false)...
    done (took 3.215255966 seconds)
    (74/341) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.176348652 seconds)
    (75/341) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 7.012747753 seconds)
    (76/341) benchmarking ("perf_sum4", Float32, false)...
    done (took 2.161551235 seconds)
    (77/341) benchmarking ("perf_countnothing", Float64, true)...
    done (took 2.020780499 seconds)
    (78/341) benchmarking ("map", *, BigInt, (false, false))...
    done (took 7.010630676 seconds)
    (79/341) benchmarking ("map", identity, ComplexF64, true)...
    done (took 4.428861674 seconds)
    (80/341) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.263937284 seconds)
    (81/341) benchmarking ("collect", "filter", Int8, true)...
    done (took 3.316707766 seconds)
    (82/341) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.466173414 seconds)
    (83/341) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.438398543 seconds)
    (84/341) benchmarking ("perf_sum4", Float64, false)...
    done (took 2.033462809 seconds)
    (85/341) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.224473606 seconds)
    (86/341) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.218480342 seconds)
    (87/341) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 2.045422712 seconds)
    (88/341) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.149429661 seconds)
    (89/341) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 7.013197502 seconds)
    (90/341) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.0820579 seconds)
    (91/341) benchmarking ("map", *, BigInt, (true, true))...
    done (took 8.042440945 seconds)
    (92/341) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.289004006 seconds)
    (93/341) benchmarking ("perf_sum2", BigInt, false)...
    done (took 8.910004658 seconds)
    (94/341) benchmarking ("map", abs, BigInt, true)...
    done (took 7.163913548 seconds)
    (95/341) benchmarking ("perf_countnothing", Bool, false)...
    done (took 3.831312691 seconds)
    (96/341) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 7.043378524 seconds)
    (97/341) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 3.982541437 seconds)
    (98/341) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 7.013840514 seconds)
    (99/341) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 7.02025559 seconds)
    (100/341) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.118304359 seconds)
    (101/341) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.409000196 seconds)
    (102/341) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.442983631 seconds)
    (103/341) benchmarking ("collect", "all", Int8, true)...
    done (took 2.183826868 seconds)
    (104/341) benchmarking ("collect", "all", Float32, false)...
    done (took 2.134754648 seconds)
    (105/341) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 2.841729274 seconds)
    (106/341) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.274611884 seconds)
    (107/341) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.281576962 seconds)
    (108/341) benchmarking ("perf_countequals", "Float32")...
    done (took 2.439558935 seconds)
    (109/341) benchmarking ("collect", "all", Int64, true)...
    done (took 2.361779564 seconds)
    (110/341) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.552536173 seconds)
    (111/341) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 2.480913019 seconds)
    (112/341) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.221061909 seconds)
    (113/341) benchmarking ("perf_sum2", Float32, false)...
    done (took 2.177310441 seconds)
    (114/341) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.543318683 seconds)
    (115/341) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.285785619 seconds)
    (116/341) benchmarking ("perf_countnothing", Float32, true)...
    done (took 2.056858348 seconds)
    (117/341) benchmarking ("collect", "filter", Int8, false)...
    done (took 2.75745224 seconds)
    (118/341) benchmarking ("perf_sum", BigInt, true)...
    done (took 8.982749186 seconds)
    (119/341) benchmarking ("map", identity, BigInt, true)...
    done (took 2.725917392 seconds)
    (120/341) benchmarking ("map", abs, Float32, false)...
    done (took 2.125059451 seconds)
    (121/341) benchmarking ("perf_sum", BigInt, false)...
    done (took 8.912166086 seconds)
    (122/341) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.166609853 seconds)
    (123/341) benchmarking ("perf_sum3", Int8, true)...
    done (took 4.277228028 seconds)
    (124/341) benchmarking ("perf_sum", Int64, false)...
    done (took 2.061648463 seconds)
    (125/341) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.493996451 seconds)
    (126/341) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 2.217698804 seconds)
    (127/341) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 3.206607458 seconds)
    (128/341) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.198466079 seconds)
    (129/341) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 2.152686661 seconds)
    (130/341) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 7.175289817 seconds)
    (131/341) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.532410701 seconds)
    (132/341) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 2.660340283 seconds)
    (133/341) benchmarking ("perf_sum3", Bool, false)...
    done (took 2.107312974 seconds)
    (134/341) benchmarking ("perf_countequals", "Int64")...
    done (took 2.332127583 seconds)
    (135/341) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.31691261 seconds)
    (136/341) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 7.021338064 seconds)
    (137/341) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 2.172313678 seconds)
    (138/341) benchmarking ("perf_countequals", "Bool")...
    done (took 2.328617519 seconds)
    (139/341) benchmarking ("sort", Bool, false)...
    done (took 2.234741932 seconds)
    (140/341) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 2.030499162 seconds)
    (141/341) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 7.012045403 seconds)
    (142/341) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 2.447351891 seconds)
    (143/341) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.370011254 seconds)
    (144/341) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 2.924581239 seconds)
    (145/341) benchmarking ("perf_sum", Int64, true)...
    done (took 2.035064646 seconds)
    (146/341) benchmarking ("perf_sum4", Bool, false)...
    done (took 2.032273355 seconds)
    (147/341) benchmarking ("map", identity, Bool, false)...
    done (took 2.148742285 seconds)
    (148/341) benchmarking ("sort", Int64, false)...
    done (took 6.737633881 seconds)
    (149/341) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.152774199 seconds)
    (150/341) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.150170339 seconds)
    (151/341) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 2.179273829 seconds)
    (152/341) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.213766968 seconds)
    (153/341) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.329626207 seconds)
    (154/341) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 2.974364099 seconds)
    (155/341) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 2.032310913 seconds)
    (156/341) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.388011386 seconds)
    (157/341) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.203759125 seconds)
    (158/341) benchmarking ("collect", "filter", Int64, false)...
    done (took 3.111983524 seconds)
    (159/341) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 7.025220741 seconds)
    (160/341) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 7.023295449 seconds)
    (161/341) benchmarking ("map", identity, BigInt, false)...
    done (took 2.449426955 seconds)
    (162/341) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.2547579 seconds)
    (163/341) benchmarking ("collect", "all", Bool, true)...
    done (took 2.194732677 seconds)
    (164/341) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.267459422 seconds)
    (165/341) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 2.092575003 seconds)
    (166/341) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 2.163766646 seconds)
    (167/341) benchmarking ("sort", Int8, false)...
    done (took 5.648551963 seconds)
    (168/341) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 2.153045287 seconds)
    (169/341) benchmarking ("perf_sum4", Int64, true)...
    done (took 2.031619554 seconds)
    (170/341) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.472729729 seconds)
    (171/341) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.314169146 seconds)
    (172/341) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.827973238 seconds)
    (173/341) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.569015617 seconds)
    (174/341) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 7.017500752 seconds)
    (175/341) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 7.019551562 seconds)
    (176/341) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.327829179 seconds)
    (177/341) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.021152663 seconds)
    (178/341) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.455669271 seconds)
    (179/341) benchmarking ("map", identity, Float32, false)...
    done (took 2.139714385 seconds)
    (180/341) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.150773426 seconds)
    (181/341) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.337011311 seconds)
    (182/341) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 8.240365466 seconds)
    (183/341) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 3.166434708 seconds)
    (184/341) benchmarking ("perf_sum", Float32, true)...
    done (took 2.170360635 seconds)
    (185/341) benchmarking ("collect", "filter", BigInt, true)...
    done (took 3.250281382 seconds)
    (186/341) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 2.154426049 seconds)
    (187/341) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 2.078313709 seconds)
    (188/341) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 2.211910357 seconds)
    (189/341) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.889073188 seconds)
    (190/341) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.417980567 seconds)
    (191/341) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.516325068 seconds)
    (192/341) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 7.024163449 seconds)
    (193/341) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 2.161992476 seconds)
    (194/341) benchmarking ("perf_countnothing", Int8, true)...
    done (took 2.023999086 seconds)
    (195/341) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 7.013528326 seconds)
    (196/341) benchmarking ("collect", "filter", Float32, true)...
    done (took 3.390383972 seconds)
    (197/341) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.61623467 seconds)
    (198/341) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.281921133 seconds)
    (199/341) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.348620674 seconds)
    (200/341) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.14893292 seconds)
    (201/341) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 3.5009724 seconds)
    (202/341) benchmarking ("map", identity, Int8, false)...
    done (took 2.112767639 seconds)
    (203/341) benchmarking ("map", abs, Float32, true)...
    done (took 2.257913067 seconds)
    (204/341) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.547636366 seconds)
    (205/341) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.088747742 seconds)
    (206/341) benchmarking ("perf_sum2", Int64, true)...
    done (took 2.042898758 seconds)
    (207/341) benchmarking ("map", abs, Bool, true)...
    done (took 2.189045879 seconds)
    (208/341) benchmarking ("map", abs, BigFloat, true)...
    done (took 7.142056891 seconds)
    (209/341) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.26407565 seconds)
    (210/341) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.185718013 seconds)
    (211/341) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.544211047 seconds)
    (212/341) benchmarking ("map", identity, Bool, true)...
    done (took 2.192898084 seconds)
    (213/341) benchmarking ("perf_countnothing", Float64, false)...
    done (took 2.046327608 seconds)
    (214/341) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 7.014228161 seconds)
    (215/341) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 5.014235878 seconds)
    (216/341) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 2.16653795 seconds)
    (217/341) benchmarking ("collect", "all", BigInt, false)...
    done (took 2.323283042 seconds)
    (218/341) benchmarking ("perf_sum4", BigInt, true)...
    done (took 7.025201994 seconds)
    (219/341) benchmarking ("perf_sum3", Int64, true)...
    done (took 4.317013739 seconds)
    (220/341) benchmarking ("perf_sum", Bool, false)...
    done (took 2.071935789 seconds)
    (221/341) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.014704929 seconds)
    (222/341) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.448408885 seconds)
    (223/341) benchmarking ("map", abs, ComplexF64, true)...
    done (took 3.558416427 seconds)
    (224/341) benchmarking ("collect", "all", Float64, false)...
    done (took 2.150811128 seconds)
    (225/341) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 2.2242532 seconds)
    (226/341) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.155439489 seconds)
    (227/341) benchmarking ("collect", "filter", Int64, true)...
    done (took 3.577241398 seconds)
    (228/341) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.030358562 seconds)
    (229/341) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 4.58091924 seconds)
    (230/341) benchmarking ("collect", "filter", BigInt, false)...
    done (took 3.264368169 seconds)
    (231/341) benchmarking ("map", *, BigInt, (false, true))...
    done (took 8.291529575 seconds)
    (232/341) benchmarking ("collect", "all", BigInt, true)...
    done (took 2.710948411 seconds)
    (233/341) benchmarking ("collect", "filter", ComplexF64, false)...
    done (took 3.409772952 seconds)
    (234/341) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 2.221616157 seconds)
    (235/341) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 7.01933554 seconds)
    (236/341) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.434092667 seconds)
    (237/341) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 2.050783135 seconds)
    (238/341) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 7.016122866 seconds)
    (239/341) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 4.309497275 seconds)
    (240/341) benchmarking ("perf_countequals", "Float64")...
    done (took 2.457939865 seconds)
    (241/341) benchmarking ("collect", "all", Int8, false)...
    done (took 2.108808919 seconds)
    (242/341) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.819894008 seconds)
    (243/341) benchmarking ("perf_sum4", Float32, true)...
    done (took 2.025990932 seconds)
    (244/341) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.379913331 seconds)
    (245/341) benchmarking ("map", identity, Float32, true)...
    done (took 2.293825258 seconds)
    (246/341) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.375193845 seconds)
    (247/341) benchmarking ("collect", "all", Float32, true)...
    done (took 2.286333164 seconds)
    (248/341) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.181016354 seconds)
    (249/341) benchmarking ("perf_sum4", Bool, true)...
    done (took 2.039606683 seconds)
    (250/341) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 7.016878425 seconds)
    (251/341) benchmarking ("perf_sum", Int8, true)...
    done (took 2.128778764 seconds)
    (252/341) benchmarking ("collect", "filter", BigFloat, false)...
    done (took 3.234060623 seconds)
    (253/341) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 7.025700693 seconds)
    (254/341) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 8.304698672 seconds)
    (255/341) benchmarking ("perf_sum4", Int64, false)...
    done (took 2.170587934 seconds)
    (256/341) benchmarking ("collect", "all", Bool, false)...
    done (took 2.151491085 seconds)
    (257/341) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 2.094119895 seconds)
    (258/341) benchmarking ("collect", "all", BigFloat, false)...
    done (took 2.335522994 seconds)
    (259/341) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 7.024121609 seconds)
    (260/341) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.755065026 seconds)
    (261/341) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 2.037705197 seconds)
    (262/341) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 3.876016919 seconds)
    (263/341) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.377603103 seconds)
    (264/341) benchmarking ("perf_sum3", Int64, false)...
    done (took 2.144025932 seconds)
    (265/341) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.235634583 seconds)
    (266/341) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.583240622 seconds)
    (267/341) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 2.165919219 seconds)
    (268/341) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 2.035203543 seconds)
    (269/341) benchmarking ("collect", "filter", BigFloat, true)...
    done (took 3.274695873 seconds)
    (270/341) benchmarking ("perf_sum2", Float64, false)...
    done (took 2.185294289 seconds)
    (271/341) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.215631714 seconds)
    (272/341) benchmarking ("map", identity, Int8, true)...
    done (took 2.196128587 seconds)
    (273/341) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.161587107 seconds)
    (274/341) benchmarking ("perf_sum4", Int8, true)...
    done (took 2.025492483 seconds)
    (275/341) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 2.147230222 seconds)
    (276/341) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.070231881 seconds)
    (277/341) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 7.02771589 seconds)
    (278/341) benchmarking ("sort", Float32, false)...
    done (took 7.026037784 seconds)
    (279/341) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 3.190442129 seconds)
    (280/341) benchmarking ("perf_sum2", Bool, false)...
    done (took 2.062157543 seconds)
    (281/341) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.420768784 seconds)
    (282/341) benchmarking ("map", abs, Int64, false)...
    done (took 2.170131736 seconds)
    (283/341) benchmarking ("map", abs, BigFloat, false)...
    done (took 7.023545252 seconds)
    (284/341) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.269059337 seconds)
    (285/341) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 7.181907481 seconds)
    (286/341) benchmarking ("map", abs, Float64, false)...
    done (took 2.152905667 seconds)
    (287/341) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 2.045953579 seconds)
    (288/341) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 7.019156134 seconds)
    (289/341) benchmarking ("broadcast", identity, Int64, false)...
    done (took 3.144923423 seconds)
    (290/341) benchmarking ("map", abs, Int8, false)...
    done (took 2.143103179 seconds)
    (291/341) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 7.019712673 seconds)
    (292/341) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 4.466639226 seconds)
    (293/341) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 7.03234619 seconds)
    (294/341) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.024088625 seconds)
    (295/341) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 4.798143199 seconds)
    (296/341) benchmarking ("map", abs, Float64, true)...
    done (took 2.400580245 seconds)
    (297/341) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 3.4606374 seconds)
    (298/341) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 7.027063382 seconds)
    (299/341) benchmarking ("collect", "filter", ComplexF64, true)...
    done (took 3.853366631 seconds)
    (300/341) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.29594725 seconds)
    (301/341) benchmarking ("map", abs, Bool, false)...
    done (took 2.114125147 seconds)
    (302/341) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.487635552 seconds)
    (303/341) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 2.271073305 seconds)
    (304/341) benchmarking ("perf_sum", BigFloat, false)...
    done (took 7.021797476 seconds)
    (305/341) benchmarking ("perf_countnothing", Int8, false)...
    done (took 2.154308213 seconds)
    (306/341) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.711761363 seconds)
    (307/341) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.445144509 seconds)
    (308/341) benchmarking ("sort", Float64, false)...
    done (took 6.730206379 seconds)
    (309/341) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 7.02699153 seconds)
    (310/341) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 2.248370767 seconds)
    (311/341) benchmarking ("map", abs, Int64, true)...
    done (took 2.346989237 seconds)
    (312/341) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.368363057 seconds)
    (313/341) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.383552675 seconds)
    (314/341) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.030341157 seconds)
    (315/341) benchmarking ("broadcast", identity, Int64, true)...
    done (took 4.942394644 seconds)
    (316/341) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 2.908069143 seconds)
    (317/341) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 3.595568625 seconds)
    (318/341) benchmarking ("collect", "all", ComplexF64, true)...
    done (took 2.660943416 seconds)
    (319/341) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.352718716 seconds)
    (320/341) benchmarking ("perf_countequals", "BigFloat")...
    done (took 4.173386851 seconds)
    (321/341) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.430136246 seconds)
    (322/341) benchmarking ("perf_sum", BigFloat, true)...
    done (took 7.026156105 seconds)
    (323/341) benchmarking ("perf_sum4", Float64, true)...
    done (took 2.145129995 seconds)
    (324/341) benchmarking ("collect", "all", ComplexF64, false)...
    done (took 2.257511127 seconds)
    (325/341) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.180545834 seconds)
    (326/341) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.50419582 seconds)
    (327/341) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.406831712 seconds)
    (328/341) benchmarking ("map", identity, Int64, false)...
    done (took 2.172763714 seconds)
    (329/341) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.363815067 seconds)
    (330/341) benchmarking ("map", abs, ComplexF64, false)...
    done (took 3.540659634 seconds)
    (331/341) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.329347077 seconds)
    (332/341) benchmarking ("map", identity, Float64, true)...
    done (took 2.388961786 seconds)
    (333/341) benchmarking ("sort", BigFloat, false)...
    done (took 7.026369296 seconds)
    (334/341) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 2.078516092 seconds)
    (335/341) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.879861376 seconds)
    (336/341) benchmarking ("map", abs, Int8, true)...
    done (took 2.237192588 seconds)
    (337/341) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 7.033084806 seconds)
    (338/341) benchmarking ("perf_sum2", Int8, false)...
    done (took 2.037121242 seconds)
    (339/341) benchmarking ("perf_sum3", Float32, false)...
    done (took 2.170147026 seconds)
    (340/341) benchmarking ("perf_sum", Float32, false)...
    done (took 2.17061416 seconds)
    (341/341) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.139427404 seconds)
  done (took 1187.071038058 seconds)
done (took 1189.143950655 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 2.052935959 seconds)
  (2/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 2.049523386 seconds)
  (3/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.623304592 seconds)
  (4/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 2.067006388 seconds)
  (5/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 2.049016869 seconds)
  (6/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 2.053976134 seconds)
  (7/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.599627197 seconds)
  (8/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 2.087871108 seconds)
  (9/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 2.059875025 seconds)
  (10/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.600961257 seconds)
  (11/152) benchmarking ("inner", "Int32", 4096)...
  done (took 2.072345074 seconds)
  (12/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 2.050039514 seconds)
  (13/152) benchmarking ("inner", "Int64", 4096)...
  done (took 2.059025594 seconds)
  (14/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 2.067156444 seconds)
  (15/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 2.060484048 seconds)
  (16/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 2.06078748 seconds)
  (17/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 2.070678538 seconds)
  (18/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 2.076377155 seconds)
  (19/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 2.070147656 seconds)
  (20/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 2.056868635 seconds)
  (21/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 2.140584316 seconds)
  (22/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 2.05665566 seconds)
  (23/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 2.052381993 seconds)
  (24/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 2.099068508 seconds)
  (25/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 2.053066309 seconds)
  (26/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 2.058232517 seconds)
  (27/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 2.050688092 seconds)
  (28/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 2.142103887 seconds)
  (29/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 2.142505849 seconds)
  (30/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 2.054521432 seconds)
  (31/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 2.057284677 seconds)
  (32/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.449116634 seconds)
  (33/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 2.116329534 seconds)
  (34/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 2.058303243 seconds)
  (35/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 2.060284722 seconds)
  (36/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 2.060950808 seconds)
  (37/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 2.057415651 seconds)
  (38/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 2.059717189 seconds)
  (39/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 2.054585275 seconds)
  (40/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 2.059679995 seconds)
  (41/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 2.051872787 seconds)
  (42/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 2.061359282 seconds)
  (43/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 2.056306263 seconds)
  (44/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 2.05527955 seconds)
  (45/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 2.050141119 seconds)
  (46/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 2.05134469 seconds)
  (47/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 2.052775689 seconds)
  (48/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.146902529 seconds)
  (49/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 2.064356332 seconds)
  (50/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.460665488 seconds)
  (51/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 2.115394541 seconds)
  (52/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 2.063811548 seconds)
  (53/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 2.154513695 seconds)
  (54/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 2.063001846 seconds)
  (55/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 2.062910527 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 2.064436535 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 2.149967133 seconds)
  (58/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 2.064451737 seconds)
  (59/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 2.056161938 seconds)
  (60/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.458003697 seconds)
  (61/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 2.220084951 seconds)
  (62/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 2.06218346 seconds)
  (63/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.460080619 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 2.129200953 seconds)
  (65/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 2.064758296 seconds)
  (66/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 2.061249221 seconds)
  (67/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 2.058201021 seconds)
  (68/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 2.056065306 seconds)
  (69/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.448361029 seconds)
  (70/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.654919182 seconds)
  (71/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 2.092867954 seconds)
  (72/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 2.076184006 seconds)
  (73/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 2.053924549 seconds)
  (74/152) benchmarking ("inner", "Float32", 4096)...
  done (took 2.0573383 seconds)
  (75/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 2.064823036 seconds)
  (76/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.603135266 seconds)
  (77/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 2.069793501 seconds)
  (78/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.731518932 seconds)
  (79/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 2.084709636 seconds)
  (80/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 2.061205019 seconds)
  (81/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 2.059070988 seconds)
  (82/152) benchmarking ("inner", "Int32", 4095)...
  done (took 2.057651197 seconds)
  (83/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 2.056068623 seconds)
  (84/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 2.061977681 seconds)
  (85/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 2.053529359 seconds)
  (86/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 2.054428005 seconds)
  (87/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 2.056692294 seconds)
  (88/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 2.059553406 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 2.064261992 seconds)
  (90/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.451177697 seconds)
  (91/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 2.110304597 seconds)
  (92/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.626975024 seconds)
  (93/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 2.066307519 seconds)
  (94/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 2.051963165 seconds)
  (95/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 2.051901358 seconds)
  (96/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.73126705 seconds)
  (97/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 2.090176017 seconds)
  (98/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 2.050193314 seconds)
  (99/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 2.059632908 seconds)
  (100/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.448848186 seconds)
  (101/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 2.109253327 seconds)
  (102/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 2.054357504 seconds)
  (103/152) benchmarking ("inner", "Float32", 4095)...
  done (took 2.055822677 seconds)
  (104/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 2.064391466 seconds)
  (105/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.148903636 seconds)
  (106/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 2.058426428 seconds)
  (107/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 2.053873705 seconds)
  (108/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 2.053571339 seconds)
  (109/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 2.078197217 seconds)
  (110/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 2.061215439 seconds)
  (111/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 2.055373395 seconds)
  (112/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 2.066225173 seconds)
  (113/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 2.07916309 seconds)
  (114/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 2.072141166 seconds)
  (115/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 2.061915912 seconds)
  (116/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 2.054839469 seconds)
  (117/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 2.065866012 seconds)
  (118/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 2.06277705 seconds)
  (119/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 2.051541686 seconds)
  (120/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 2.065861802 seconds)
  (121/152) benchmarking ("inner", "Float64", 4095)...
  done (took 2.063618418 seconds)
  (122/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 2.062714587 seconds)
  (123/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 2.056812454 seconds)
  (124/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 2.1022253 seconds)
  (125/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 2.053677946 seconds)
  (126/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 2.063468135 seconds)
  (127/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.150555141 seconds)
  (128/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 2.062946774 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.155795895 seconds)
  (130/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 2.063695115 seconds)
  (131/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 2.062611053 seconds)
  (132/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 2.056416416 seconds)
  (133/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.464560161 seconds)
  (134/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 2.112370098 seconds)
  (135/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 2.081974947 seconds)
  (136/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 2.06210564 seconds)
  (137/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 2.082353057 seconds)
  (138/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 2.080518123 seconds)
  (139/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 2.065697407 seconds)
  (140/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 2.06136363 seconds)
  (141/152) benchmarking ("inner", "Int64", 4095)...
  done (took 2.063962743 seconds)
  (142/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 2.06113938 seconds)
  (143/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 2.103947281 seconds)
  (144/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 2.056815737 seconds)
  (145/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 2.083370197 seconds)
  (146/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 2.103131018 seconds)
  (147/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 2.069754612 seconds)
  (148/152) benchmarking ("inner", "Float64", 4096)...
  done (took 2.063202626 seconds)
  (149/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 2.053331956 seconds)
  (150/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 2.073852058 seconds)
  (151/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 2.078388352 seconds)
  (152/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 2.062220572 seconds)
done (took 324.626999059 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 2.084221933 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 4.374957512 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 2.105211556 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 2.033383865 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 2.10972973 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 2.093098001 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 2.03178328 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 2.031560646 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 2.033127264 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.475349458 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 2.031437608 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 2.031279763 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 4.388339949 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 2.032805921 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 2.092730644 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 2.031536988 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 2.031606639 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.307797284 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 2.035543595 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 2.092983961 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 3.049489379 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 2.034348022 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 2.032378672 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.476995693 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 7.029928006 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 3.046239133 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 2.092415273 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 2.03185308 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.31118695 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 3.044145456 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 3.05793511 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.315129924 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 2.098516151 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 2.036100009 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 2.034002473 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 2.031487895 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 2.111967326 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 2.039383482 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 2.088293647 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 2.085349589 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 2.103661663 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 2.042158907 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 3.084560787 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 3.068012681 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 2.04094642 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 2.034942273 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 2.031909114 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 2.038017446 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 7.032295308 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 2.036929373 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.305282098 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 2.033782292 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 2.034250197 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 2.033209642 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 2.033389546 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 2.036997819 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 2.0328799 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 2.037987958 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 2.092854516 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 2.035878638 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 2.085193236 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.478513325 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.473689177 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 2.03691078 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 3.05468258 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 2.035538281 seconds)
  done (took 161.811028366 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 2.1216278 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 2.133301698 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 2.121004644 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 2.044257932 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 2.101079158 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 2.127839441 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 2.042259878 seconds)
  done (took 16.652791284 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 2.042447316 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 2.034473047 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 2.059226204 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 2.068949552 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 2.036768497 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.20646908 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 2.051923891 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 2.036962644 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 2.066491125 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 2.037714786 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 2.39539332 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 2.065950309 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 2.036940364 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 3.046230449 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 2.050212668 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 2.066625372 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 2.039487918 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.037905812 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.142393865 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.111259467 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 2.035359946 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 2.036779151 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 2.070916115 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 2.046657229 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 2.038532775 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.035947783 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 2.037673543 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 2.043590013 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 2.034694046 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 2.035744238 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 2.034576017 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 2.052904721 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 2.039504036 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 3.02530545 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 2.035690331 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 2.038440288 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 2.039374516 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 2.038239555 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 2.03761709 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.421645101 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 2.040348921 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 2.041006592 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 2.034920252 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 2.036894234 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 2.035553576 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 2.064486445 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 2.036796098 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 2.036360075 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 2.038866772 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 2.038182954 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 2.071309918 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 2.035748296 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 2.039972086 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 2.038040927 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 2.072346327 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 2.039508888 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 2.042501764 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 2.036567764 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 2.037919364 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 2.038031991 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 2.037595201 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.114212791 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 2.066367879 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 2.036711081 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 2.06666733 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 2.079676801 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 2.037206466 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 2.038100214 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 2.036329203 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 2.069480464 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 2.036720332 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 2.068614369 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 2.039265753 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 2.126955768 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 2.038459969 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.208661482 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 2.063027016 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 2.043392963 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 2.041824093 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.998092979 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 2.047614863 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 2.039431274 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 2.042611484 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 2.04569425 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 2.041181458 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 2.038000032 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 2.039396546 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 2.039481712 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 2.046491533 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 2.038965265 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 2.088105568 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 2.040910595 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 2.039234967 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 2.130626101 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 2.039689911 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.147233857 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 2.069069817 seconds)
  done (took 204.869407204 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 2.045163615 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 2.041928232 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 2.056570343 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 2.042024666 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 2.038810445 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 2.049018925 seconds)
  done (took 14.239884175 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 2.043200111 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 2.046622796 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 2.039724429 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 2.039881091 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 2.042539788 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 2.040347006 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 2.039309169 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 2.042038941 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 2.045904477 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 2.042427771 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 2.040010005 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 2.040170309 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 2.039538802 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 2.042112744 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 2.039365449 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 2.042543891 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 2.040400818 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 2.038540653 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 2.041269998 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 2.040368227 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.24047814 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 2.041386079 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 2.040089412 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 2.049467085 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 2.044946906 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 2.03955871 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 2.049297863 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 2.041637002 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 2.038787463 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 2.049662087 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 2.046778517 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 2.039723674 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 2.045867167 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 2.048607664 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 2.04486152 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 2.046506998 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 2.043303581 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 2.041480601 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 2.040732955 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 2.041081991 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 2.041626523 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 2.039667206 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 2.041019881 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 2.042377225 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 2.046983393 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 2.053150184 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 2.045946789 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 2.052345775 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 2.039614486 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 2.041829576 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 2.042261589 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 2.041254666 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 2.044066506 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 2.042120265 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 2.051461974 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 2.049173124 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 2.049908234 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 2.042262168 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 2.044070581 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 2.049277692 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 2.046081715 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 2.042922723 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 2.044895879 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 2.047722386 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 2.042894916 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 2.043511545 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 2.052394726 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 2.048908272 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 2.045212472 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 2.045122195 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 2.043573072 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 2.041427748 seconds)
  done (took 149.317896177 seconds)
done (took 548.84734633 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.057842978 seconds)
  done (took 9.02696675 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.221640763 seconds)
  done (took 9.316024656 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 12.378696416 seconds)
  done (took 14.355911226 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 7.066898468 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 7.143698427 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 7.049669384 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 7.056808678 seconds)
  done (took 30.310605636 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.194169751 seconds)
  done (took 9.173283229 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 7.058458327 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 7.045455792 seconds)
  done (took 16.160598355 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 7.060374947 seconds)
  done (took 9.041482222 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.367298576 seconds)
  done (took 9.37451902 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 7.067503851 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 7.074307846 seconds)
  done (took 16.148636089 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 7.043488433 seconds)
  done (took 9.023939094 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 8.592286525 seconds)
  done (took 10.649920407 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 7.056354206 seconds)
  done (took 9.060461821 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 7.080453909 seconds)
  done (took 9.06156035 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.749637711 seconds)
  done (took 9.730626519 seconds)
done (took 172.402639255 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 7.057511139 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 7.046684293 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 7.047066264 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 7.044131769 seconds)
  done (took 30.16700354 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 2.082988268 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 2.083884958 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 2.08688924 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 2.091861243 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 2.073040122 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 2.073233178 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 2.083772459 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 2.083289382 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 2.07329927 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 2.103278061 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 2.082726293 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 2.105328905 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 2.105574592 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 2.088114488 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 2.087398478 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 2.103454252 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 2.103418298 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 2.083247163 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 2.073872155 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 2.086342956 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 2.103757874 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 2.103994828 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 2.044649525 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 2.046073494 seconds)
  done (took 52.034872232 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.251936825 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 2.118040788 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.209545021 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 2.10413739 seconds)
  done (took 10.655414002 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 2.045579923 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 2.120084192 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 2.102022962 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 2.103846028 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 2.104367432 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 2.210699982 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 2.103647863 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 2.251102114 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 2.193897076 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 2.224356294 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 2.050778684 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 2.061777316 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 2.065201035 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 2.103032607 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 2.213559835 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 2.048077346 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 2.045807 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 2.222290984 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 2.121507501 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 2.24416222 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 2.045383127 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 2.103414087 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 2.10596892 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 2.107442801 seconds)
  done (took 52.969292284 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 2.044577936 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 2.058380437 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 2.057313548 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 2.048887022 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 2.045646924 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 2.045929647 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 2.058956468 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 2.048402562 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 2.077221718 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 2.051537682 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 2.047906996 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 2.047237714 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 2.046694339 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 2.048067362 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 2.048750798 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 2.065819507 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 2.064902074 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 2.047898171 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 2.049930609 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 2.058654994 seconds)
  done (took 43.037036742 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 7.044346306 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.294311108 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.327288214 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.209349382 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 7.045155106 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 7.04791367 seconds)
  done (took 32.942173942 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 2.065011664 seconds)
    (2/12) benchmarking ("push_single!", 256)...
    done (took 2.070666638 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 2.064700317 seconds)
    (4/12) benchmarking ("push_multiple!", 256)...
    done (took 2.084841667 seconds)
    (5/12) benchmarking ("push_single!", 2048)...
    done (took 2.116564249 seconds)
    (6/12) benchmarking ("push_single!", 8)...
    done (took 2.059886607 seconds)
    (7/12) benchmarking ("prerend!", 2048)...
    done (took 2.137571457 seconds)
    (8/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.259656992 seconds)
    (9/12) benchmarking ("push_multiple!", 8)...
    done (took 2.061704256 seconds)
    (10/12) benchmarking ("append!", 2048)...
    done (took 2.13223704 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 2.076751021 seconds)
    (12/12) benchmarking ("prerend!", 8)...
    done (took 2.05670336 seconds)
  done (took 27.16972653 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 7.047756425 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 7.049746594 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 7.07252946 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 2.063709532 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 2.065147722 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 2.059465116 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 2.060581882 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 7.045789997 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 2.064768378 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 2.072659535 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 2.05711597 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 2.064905307 seconds)
  done (took 46.69932547 seconds)
  (9/13) benchmarking "index"...
    (1/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.229316411 seconds)
    (2/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.201471694 seconds)
    (3/608) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.366952296 seconds)
    (4/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.78645364 seconds)
    (5/608) benchmarking ("sumvector", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.556968696 seconds)
    (6/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.112433927 seconds)
    (7/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 2.443060234 seconds)
    (8/608) benchmarking ("sumelt", "BitMatrix")...
    done (took 5.559771243 seconds)
    (9/608) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 5.11259305 seconds)
    (10/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.150513706 seconds)
    (11/608) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.534495639 seconds)
    (12/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.078872581 seconds)
    (13/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.557481198 seconds)
    (14/608) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 5.000767837 seconds)
    (15/608) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.052160255 seconds)
    (16/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.321802761 seconds)
    (17/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.050188086 seconds)
    (18/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 3.528932509 seconds)
    (19/608) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.471548081 seconds)
    (20/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 7.121967661 seconds)
    (21/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.054492704 seconds)
    (22/608) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 2.050152173 seconds)
    (23/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.054618264 seconds)
    (24/608) benchmarking ("sumvector", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.571682143 seconds)
    (25/608) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.359046912 seconds)
    (26/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.057926878 seconds)
    (27/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.23091724 seconds)
    (28/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.073156875 seconds)
    (29/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 7.050698415 seconds)
    (30/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.274764125 seconds)
    (31/608) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 7.119237627 seconds)
    (32/608) benchmarking ("sumvector_view", "Matrix{Int64}")...
    done (took 2.068179062 seconds)
    (33/608) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 2.205831998 seconds)
    (34/608) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.349336614 seconds)
    (35/608) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.557866986 seconds)
    (36/608) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 7.136110534 seconds)
    (37/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 7.134455124 seconds)
    (38/608) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 6.147975363 seconds)
    (39/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.105875653 seconds)
    (40/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 2.086732275 seconds)
    (41/608) benchmarking ("sumcartesian", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.063980709 seconds)
    (42/608) benchmarking ("sumelt", "Array{Float64, 3}")...
    done (took 2.065185537 seconds)
    (43/608) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 7.048826535 seconds)
    (44/608) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 2.067771441 seconds)
    (45/608) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.300364482 seconds)
    (46/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.051704098 seconds)
    (47/608) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 7.067463809 seconds)
    (48/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.638720392 seconds)
    (49/608) benchmarking ("sumeach", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.00808921 seconds)
    (50/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.205649703 seconds)
    (51/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.22643485 seconds)
    (52/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.912262224 seconds)
    (53/608) benchmarking ("sumelt", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 2.111692406 seconds)
    (54/608) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.732971921 seconds)
    (55/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.185793419 seconds)
    (56/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.324379453 seconds)
    (57/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.059011347 seconds)
    (58/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.128274512 seconds)
    (59/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.129204515 seconds)
    (60/608) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 6.13988194 seconds)
    (61/608) benchmarking ("sumlinear_view", "Matrix{Float64}")...
    done (took 7.217286591 seconds)
    (62/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.136270514 seconds)
    (63/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.232840721 seconds)
    (64/608) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.006659236 seconds)
    (65/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.583110712 seconds)
    (66/608) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.239387413 seconds)
    (67/608) benchmarking ("sumvector", "100000:-1:1")...
    done (took 2.054170557 seconds)
    (68/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.058518474 seconds)
    (69/608) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.309220942 seconds)
    (70/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.327752323 seconds)
    (71/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.134834406 seconds)
    (72/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.21377414 seconds)
    (73/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.790884497 seconds)
    (74/608) benchmarking ("sumrange_view", "1:100000")...
    done (took 2.059538709 seconds)
    (75/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.066278391 seconds)
    (76/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 6.492941465 seconds)
    (77/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.179259623 seconds)
    (78/608) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 7.06323697 seconds)
    (79/608) benchmarking ("mapr_access", "Matrix{Int64}")...
    done (took 3.782614975 seconds)
    (80/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.559340141 seconds)
    (81/608) benchmarking ("sumcartesian", "Matrix{Float64}")...
    done (took 5.006580783 seconds)
    (82/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 2.154301882 seconds)
    (83/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 3.622363383 seconds)
    (84/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.061311399 seconds)
    (85/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 7.053231884 seconds)
    (86/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.06506168 seconds)
    (87/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 3.901499595 seconds)
    (88/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.005150986 seconds)
    (89/608) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.136913042 seconds)
    (90/608) benchmarking ("sumlogical_view", "Matrix{Int64}")...
    done (took 6.146561632 seconds)
    (91/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.402652105 seconds)
    (92/608) benchmarking ("sumcolon_view", "1:100000")...
    done (took 2.052807784 seconds)
    (93/608) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.052325136 seconds)
    (94/608) benchmarking ("sum", "3dsubarray")...
    done (took 2.083615929 seconds)
    (95/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.058771884 seconds)
    (96/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.005966572 seconds)
    (97/608) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.740552471 seconds)
    (98/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 2.135254321 seconds)
    (99/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 5.004102364 seconds)
    (100/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.60842463 seconds)
    (101/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 7.144830102 seconds)
    (102/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 5.005443682 seconds)
    (103/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 7.132154886 seconds)
    (104/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.060742327 seconds)
    (105/608) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.440964275 seconds)
    (106/608) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.095012902 seconds)
    (107/608) benchmarking ("sumcartesian", "Matrix{Int64}")...
    done (took 2.803049443 seconds)
    (108/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 3.654241488 seconds)
    (109/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.3330337 seconds)
    (110/608) benchmarking "5d"...
    done (took 3.624477074 seconds)
    (111/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.064133083 seconds)
    (112/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 4.86525904 seconds)
    (113/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.137046611 seconds)
    (114/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.135271769 seconds)
    (115/608) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.052215277 seconds)
    (116/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.879409299 seconds)
    (117/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.138872412 seconds)
    (118/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.196514855 seconds)
    (119/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.231190029 seconds)
    (120/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 7.053852999 seconds)
    (121/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 5.006767038 seconds)
    (122/608) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 2.069635334 seconds)
    (123/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.210470012 seconds)
    (124/608) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.151242926 seconds)
    (125/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.079700479 seconds)
    (126/608) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.055763116 seconds)
    (127/608) benchmarking ("sumrange_view", "Matrix{Float64}")...
    done (took 2.067530557 seconds)
    (128/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 7.065247252 seconds)
    (129/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.061956215 seconds)
    (130/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.087373505 seconds)
    (131/608) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.098802296 seconds)
    (132/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 2.554361074 seconds)
    (133/608) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 2.162731976 seconds)
    (134/608) benchmarking ("sumeach", "100000:-1:1")...
    done (took 2.053894933 seconds)
    (135/608) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.996008587 seconds)
    (136/608) benchmarking ("sumcolon_view", "Matrix{Float64}")...
    done (took 2.064988568 seconds)
    (137/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.533822739 seconds)
    (138/608) benchmarking ("sumrange", "Matrix{Float64}")...
    done (took 7.134832525 seconds)
    (139/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.151456388 seconds)
    (140/608) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.47638019 seconds)
    (141/608) benchmarking ("sumeach", "BitMatrix")...
    done (took 5.64299286 seconds)
    (142/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.821045624 seconds)
    (143/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 5.020380896 seconds)
    (144/608) benchmarking ("mapr_access", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.87088936 seconds)
    (145/608) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 2.503934885 seconds)
    (146/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.155201845 seconds)
    (147/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.139132458 seconds)
    (148/608) benchmarking ("sumlogical", "BitMatrix")...
    done (took 4.193175455 seconds)
    (149/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 2.224967755 seconds)
    (150/608) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.138518392 seconds)
    (151/608) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.056947831 seconds)
    (152/608) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.211093549 seconds)
    (153/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 7.062551871 seconds)
    (154/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.060009458 seconds)
    (155/608) benchmarking ("sumcolon", "Matrix{Int64}")...
    done (took 7.054225017 seconds)
    (156/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 3.643113925 seconds)
    (157/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.731409605 seconds)
    (158/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 2.103635983 seconds)
    (159/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 7.05651818 seconds)
    (160/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 5.014885898 seconds)
    (161/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.152260997 seconds)
    (162/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.259409693 seconds)
    (163/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.746024798 seconds)
    (164/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.09305435 seconds)
    (165/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.066644832 seconds)
    (166/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.138304987 seconds)
    (167/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.207403658 seconds)
    (168/608) benchmarking "ind2sub"...
    done (took 7.058870738 seconds)
    (169/608) benchmarking ("sumeach", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.012047057 seconds)
    (170/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.409016553 seconds)
    (171/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.284292063 seconds)
    (172/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.553731947 seconds)
    (173/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 4.411834588 seconds)
    (174/608) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.732789668 seconds)
    (175/608) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 2.143389072 seconds)
    (176/608) benchmarking ("sumeach", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.070133007 seconds)
    (177/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.237845892 seconds)
    (178/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.14351379 seconds)
    (179/608) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.696187182 seconds)
    (180/608) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.444036421 seconds)
    (181/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.384893149 seconds)
    (182/608) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 6.610793386 seconds)
    (183/608) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 5.051852815 seconds)
    (184/608) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.573135727 seconds)
    (185/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.180782115 seconds)
    (186/608) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.453492596 seconds)
    (187/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.08163156 seconds)
    (188/608) benchmarking ("sumcartesian_view", "Matrix{Float64}")...
    done (took 2.797774339 seconds)
    (189/608) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 6.157432029 seconds)
    (190/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.618590335 seconds)
    (191/608) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 7.097538681 seconds)
    (192/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.514304377 seconds)
    (193/608) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 5.013451768 seconds)
    (194/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.06717382 seconds)
    (195/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.518687871 seconds)
    (196/608) benchmarking ("sumelt_boundscheck", "Matrix{Float64}")...
    done (took 5.060216389 seconds)
    (197/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 2.614691276 seconds)
    (198/608) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 7.147539871 seconds)
    (199/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.225211088 seconds)
    (200/608) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 2.062077135 seconds)
    (201/608) benchmarking ("sumelt", "1:100000")...
    done (took 2.060148034 seconds)
    (202/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.070711046 seconds)
    (203/608) benchmarking ("sumlogical", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.353331609 seconds)
    (204/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.175389195 seconds)
    (205/608) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.134043909 seconds)
    (206/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.138317457 seconds)
    (207/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.014502531 seconds)
    (208/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 6.770671542 seconds)
    (209/608) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 2.109457927 seconds)
    (210/608) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 2.063252145 seconds)
    (211/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 7.061576805 seconds)
    (212/608) benchmarking ("sumlogical", "Matrix{Float64}")...
    done (took 6.51358465 seconds)
    (213/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 5.322012048 seconds)
    (214/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.079687567 seconds)
    (215/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.063186162 seconds)
    (216/608) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.150961789 seconds)
    (217/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 5.150750773 seconds)
    (218/608) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.668521025 seconds)
    (219/608) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 2.068415133 seconds)
    (220/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.065419143 seconds)
    (221/608) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.531199812 seconds)
    (222/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.073679218 seconds)
    (223/608) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.58026471 seconds)
    (224/608) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 7.087077746 seconds)
    (225/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.250702818 seconds)
    (226/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.100700018 seconds)
    (227/608) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 6.166439136 seconds)
    (228/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 5.91977903 seconds)
    (229/608) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.58550776 seconds)
    (230/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 2.163631917 seconds)
    (231/608) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.144411949 seconds)
    (232/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 7.063822371 seconds)
    (233/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.067431919 seconds)
    (234/608) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.327756478 seconds)
    (235/608) benchmarking ("sumeach_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.078220937 seconds)
    (236/608) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.328659705 seconds)
    (237/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.542957983 seconds)
    (238/608) benchmarking ("sumlinear", "BitMatrix")...
    done (took 5.66379265 seconds)
    (239/608) benchmarking ("sumrange", "BitMatrix")...
    done (took 2.740473017 seconds)
    (240/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 7.157262128 seconds)
    (241/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 3.663956881 seconds)
    (242/608) benchmarking ("sumelt_boundscheck", "Array{Float64, 3}")...
    done (took 2.08396189 seconds)
    (243/608) benchmarking ("sumeach", "1:100000")...
    done (took 2.064816778 seconds)
    (244/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.740825996 seconds)
    (245/608) benchmarking ("sumvector", "1:100000")...
    done (took 2.098152424 seconds)
    (246/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.065091813 seconds)
    (247/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.219777762 seconds)
    (248/608) benchmarking ("sumlogical", "1:100000")...
    done (took 2.666054215 seconds)
    (249/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.242550163 seconds)
    (250/608) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 7.217729617 seconds)
    (251/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.148127486 seconds)
    (252/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 7.0779437 seconds)
    (253/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.513296588 seconds)
    (254/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.682692471 seconds)
    (255/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 7.066315269 seconds)
    (256/608) benchmarking ("sumlinear_view", "Array{Float64, 3}")...
    done (took 3.086969587 seconds)
    (257/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.17654728 seconds)
    (258/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 7.068347793 seconds)
    (259/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.228304342 seconds)
    (260/608) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.820447431 seconds)
    (261/608) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.068250481 seconds)
    (262/608) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.063209811 seconds)
    (263/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.073849377 seconds)
    (264/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.243201617 seconds)
    (265/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.220389128 seconds)
    (266/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.4476241 seconds)
    (267/608) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.560396179 seconds)
    (268/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.399568127 seconds)
    (269/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.017363744 seconds)
    (270/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.075168799 seconds)
    (271/608) benchmarking "4d"...
    done (took 3.177745111 seconds)
    (272/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.338207208 seconds)
    (273/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 7.065366298 seconds)
    (274/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.102065142 seconds)
    (275/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.659131211 seconds)
    (276/608) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.750359434 seconds)
    (277/608) benchmarking ("sumcartesian_view", "Matrix{Int64}")...
    done (took 2.842888886 seconds)
    (278/608) benchmarking ("sumvector", "Matrix{Float64}")...
    done (took 2.588744115 seconds)
    (279/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.34831922 seconds)
    (280/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.682053422 seconds)
    (281/608) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 2.512446496 seconds)
    (282/608) benchmarking ("sumlinear", "Array{Float64, 3}")...
    done (took 2.161543128 seconds)
    (283/608) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 2.081875001 seconds)
    (284/608) benchmarking ("sumeach_view", "Array{Float64, 3}")...
    done (took 2.987588674 seconds)
    (285/608) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.255948707 seconds)
    (286/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 5.024768755 seconds)
    (287/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.195981452 seconds)
    (288/608) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 5.017115975 seconds)
    (289/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.876536367 seconds)
    (290/608) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.362483278 seconds)
    (291/608) benchmarking ("sumvector_view", "Matrix{Float64}")...
    done (took 2.090465394 seconds)
    (292/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.516355759 seconds)
    (293/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.101695442 seconds)
    (294/608) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.578096528 seconds)
    (295/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.421932549 seconds)
    (296/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.182331446 seconds)
    (297/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.172159347 seconds)
    (298/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 2.101404962 seconds)
    (299/608) benchmarking ("sumrange", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 7.066411246 seconds)
    (300/608) benchmarking ("sumelt", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.130611603 seconds)
    (301/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 7.06592657 seconds)
    (302/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.156167613 seconds)
    (303/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.191473606 seconds)
    (304/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 7.06693345 seconds)
    (305/608) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 6.588266599 seconds)
    (306/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.133813214 seconds)
    (307/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.114547628 seconds)
    (308/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.072492398 seconds)
    (309/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 4.668418217 seconds)
    (310/608) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.095458337 seconds)
    (311/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.069824646 seconds)
    (312/608) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.614091244 seconds)
    (313/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 2.099107424 seconds)
    (314/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.195707368 seconds)
    (315/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.152314095 seconds)
    (316/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.914109507 seconds)
    (317/608) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 7.097398173 seconds)
    (318/608) benchmarking ("sumrange", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 7.14187405 seconds)
    (319/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 3.570429101 seconds)
    (320/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.635814404 seconds)
    (321/608) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.520624495 seconds)
    (322/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.152390052 seconds)
    (323/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.633494655 seconds)
    (324/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.128658481 seconds)
    (325/608) benchmarking ("sumlinear", "Matrix{Int64}")...
    done (took 2.811450273 seconds)
    (326/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 7.068947182 seconds)
    (327/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.250811269 seconds)
    (328/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.074073272 seconds)
    (329/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.753269149 seconds)
    (330/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.127957159 seconds)
    (331/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.450016007 seconds)
    (332/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.076568753 seconds)
    (333/608) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 2.249550458 seconds)
    (334/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.371112291 seconds)
    (335/608) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.160657529 seconds)
    (336/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.074738613 seconds)
    (337/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.023012121 seconds)
    (338/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.63932758 seconds)
    (339/608) benchmarking ("sumcolon", "1:100000")...
    done (took 3.12103197 seconds)
    (340/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 3.547087801 seconds)
    (341/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.073398467 seconds)
    (342/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 2.8275425 seconds)
    (343/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.579156823 seconds)
    (344/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.20326052 seconds)
    (345/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 4.630143939 seconds)
    (346/608) benchmarking "3d"...
    done (took 3.01585176 seconds)
    (347/608) benchmarking ("sum", "3darray")...
    done (took 2.072977233 seconds)
    (348/608) benchmarking ("sumlogical", "Matrix{Int64}")...
    done (took 6.387285269 seconds)
    (349/608) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.747480072 seconds)
    (350/608) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.828479733 seconds)
    (351/608) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.109465595 seconds)
    (352/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.090860843 seconds)
    (353/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.271967093 seconds)
    (354/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 2.255914825 seconds)
    (355/608) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 6.230730527 seconds)
    (356/608) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 3.780716986 seconds)
    (357/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.081183874 seconds)
    (358/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 2.096201782 seconds)
    (359/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.246779158 seconds)
    (360/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.195496685 seconds)
    (361/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.011565395 seconds)
    (362/608) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.595167075 seconds)
    (363/608) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.816256721 seconds)
    (364/608) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.358145111 seconds)
    (365/608) benchmarking ("sumeach", "Array{Float64, 3}")...
    done (took 2.08808806 seconds)
    (366/608) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 2.227904345 seconds)
    (367/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.261132245 seconds)
    (368/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.311065119 seconds)
    (369/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.115593184 seconds)
    (370/608) benchmarking ("sumlinear", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.14834716 seconds)
    (371/608) benchmarking ("sumelt_boundscheck", "Matrix{Int64}")...
    done (took 2.815446392 seconds)
    (372/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.521961692 seconds)
    (373/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.172901378 seconds)
    (374/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 5.020355573 seconds)
    (375/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.085626655 seconds)
    (376/608) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.750952104 seconds)
    (377/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 6.527334875 seconds)
    (378/608) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.15704787 seconds)
    (379/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.343117681 seconds)
    (380/608) benchmarking ("sumvector", "BitMatrix")...
    done (took 2.511490079 seconds)
    (381/608) benchmarking ("sumrange", "Matrix{Int64}")...
    done (took 7.118446447 seconds)
    (382/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 7.104886593 seconds)
    (383/608) benchmarking ("sumcolon", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 7.24623434 seconds)
    (384/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.621314668 seconds)
    (385/608) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 3.750101809 seconds)
    (386/608) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.777768024 seconds)
    (387/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.390109793 seconds)
    (388/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.5656092 seconds)
    (389/608) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.644150563 seconds)
    (390/608) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.815883738 seconds)
    (391/608) benchmarking ("sumelt", "Matrix{Int64}")...
    done (took 2.817363124 seconds)
    (392/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.253415028 seconds)
    (393/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.189392036 seconds)
    (394/608) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.458467247 seconds)
    (395/608) benchmarking ("sumlinear_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.987906907 seconds)
    (396/608) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.446794954 seconds)
    (397/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.347491081 seconds)
    (398/608) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 2.079988014 seconds)
    (399/608) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.022502792 seconds)
    (400/608) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 2.229808605 seconds)
    (401/608) benchmarking ("sumeach_view", "Matrix{Float64}")...
    done (took 7.086032923 seconds)
    (402/608) benchmarking ("sumcolon", "Matrix{Float64}")...
    done (took 7.189873626 seconds)
    (403/608) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.707139408 seconds)
    (404/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.356345189 seconds)
    (405/608) benchmarking ("sumlogical_view", "Matrix{Float64}")...
    done (took 6.175828125 seconds)
    (406/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.858092845 seconds)
    (407/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.657962205 seconds)
    (408/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.219513194 seconds)
    (409/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.102226867 seconds)
    (410/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 4.656317446 seconds)
    (411/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 2.099298372 seconds)
    (412/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.094704972 seconds)
    (413/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 7.074072731 seconds)
    (414/608) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.600693545 seconds)
    (415/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.451948652 seconds)
    (416/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.090213027 seconds)
    (417/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.029846123 seconds)
    (418/608) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.829015663 seconds)
    (419/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 5.024579023 seconds)
    (420/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.253074479 seconds)
    (421/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.1945612 seconds)
    (422/608) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 2.116518482 seconds)
    (423/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.883762449 seconds)
    (424/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.180902268 seconds)
    (425/608) benchmarking ("sumcolon_view", "Matrix{Int64}")...
    done (took 2.225026635 seconds)
    (426/608) benchmarking ("sumvector", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.591837914 seconds)
    (427/608) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.231261568 seconds)
    (428/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.118579316 seconds)
    (429/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.021645415 seconds)
    (430/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.168708381 seconds)
    (431/608) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 5.052845282 seconds)
    (432/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.753396542 seconds)
    (433/608) benchmarking ("sumeach", "Matrix{Int64}")...
    done (took 2.853120804 seconds)
    (434/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.10171911 seconds)
    (435/608) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 2.079152367 seconds)
    (436/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.233604688 seconds)
    (437/608) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.059819638 seconds)
    (438/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.121407458 seconds)
    (439/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.081418256 seconds)
    (440/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.375003236 seconds)
    (441/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.514736937 seconds)
    (442/608) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.525310905 seconds)
    (443/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.235827465 seconds)
    (444/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.421694259 seconds)
    (445/608) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.350189362 seconds)
    (446/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 7.044641472 seconds)
    (447/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.176115656 seconds)
    (448/608) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.303370437 seconds)
    (449/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 5.025038651 seconds)
    (450/608) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.075572862 seconds)
    (451/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.148516267 seconds)
    (452/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 2.124512923 seconds)
    (453/608) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.150614962 seconds)
    (454/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.075163344 seconds)
    (455/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.083992324 seconds)
    (456/608) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.313858824 seconds)
    (457/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.27947943 seconds)
    (458/608) benchmarking ("sumeach_view", "Matrix{Int64}")...
    done (took 7.225367846 seconds)
    (459/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 7.145086007 seconds)
    (460/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.171285328 seconds)
    (461/608) benchmarking ("sumeach", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 2.098044276 seconds)
    (462/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.22989358 seconds)
    (463/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 7.214452352 seconds)
    (464/608) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 2.080237113 seconds)
    (465/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.083182021 seconds)
    (466/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 7.075521785 seconds)
    (467/608) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 2.325875956 seconds)
    (468/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 7.07520806 seconds)
    (469/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 5.04040596 seconds)
    (470/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.258820572 seconds)
    (471/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.156836014 seconds)
    (472/608) benchmarking "sub2ind"...
    done (took 7.457755809 seconds)
    (473/608) benchmarking ("sumelt_boundscheck", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.156510333 seconds)
    (474/608) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.667839619 seconds)
    (475/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.085817052 seconds)
    (476/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 6.791659483 seconds)
    (477/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.228858492 seconds)
    (478/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.579573232 seconds)
    (479/608) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.07823267 seconds)
    (480/608) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 5.174553911 seconds)
    (481/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 2.143126701 seconds)
    (482/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 7.080649511 seconds)
    (483/608) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.529001258 seconds)
    (484/608) benchmarking "6d"...
    done (took 3.741569687 seconds)
    (485/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.231547738 seconds)
    (486/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.756390659 seconds)
    (487/608) benchmarking ("sumrange", "1:100000")...
    done (took 3.006383892 seconds)
    (488/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.170556521 seconds)
    (489/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.12861428 seconds)
    (490/608) benchmarking ("sumrange_view", "Matrix{Int64}")...
    done (took 2.08107705 seconds)
    (491/608) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 7.084957047 seconds)
    (492/608) benchmarking ("sumvector", "Matrix{Int64}")...
    done (took 2.669095561 seconds)
    (493/608) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 2.441169369 seconds)
    (494/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 7.078101558 seconds)
    (495/608) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.534704419 seconds)
    (496/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.149418675 seconds)
    (497/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.086124705 seconds)
    (498/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 2.825400052 seconds)
    (499/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 3.555058832 seconds)
    (500/608) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 7.077860655 seconds)
    (501/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 4.881509488 seconds)
    (502/608) benchmarking ("sumrange", "100000:-1:1")...
    done (took 3.035660812 seconds)
    (503/608) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.559293618 seconds)
    (504/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.677413327 seconds)
    (505/608) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 7.080611148 seconds)
    (506/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.2284501 seconds)
    (507/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.084896499 seconds)
    (508/608) benchmarking ("sumelt", "Matrix{Float64}")...
    done (took 5.030440182 seconds)
    (509/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 7.079463795 seconds)
    (510/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 5.103449227 seconds)
    (511/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.585943366 seconds)
    (512/608) benchmarking ("sumlinear_view", "Matrix{Int64}")...
    done (took 7.089827896 seconds)
    (513/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.593810588 seconds)
    (514/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.258322119 seconds)
    (515/608) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.219713427 seconds)
    (516/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.079391592 seconds)
    (517/608) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 2.083204127 seconds)
    (518/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 7.078969504 seconds)
    (519/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.261117837 seconds)
    (520/608) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.668441144 seconds)
    (521/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.105218233 seconds)
    (522/608) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.340393434 seconds)
    (523/608) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.235783902 seconds)
    (524/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.078206536 seconds)
    (525/608) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.60670812 seconds)
    (526/608) benchmarking ("sumcolon", "BitMatrix")...
    done (took 2.743455428 seconds)
    (527/608) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.283375183 seconds)
    (528/608) benchmarking ("sumcartesian_view", "Array{Float64, 3}")...
    done (took 2.13238065 seconds)
    (529/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.190634861 seconds)
    (530/608) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.438474821 seconds)
    (531/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.919378363 seconds)
    (532/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.226814754 seconds)
    (533/608) benchmarking ("sumeach", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.616817818 seconds)
    (534/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.238786493 seconds)
    (535/608) benchmarking ("sumvector_view", "1:100000")...
    done (took 2.081119527 seconds)
    (536/608) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.315535377 seconds)
    (537/608) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.330946533 seconds)
    (538/608) benchmarking ("sumlinear", "1:100000")...
    done (took 2.081338017 seconds)
    (539/608) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 2.258340033 seconds)
    (540/608) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.080723312 seconds)
    (541/608) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.420487467 seconds)
    (542/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 4.358110979 seconds)
    (543/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 2.628381848 seconds)
    (544/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.181334182 seconds)
    (545/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 6.153364116 seconds)
    (546/608) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 3.296972202 seconds)
    (547/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 7.094884918 seconds)
    (548/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.602595819 seconds)
    (549/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.523615821 seconds)
    (550/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.164373727 seconds)
    (551/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.078103591 seconds)
    (552/608) benchmarking ("sumcartesian_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.094999031 seconds)
    (553/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 7.078544907 seconds)
    (554/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 5.173552599 seconds)
    (555/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.666575358 seconds)
    (556/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.277420977 seconds)
    (557/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.242414655 seconds)
    (558/608) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.301582923 seconds)
    (559/608) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.599275385 seconds)
    (560/608) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 2.083710763 seconds)
    (561/608) benchmarking ("sumeach", "Matrix{Float64}")...
    done (took 5.031631237 seconds)
    (562/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 7.081460584 seconds)
    (563/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 2.109019819 seconds)
    (564/608) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 2.082920884 seconds)
    (565/608) benchmarking ("sumelt", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.029767558 seconds)
    (566/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.164021297 seconds)
    (567/608) benchmarking "2d"...
    done (took 2.933274792 seconds)
    (568/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.281615311 seconds)
    (569/608) benchmarking "7d"...
    done (took 2.400066382 seconds)
    (570/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 5.030654996 seconds)
    (571/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.239211045 seconds)
    (572/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.070197431 seconds)
    (573/608) benchmarking ("sumlinear", "Matrix{Float64}")...
    done (took 5.05886513 seconds)
    (574/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 3.559354222 seconds)
    (575/608) benchmarking ("sumrange", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 7.08289439 seconds)
    (576/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.376954707 seconds)
    (577/608) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.031840657 seconds)
    (578/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.085450929 seconds)
    (579/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 5.034260416 seconds)
    (580/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 6.212220465 seconds)
    (581/608) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.219199039 seconds)
    (582/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.444625434 seconds)
    (583/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 7.082376623 seconds)
    (584/608) benchmarking ("sumelt", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.776620251 seconds)
    (585/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.090929987 seconds)
    (586/608) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 7.082620679 seconds)
    (587/608) benchmarking ("mapr_access", "BitMatrix")...
    done (took 7.083492795 seconds)
    (588/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.171899968 seconds)
    (589/608) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 2.083706445 seconds)
    (590/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.324792237 seconds)
    (591/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.530784762 seconds)
    (592/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.345765227 seconds)
    (593/608) benchmarking ("sumcartesian", "Array{Float64, 3}")...
    done (took 2.241120224 seconds)
    (594/608) benchmarking ("sumelt", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.883685601 seconds)
    (595/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 5.170603007 seconds)
    (596/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.049760262 seconds)
    (597/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.128666027 seconds)
    (598/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 4.892152523 seconds)
    (599/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.630233114 seconds)
    (600/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 6.222304575 seconds)
    (601/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 2.27186848 seconds)
    (602/608) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.876075706 seconds)
    (603/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 5.058566303 seconds)
    (604/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.604002367 seconds)
    (605/608) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.10546703 seconds)
    (606/608) benchmarking ("mapr_access", "Matrix{Float64}")...
    done (took 3.786288204 seconds)
    (607/608) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.08998186 seconds)
    (608/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.085123103 seconds)
  done (took 2414.396845214 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 7.082612416 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 7.152403374 seconds)
    (3/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 7.161035386 seconds)
    (4/8) benchmarking ("collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.160076101 seconds)
    (5/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.106850766 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.116246897 seconds)
    (7/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.152502354 seconds)
    (8/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 7.096437955 seconds)
  done (took 59.038421547 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hcat", 500)...
    done (took 7.081956385 seconds)
    (2/17) benchmarking "4467"...
    done (took 5.114261476 seconds)
    (3/17) benchmarking ("vcat_setind", 5)...
    done (took 2.097881994 seconds)
    (4/17) benchmarking ("catnd_setind", 500)...
    done (took 7.083705162 seconds)
    (5/17) benchmarking ("vcat", 500)...
    done (took 7.086752936 seconds)
    (6/17) benchmarking ("vcat", 5)...
    done (took 2.095128518 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.297805836 seconds)
    (8/17) benchmarking ("hvcat_setind", 5)...
    done (took 2.123711153 seconds)
    (9/17) benchmarking ("vcat_setind", 500)...
    done (took 7.083377327 seconds)
    (10/17) benchmarking ("hvcat", 5)...
    done (took 2.095045412 seconds)
    (11/17) benchmarking ("hcat_setind", 500)...
    done (took 7.082845606 seconds)
    (12/17) benchmarking ("hcat", 5)...
    done (took 2.110849312 seconds)
    (13/17) benchmarking ("hvcat", 500)...
    done (took 7.084192553 seconds)
    (14/17) benchmarking ("catnd", 500)...
    done (took 7.086441848 seconds)
    (15/17) benchmarking ("hcat_setind", 5)...
    done (took 2.100848092 seconds)
    (16/17) benchmarking ("catnd", 5)...
    done (took 2.333666885 seconds)
    (17/17) benchmarking ("hvcat_setind", 500)...
    done (took 7.108925818 seconds)
  done (took 81.124112527 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("gramschmidt!", 500)...
    done (took 7.116028212 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.789051964 seconds)
    (3/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 7.088925071 seconds)
    (4/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.314249325 seconds)
    (5/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 7.099569034 seconds)
    (6/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.287046408 seconds)
    (7/12) benchmarking ("gramschmidt!", 100)...
    done (took 7.086234001 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 7.086677196 seconds)
    (9/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.112460119 seconds)
    (10/12) benchmarking ("gramschmidt!", 1000)...
    done (took 8.741798793 seconds)
    (11/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 7.160300771 seconds)
    (12/12) benchmarking ("gramschmidt!", 250)...
    done (took 7.112863689 seconds)
  done (took 90.036940822 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 4)...
    done (took 2.084667335 seconds)
    (2/5) benchmarking ("setindex!", 3)...
    done (took 2.086135443 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 2.086142172 seconds)
    (4/5) benchmarking ("setindex!", 1)...
    done (took 2.085287812 seconds)
    (5/5) benchmarking ("setindex!", 2)...
    done (took 2.085266705 seconds)
  done (took 12.445627232 seconds)
done (took 2954.814659755 seconds)
(18/20) benchmarking "misc"...
  (1/15) benchmarking "fastmath many args"...
  done (took 2.368005668 seconds)
  (2/15) benchmarking "repeat"...
    (1/2) benchmarking (200, 24, 1)...
    done (took 2.210875444 seconds)
    (2/2) benchmarking (200, 1, 24)...
    done (took 2.184086353 seconds)
  done (took 6.40651747 seconds)
  (3/15) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 2.143658821 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.216799477 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.295460114 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 2.222100639 seconds)
  done (took 10.902907905 seconds)
  (4/15) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.364273771 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.589072421 seconds)
  done (took 6.964134877 seconds)
  (5/15) benchmarking "perf highdim generator"...
  done (took 2.548335783 seconds)
  (6/15) benchmarking "18129"...
  done (took 7.106819678 seconds)
  (7/15) benchmarking "20517"...
  done (took 2.654656189 seconds)
  (8/15) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 7.086923672 seconds)
    (2/3) benchmarking "Float64"...
    done (took 7.08805067 seconds)
    (3/3) benchmarking "Float16"...
    done (took 7.089046026 seconds)
  done (took 23.292530328 seconds)
  (9/15) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 2.085185218 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 2.084789892 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 2.087273038 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 2.089492666 seconds)
  done (took 10.364458549 seconds)
  (10/15) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 7.088760144 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 4.09546944 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 7.089127853 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 2.10024419 seconds)
  done (took 22.386467699 seconds)
  (11/15) benchmarking "foldl"...
    (1/3) benchmarking "foldl(+, filter(...))"...
    done (took 2.244785418 seconds)
    (2/3) benchmarking "foldl(+, filter(...); init = 0.0)"...
    done (took 2.166276556 seconds)
    (3/3) benchmarking "foldl(+, flatten(filter(...)))"...
    done (took 2.835605173 seconds)
  done (took 9.260702897 seconds)
  (12/15) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.896924024 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.464684428 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.881853844 seconds)
  done (took 10.259530509 seconds)
  (13/15) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 3.034493722 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 3.1087772 seconds)
  done (took 8.157724277 seconds)
  (14/15) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.239845121 seconds)
  done (took 4.257451478 seconds)
  (15/15) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.562760728 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.566644677 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.934332053 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.940170482 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 3.095550873 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.396486559 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.449410503 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.405151396 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.764655473 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.591046874 seconds)
  done (took 28.718753943 seconds)
done (took 157.655868146 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 4.024231355 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.491448733 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.269910328 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.757511428 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.18407802 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.268171983 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.159775936 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.54931835 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 3.358825177 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 3.360655796 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 4.129523152 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.183218518 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.153615696 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.501538813 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.158201935 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.446276759 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.501054545 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 4.00207778 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.069686954 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.477476295 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.166549324 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 3.63726002 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.808546198 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 3.637580567 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.503905411 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.217968944 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 4.153647038 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.448842379 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.33756979 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 4.158320055 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.223407746 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.746684162 seconds)
  done (took 184.100906371 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 7.08980882 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.09117391 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.090191657 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 7.092612658 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.008246946 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.09400573 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.096114486 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 7.08977545 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.792168842 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.791784133 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 7.093356737 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.007517384 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.09326855 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.09203777 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.096266704 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.092753965 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.99995721 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 7.092015325 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 7.091291132 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 7.092047682 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.094048084 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.878003755 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 7.094083911 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.878767873 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.997049609 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.093616147 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 7.091225711 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.093041933 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 7.092991289 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 7.09423046 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.092205152 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 7.09498741 seconds)
  done (took 219.605764229 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 7.09184759 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.09493451 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.090554513 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 7.093249979 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.09359171 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.095185742 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.094348041 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 7.093580221 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 7.093854854 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 7.097629648 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 7.098166798 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.095927254 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.097432637 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.094420074 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.097076674 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.093744254 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.092389244 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 7.092700727 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 7.094257539 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 7.09330389 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.09575126 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 7.094217655 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 7.09744138 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 7.095016395 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.09841653 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.095864522 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 7.098925228 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.095845791 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 7.095392326 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 7.094598023 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.096432635 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 7.097213363 seconds)
  done (took 229.071836243 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.394230107 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 2.094864081 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 2.096213764 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 3.869348018 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 2.095573212 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 2.094273043 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 3.86243475 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.391561513 seconds)
  done (took 22.927136675 seconds)
done (took 657.734173079 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.809957665 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.982495786 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.266928769 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 2.126402637 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.718867986 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.191834278 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 2.123636314 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.21581784 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.876286119 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.233542494 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.609434998 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 2.12782063 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 3.01325434 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 2.164524653 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.274132312 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.198228779 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.55711882 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.897922597 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.298877036 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.92358024 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.360334505 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 3.093123971 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.233472893 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.938695793 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.626811024 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.128927828 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.225035511 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.569153485 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 2.129760682 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.400703618 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.163049721 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.526261567 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 2.145922461 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 2.122917852 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.191511297 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.17207864 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.448032479 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 2.141406892 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.260227484 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.873291536 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.931585378 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.749923958 seconds)
  done (took 113.063556016 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 2.105070187 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 2.104228516 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 2.100652099 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 2.09945032 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 2.100314582 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 2.101432486 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 2.101322766 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 2.102172174 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 2.100950073 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 2.102351327 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 2.100716504 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 2.103550903 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 2.102154337 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 2.124033694 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 2.102384166 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 2.102238416 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 2.102562891 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 2.104995937 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 2.103341584 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 2.102971289 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 2.102026016 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 2.101844903 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 2.095793135 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 2.103002807 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 2.103401797 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 2.102461058 seconds)
  done (took 56.720407114 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 2.096910703 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.31341817 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.465096819 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.140193328 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 2.098761717 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 2.103141023 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 2.140124197 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 2.110351404 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 2.102969543 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 2.102439829 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.232811833 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 2.107277823 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 2.116785958 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.457045612 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 2.134437348 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 2.100096323 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 2.098466667 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 2.099996699 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.32152942 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.119715939 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.138868579 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 2.106832042 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 2.159459129 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 2.117086106 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 2.100895441 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.100324813 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 2.105649679 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.64505002 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 2.114542405 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.231787738 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.166964434 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 2.163193469 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.502543052 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.46612419 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.177784608 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 2.109826679 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 2.100125615 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.280047301 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 2.118239216 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 2.102881005 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.141371434 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 2.11255752 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.468881016 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.819032987 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 2.122888849 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 2.102564978 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.645315114 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.295080659 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.155638717 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 2.112148697 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.464611187 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 2.136981781 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 2.100551043 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 2.100443011 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.144317174 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.110178358 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 2.09970649 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.441331562 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 2.117328424 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.141743818 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 2.109258739 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 2.102340167 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.334449988 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 2.113127872 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.308639629 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 2.114099305 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 2.108777001 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 2.103135981 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.460798604 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 2.140529183 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.80747837 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 2.123534226 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 2.100896459 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.234637232 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.317242169 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.67989468 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 2.119030908 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.322999955 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.529408997 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.153002739 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 2.131467235 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.628683613 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.15652521 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 2.11323397 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 2.098895604 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 2.100500145 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 2.099390939 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.143517751 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 2.140541047 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.738756285 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.8205514 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.466911841 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.157644209 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 2.120164798 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 2.104487871 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.446008882 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 2.117192157 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 2.105058176 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.451210294 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.837109319 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 2.126245164 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 2.107986852 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.792603446 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 2.12297472 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.141456906 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 2.116804618 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.470838848 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 2.13976227 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.146986311 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 2.099599379 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 2.108956899 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 2.109146909 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.141858211 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 2.115927159 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 2.101923261 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.810312504 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.30874433 seconds)
  done (took 263.552135915 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 7.107392301 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 7.1075391 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 7.123571311 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 7.107779356 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 7.117223487 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 2.109295402 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 7.102265121 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 7.101914502 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 2.114621558 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 7.105439143 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 7.107373656 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 7.107614848 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 7.106388825 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 7.105645763 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.133914286 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 2.106052392 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.897744273 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 7.104719143 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 7.105915128 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 7.108910773 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.816240378 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 7.116909107 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 7.108061123 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 7.107607904 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 7.106513031 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 7.107320686 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 7.109994137 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 7.128676164 seconds)
  done (took 174.621370071 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 2.105796418 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.171460065 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 2.11900764 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.172081844 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 2.117385726 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 2.104346094 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.134094466 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 2.146742146 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 2.113890292 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 2.10546209 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 2.106275528 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.147428792 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 2.116384198 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.206448706 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 2.150450705 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.149904008 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.217793 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 2.118281395 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 2.107273982 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 2.105917479 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.175562884 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 2.12470987 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.143492657 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.185252379 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 2.119561613 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.17403144 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 2.125060221 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 2.108519833 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 2.105137328 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.233819178 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 2.131805018 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.148738517 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.155487275 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 2.131977219 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.238995275 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.234811457 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.219292453 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.146161346 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 2.113062225 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 2.106670791 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 2.108890226 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 2.11276621 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.176105182 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 2.136168004 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 2.124337806 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.243932464 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 2.151926553 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 2.106581558 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 2.13383303 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 2.1068313 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 2.12414037 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 2.132966658 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.174557831 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.247157224 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.173772494 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 2.140246413 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.136328116 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.129983719 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 2.107943892 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.209977873 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 2.123865877 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.231320286 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 2.139198968 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 2.113560138 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 2.112129402 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 2.110836939 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.177393197 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.174525112 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.222798173 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 2.122850825 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.230858694 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.191339237 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 2.124598983 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 2.110239781 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 2.110122763 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.179542819 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.227140872 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.188466053 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.193306348 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 2.156052166 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 2.125750467 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 2.109358663 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 2.114449023 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.14866325 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 2.12041043 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.23592998 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.23916278 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 2.12191783 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 2.112775083 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 2.111379238 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 2.111495853 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 2.158597161 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.19242467 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.161436629 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.230001669 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.15917703 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.162295051 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 2.123060341 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 2.131396426 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 2.120932472 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.153475579 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 2.138736918 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 2.128049676 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.586061927 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.162610748 seconds)
  done (took 228.261321804 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.514528418 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.168761201 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.203174627 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.381914511 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.523955496 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 3.392445025 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.161111034 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.177708474 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.176289975 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.318421754 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.21526014 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.241180666 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.16262258 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 2.141946193 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.162926218 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.17272149 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.205875741 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.532322933 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.294385925 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 4.162095122 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 2.171192048 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.481959905 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.497855065 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.542762018 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.212280263 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.630158473 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.807011675 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.273917083 seconds)
  done (took 69.976265691 seconds)
done (took 908.212477844 seconds)
SAVING RESULT...
DONE!
